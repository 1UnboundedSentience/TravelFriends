{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 8c9fbab19495d2b63fcb","webpack:///./src/index.js","webpack:///./~/sip.js/src/SIP.js","webpack:///./~/sip.js/package.json","webpack:///./~/sip.js/src/Utils.js","webpack:///./~/sip.js/src/Logger.js","webpack:///./~/sip.js/src/LoggerFactory.js","webpack:///./~/sip.js/src/EventEmitter.js","webpack:///./~/sip.js/src/Constants.js","webpack:///./~/sip.js/src/Exceptions.js","webpack:///./~/sip.js/src/Timers.js","webpack:///./~/sip.js/src/Transport.js","webpack:///./~/sip.js/src/Parser.js","webpack:///./~/sip.js/src/SIPMessage.js","webpack:///./~/sip.js/src/URI.js","webpack:///./~/sip.js/src/NameAddrHeader.js","webpack:///./~/sip.js/src/Transactions.js","webpack:///./~/sip.js/src/Dialog/RequestSender.js","webpack:///./~/sip.js/src/Dialogs.js","webpack:///./~/sip.js/src/RequestSender.js","webpack:///./~/sip.js/src/RegisterContext.js","webpack:///./~/sip.js/src/MediaHandler.js","webpack:///./~/sip.js/src/ClientContext.js","webpack:///./~/sip.js/src/ServerContext.js","webpack:///./~/sip.js/src/Session/DTMF.js","webpack:///./~/sip.js/src/Session.js","webpack:///./~/sip.js/src/Subscription.js","webpack:///./~/sip.js/src/WebRTC/MediaHandler.js","webpack:///./~/sip.js/src/WebRTC/MediaStreamManager.js","webpack:///./~/sip.js/src/WebRTC.js","webpack:///./~/sip.js/src/UA.js","webpack:///./~/sip.js/src/Hacks.js","webpack:///./~/sip.js/src/SanityCheck.js","webpack:///./~/sip.js/src/DigestAuthentication.js","webpack:///./~/sip.js/src/Grammar/dist/Grammar.js","webpack:///./src/emitter.js","webpack:///./src/userAgent.js","webpack:///./src/phoneLine.js","webpack:///./src/utils.js","webpack:///./src/eventNames.js","webpack:///./src/dom.js","webpack:///./src/audioHelper.js","webpack:///./src/audio.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,SAAS;AACT,6DAA6D;AAC7D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,SAAS;AACT,qB;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;;;;;;ACnhBA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,sBAAsB,oBAAoB;AAC1C,KAAK;AACL;AACA,sBAAsB,kBAAkB;AACxC;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;ACrDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,kBAAkB;AAClB;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,E;;;;;;ACxGA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,wDAAwD,EAAE;AAC1D,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA,aAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,UAAU;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,mBAAmB;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,mBAAmB,gBAAgB,gBAAgB;;AAEnD,aAAa,WAAW;AACxB,WAAW,MAAM,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;ACheA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;AC1BD;;AAEA;AACA;AACA,uBAAuB;AACvB,qBAAqB;AACrB,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA,sBAAsB,uBAAuB,EAAE;AAC/C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA,uBAAuB,aAAa,EAAE;AACtC;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA,uBAAuB,iBAAiB,EAAE;AAC1C;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACxJA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY,OAAO;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;AC/MA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/JA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;ACnDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;ACvCA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,2BAA2B;AACxC,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACvSA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACnQA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,eAAe;AAC5B;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;;AAEA;AACA,iBAAiB,cAAc;AAC/B;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA,kBAAkB;;AAElB;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,cAAc;AAC/B;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,iBAAiB;AAC/B;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wCAAwC;AACxC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA,kBAAkB;AAClB;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,SAAS;AACnB,UAAU,SAAS;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,UAAU,YAAY;AACtB;AACA;AACA;;AAEA;AACA;;AAEA,QAAQ,YAAY;AACpB;AACA;;AAEA;AACA,YAAY;AACZ,GAAG;AACH,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe,cAAc;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;;AAEA,QAAQ,YAAY;AACpB;AACA;;AAEA;;AAEA;AACA,YAAY;AACZ,GAAG;AACH,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACviBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,eAAe,EAAE;AACvC;AACA;AACA;AACA,KAAK;;AAEL;AACA,sBAAsB,aAAa,EAAE;AACrC;AACA;AACA;AACA,KAAK;;AAEL;AACA,sBAAsB,aAAa,EAAE;AACrC;AACA;AACA;AACA,KAAK;;AAEL;AACA,sBAAsB,aAAa,EAAE;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;;AAEf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;;;;;;ACxMA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,oBAAoB,EAAE;AAC7C;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;;;;;;AC/FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,kBAAkB;AAC5B,UAAU,oBAAoB;AAC9B,UAAU,cAAc;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2DAA2D;;AAE3D;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA,UAAU,kBAAkB;AAC5B,UAAU,oBAAoB;AAC9B,UAAU,cAAc;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2DAA2D;;AAE3D;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,oBAAoB;AAC/B,WAAW,cAAc;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2DAA2D;;AAE3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,UAAU,oBAAoB;AAC9B,UAAU,OAAO;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,oBAAoB;AAC9B,UAAU,OAAO;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,oBAAoB;AAC/B;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5sBA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC5FA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,yCAAyC;AACpD,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,oBAAoB;AACjC,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc;AACd;;AAEA;AACA;AACA;AACA;;AAEA,4BAA4B,uDAAuD;;AAEnF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA,GAAG;;AAEH;AACA,YAAY,oBAAoB;AAChC,cAAc;AACd;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;AC5PA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACzIA;;AAEA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA,sBAAsB;AACtB,sBAAsB;AACtB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,+EAA+E,eAAe;;AAE9F;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,EAAE;AACxB;AACA;AACA,sBAAsB,EAAE;AACxB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,sDAAsD;AACtD;;;AAGA;AACA;;AAEA;AACA,sBAAsB,EAAE;AACxB;AACA;AACA,sBAAsB,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;;;;;;ACpRA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,8BAA8B;;AAE1C,UAAU,4BAA4B;;AAEtC;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;;;;;;ACjDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,0BAA0B,2BAA2B;AACrD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,EAAE;AACpB;AACA;;AAEA,kBAAkB,EAAE;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;ACjHA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;AClHA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,EAAE;AACpB;AACA;;AAEA,kBAAkB,EAAE;AACpB;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACtLA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,oCAAoC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;;AAEA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,8BAA8B,oDAAoD;;AAElF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP,qCAAqC,mBAAmB;AACxD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,kDAAkD;AAClD;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,EAAE;AAC1D,uDAAuD,IAAI;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,mBAAmB;AACvD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB,EAAE;AACtB;AACA,oBAAoB,EAAE;AACtB;;AAEA,oCAAoC,mBAAmB;;AAEvD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,sCAAsC,0BAA0B;AAChE;;AAEA;AACA;AACA,kCAAkC,oBAAoB;AACtD;AACA;AACA,OAAO;AACP;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,yBAAyB,yBAAyB;AAClD,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA,oCAAoC,mBAAmB;AACvD;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD;;AAEjD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,cAAc,+BAA+B;AAClE,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB;;AAEnB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,mDAAmD;AACnD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,oCAAoC,oBAAoB;AACxD;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mBAAmB;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA,4BAA4B,0BAA0B;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;AC9mEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,sEAAsE;AACtE;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA,KAAK,mBAAmB,EAAE;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK,6CAA6C;AAClD,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC;AACpC;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,yBAAyB,iBAAiB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;;;;;AC/RA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC,GAAG;;AAEH;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,0DAA0D,sBAAsB;;AAEhF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,+DAA+D;AAC/D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA,IAAI;;AAEJ,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,aAAa,oDAAoD;AACjE;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,IAAI;;AAEJ;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,IAAI;;AAEJ,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,EAAE;AACT;AACA,IAAI;;AAEJ,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,EAAE;AACT;AACA,IAAI;;AAEJ,SAAS;AACT;AACA;AACA,IAAI;;AAEJ,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;;AAEJ;AACA,aAAa;AACb;AACA;AACA;AACA,IAAI;;AAEJ,wBAAwB;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,IAAI;;AAEJ,cAAc;AACd;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;;AAEJ,qBAAqB;AACrB;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,IAAI;;AAEJ,oBAAoB;AACpB;AACA,IAAI;;AAEJ,oBAAoB;AACpB;AACA;AACA,CAAC;;AAED;AACA;AACA;;;;;;;ACzfA;AACA;AACA;;AAEA;AACA;AACA,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd,2CAA2C;;AAE3C;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI;;AAEJ,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,CAAC;;AAED;AACA;AACA;;;;;;;AC9IA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACnCA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6CAA6C,SAAS;AACtD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,YAAY;AACZ,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc;AACd,cAAc;AACd;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oBAAoB,qBAAqB;AACzC,GAAG;AACH;AACA,sBAAsB,qBAAqB;AAC3C,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,aAAa;AACb;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA,+BAA+B,yBAAyB;AACxD;;;AAGA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,cAAc;AAC7B;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,cAAc;AAC7B;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,aAAa;AACvD;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sGAAsG,UAAU;;AAEhH;AACA,iEAAiE,UAAU;AAC3E;AACA;AACA,2DAA2D,UAAU;;AAErE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qFAAqF,sDAAsD;AAC3I;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4CAAwE;AACxE,OAAO;AACP;AACA;;AAEA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,yBAAyB,GAAG,yBAAyB;AACnF,0CAA0C,eAAe;AACzD;AACA;AACA,sBAAsB,kBAAkB;AACxC,OAAO;AACP;AACA,qBAAqB,cAAc;AACnC;AACA,8BAA8B;AAC9B;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,6FAA6F,aAAa;;AAE1G;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,cAAc;AACnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;AC58CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,iBAAiB;;AAEtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACzHA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU,cAAc;AACxB;AACA;;AAEA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;ACjOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,UAAU,oBAAoB;AAC9B,UAAU,OAAO;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACvKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,0DAA0D;;AAE1D,uBAAuB;;AAEvB,gCAAgC,qcAAqc;AACre;;AAEA;AACA;AACA,WAAW,4DAA4D;AACvE;AACA,WAAW,sDAAsD;AACjE;AACA,WAAW,4DAA4D;AACvE;AACA,WAAW,kEAAkE;AAC7E;AACA,WAAW,kEAAkE;AAC7E;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,uDAAuD;AAClE;AACA,WAAW,kEAAkE;AAC7E,YAAY;AACZ,WAAW,2BAA2B,oBAAoB,KAAK;AAC/D;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,oDAAoD;AAC/D;AACA;AACA,WAAW,oDAAoD;AAC/D,6BAA6B,wBAAwB,EAAE;AACvD;AACA;AACA,sBAAsB,WAAW,EAAE;AACnC,sBAAsB,WAAW,EAAE;AACnC;AACA,4CAA4C,EAAE;AAC9C;AACA,WAAW,sDAAsD;AACjE;AACA,WAAW,0EAA0E;AACrF;AACA,WAAW,sEAAsE;AACjF;AACA,WAAW,sDAAsD;AACjE;AACA,WAAW,oDAAoD;AAC/D;AACA,0CAA0C,EAAE;AAC5C;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,wDAAwD;AACnE;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,oDAAoD;AAC/D,YAAY;AACZ,WAAW,2BAA2B,oBAAoB,KAAK;AAC/D,YAAY;AACZ,WAAW,2BAA2B,oBAAoB,KAAK;AAC/D,sBAAsB,WAAW,EAAE;AACnC,sBAAsB,WAAW,EAAE;AACnC,sBAAsB,WAAW,EAAE;AACnC,sBAAsB,WAAW,EAAE;AACnC,sBAAsB,WAAW,EAAE;AACnC,sBAAsB,WAAW,EAAE;AACnC,sBAAsB,WAAW,EAAE;AACnC,sBAAsB,WAAW,EAAE;AACnC,sBAAsB,SAAS,EAAE,EAAE;AACnC,sBAAsB,WAAW,EAAE;AACnC,sBAAsB,YAAY,EAAE;AACpC;AACA,WAAW,sDAAsD;AACjE;AACA,WAAW,sDAAsD;AACjE;AACA,WAAW,0DAA0D;AACrE;AACA,kDAAkD,EAAE;AACpD;AACA,WAAW,sDAAsD;AACjE;AACA,WAAW,8DAA8D;AACzE;AACA,WAAW,kEAAkE;AAC7E;AACA,WAAW,8DAA8D;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wEAAwE;AACxE,iCAAiC;AACjC;AACA,WAAW,0DAA0D;AACrE;AACA,WAAW,wDAAwD;AACnE;AACA,qEAAqE,EAAE;AACvE;AACA,mFAAmF;AACnF;AACA,qDAAqD,EAAE;AACvD;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;AACA,0CAA0C,EAAE;AAC5C;AACA,WAAW,0EAA0E;AACrF;AACA,WAAW,wEAAwE;AACnF;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA,WAAW,sDAAsD;AACjE;AACA;AACA,0CAA0C,EAAE;AAC5C;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA,WAAW,sDAAsD;AACjE;AACA,WAAW,sDAAsD;AACjE;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,sDAAsD;AACjE;AACA,WAAW,oDAAoD;AAC/D;AACA,WAAW,sDAAsD;AACjE;AACA;AACA;AACA,0CAA0C,EAAE;AAC5C;AACA,WAAW,sEAAsE;AACjF;AACA,WAAW,wDAAwD;AACnE;AACA,WAAW,wDAAwD;AACnE;AACA,WAAW,0DAA0D;AACrE;AACA,WAAW,wDAAwD;AACnE;AACA;AACA,uFAAuF,EAAE;AACzF;AACA,WAAW,4DAA4D;AACvE;AACA,WAAW,4DAA4D;AACvE;AACA,WAAW,sDAAsD;AACjE;AACA;AACA,6EAA6E,EAAE;AAC/E;AACA,WAAW,gEAAgE;AAC3E;AACA;AACA,mEAAmE,EAAE;AACrE;AACA,WAAW,0DAA0D;AACrE;AACA;AACA,yDAAyD,EAAE;AAC3D;AACA,WAAW,8DAA8D;AACzE;AACA;AACA,iEAAiE,EAAE;AACnE;AACA,WAAW,sDAAsD;AACjE;AACA;AACA,kEAAkE,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qGAAqG;AACrG,2BAA2B,sBAAsB,EAAE;AACnD,4BAA4B,uBAAuB,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,WAAW,sDAAsD;AACjE;AACA,kDAAkD,EAAE;AACpD,WAAW,wDAAwD;AACnE;AACA,wDAAwD,EAAE;AAC1D;AACA,WAAW,8DAA8D;AACzE;AACA,WAAW,wDAAwD;AACnE;AACA,WAAW,4DAA4D;AACvE;AACA,WAAW,gEAAgE;AAC3E;AACA,WAAW,wDAAwD;AACnE;AACA,WAAW,8DAA8D;AACzE;AACA,WAAW,kEAAkE;AAC7E;AACA,WAAW,oEAAoE;AAC/E;AACA,WAAW,8DAA8D;AACzE;AACA,WAAW,4DAA4D;AACvE;;AAEA;AACA,iDAAiD,EAAE;AACnD;AACA,8EAA8E,EAAE;AAChF;AACA,wDAAwD,EAAE;AAC1D;AACA,sCAAsC,EAAE;AACxC;AACA;AACA;AACA,+CAA+C,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,2DAA2D;AAC3D;AACA;AACA,2DAA2D,GAAG;AAC9D;AACA;AACA;AACA;AACA;AACA,iEAAiE,EAAE;AACnE;AACA,WAAW,oDAAoD;AAC/D;AACA;AACA,uDAAuD,EAAE;AACzD;AACA,WAAW,gEAAgE;AAC3E;AACA;AACA,mEAAmE,EAAE;AACrE;AACA,0EAA0E,EAAE;AAC5E;AACA,WAAW,oDAAoD;AAC/D;AACA,4DAA4D,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA,WAAW,8DAA8D;AACzE;AACA,WAAW,gEAAgE;AAC3E;AACA,WAAW,0DAA0D;AACrE;AACA,WAAW,4DAA4D;AACvE;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,WAAW,kEAAkE;AAC7E;AACA,WAAW,kEAAkE;AAC7E;AACA,WAAW,kEAAkE;AAC7E;AACA,mEAAmE,EAAE;AACrE;AACA,gDAAgD,EAAE;AAClD;AACA,WAAW,0DAA0D;AACrE;AACA,WAAW,4DAA4D;AACvE;AACA,WAAW,4DAA4D;AACvE;AACA,WAAW,4DAA4D;AACvE;AACA,WAAW,wEAAwE;AACnF;AACA,WAAW,gEAAgE;AAC3E;AACA,WAAW,oEAAoE;AAC/E;AACA,WAAW,sDAAsD;AACjE;AACA,qEAAqE,EAAE;AACvE,6BAA6B,eAAe,EAAE;AAC9C;AACA,uEAAuE,EAAE;AACzE;AACA;AACA;AACA,sCAAsC;AACtC,2BAA2B;AAC3B;AACA,WAAW,wDAAwD;AACnE,yBAAyB,eAAe,EAAE;AAC1C;AACA,+DAA+D,EAAE;AACjE,iCAAiC,mBAAmB,EAAE;AACtD;AACA;AACA,iCAAiC;AACjC;AACA,WAAW,8DAA8D;AACzE;AACA,WAAW,4DAA4D;AACvE,2BAA2B,oBAAoB,EAAE;AACjD;AACA,WAAW,8DAA8D;AACzE;AACA,WAAW,4DAA4D;AACvE,2BAA2B,kBAAkB,EAAE;AAC/C;AACA,WAAW,8DAA8D;AACzE,4BAA4B,oBAAoB,EAAE;AAClD;AACA,WAAW,4DAA4D;AACvE;AACA,WAAW,0DAA0D;AACrE,sBAAsB,iBAAiB,EAAE;AACzC;AACA,WAAW,4DAA4D;AACvE,sBAAsB,kBAAkB,EAAE;AAC1C;AACA,WAAW,oEAAoE;AAC/E;AACA,WAAW,wDAAwD;AACnE;AACA,WAAW,kEAAkE;AAC7E;AACA,uEAAuE,EAAE;AACzE;AACA,WAAW,wDAAwD;AACnE;AACA,WAAW,kEAAkE;AAC7E;AACA,WAAW,0DAA0D;AACrE;AACA;AACA,yEAAyE,EAAE;AAC3E;AACA,qEAAqE,EAAE;AACvE;AACA;AACA;AACA,yCAAyC,cAAc;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,qDAAqD;AACrD;AACA;AACA,qDAAqD,GAAG;AACxD;AACA;AACA,uBAAuB;AACvB;AACA,qEAAqE,EAAE;AACvE;AACA,WAAW,8DAA8D;AACzE;AACA,WAAW,gEAAgE;AAC3E;AACA,WAAW,sEAAsE;AACjF;AACA,sDAAsD,EAAE;AACxD;AACA,WAAW,8DAA8D;AACzE;AACA,0FAA0F,EAAE;AAC5F;AACA,6FAA6F,EAAE;AAC/F;AACA,WAAW,wEAAwE;AACnF;AACA,yGAAyG,EAAE;AAC3G;AACA,WAAW,wEAAwE;AACnF;AACA,WAAW,oEAAoE;AAC/E;AACA,WAAW,kEAAkE;AAC7E;AACA,WAAW,gEAAgE;AAC3E;AACA,WAAW,8DAA8D;AACzE;AACA,WAAW,sEAAsE;AACjF;AACA,WAAW,oEAAoE;AAC/E;AACA;AACA;AACA,oCAAoC;AACpC,yBAAyB;AACzB;AACA,WAAW,wDAAwD;AACnE;AACA,yDAAyD,EAAE;AAC3D;AACA,WAAW,4DAA4D;AACvE;AACA,uDAAuD,EAAE;AACzD;AACA,WAAW,kEAAkE;AAC7E;AACA,6DAA6D,EAAE;AAC/D;AACA,WAAW,8DAA8D;AACzE;AACA,yDAAyD,EAAE;AAC3D;AACA,WAAW,4DAA4D;AACvE;AACA;AACA,sEAAsE,EAAE;AACxE;AACA,6DAA6D,EAAE;AAC/D,WAAW,wDAAwD;AACnE,WAAW,wDAAwD;AACnE,WAAW,wDAAwD;AACnE,WAAW,0DAA0D;AACrE;AACA,+DAA+D,EAAE;AACjE;AACA,mDAAmD,EAAE;AACrD;AACA,gFAAgF,EAAE;AAClF;AACA,8DAA8D,EAAE;AAChE;AACA,WAAW,4DAA4D;AACvE;AACA,WAAW,0DAA0D;AACrE;AACA,qDAAqD,EAAE;AACvD;AACA,iDAAiD,EAAE;AACnD;AACA,8CAA8C,EAAE;AAChD;AACA,WAAW,wEAAwE;AACnF;AACA,WAAW,4DAA4D;AACvE;AACA,WAAW,0DAA0D;AACrE;AACA,2DAA2D,EAAE;AAC7D;AACA,0CAA0C;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,2CAA2C;AAC/F;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,0KAA0K;AAC3O,+CAA+C,wJAAwJ;AACvM,wGAAwG,oFAAoF;AAC5L;AACA;AACA,kDAAkD;AAClD;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,mFAAmF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,iNAAiN,oLAAoL,kJAAkJ,8cAA8c,+MAA+M;AAChxC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,sDAAsD,2CAA2C;AACjG;AACA,uDAAuD,qCAAqC;AAC5F;AACA,6DAA6D;AAC7D;AACA;AACA,uCAAuC;AACvC,sCAAsC,yEAAyE,uEAAuE,yEAAyE;AAC/P;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA,oCAAoC,+CAA+C;AACnF;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,8FAA8F;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,gJAAgJ;AAChJ;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,iCAAiC,UAAU;AAC3C;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,oCAAoC;AACpE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,0CAA0C;AACpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0BAA0B,YAAY;AACtC;AACA;AACA,kCAAkC,gBAAgB;AAClD;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yCAAyC,QAAQ;;AAEjD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,oDAAoD;;AAEhF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,yBAAyB,EAAE;AAC1F,+DAA+D,yBAAyB,EAAE;AAC1F,+DAA+D,yBAAyB,EAAE;AAC1F,+DAA+D,yBAAyB,EAAE;AAC1F;;AAEA;AACA;;AAEA,mBAAmB,qBAAqB;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,gBAAgB;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA,kBAAkB,2CAA2C;AAC7D;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8CAA8C,qBAAqB,qBAAqB;AACxF;AACA;AACA;;;;;;;ACzwCA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA,8B;;;;;;ACpEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,6EAA6E;AAC7E;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,0BAA0B;AACpD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC1UA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,8BAA8B;AACjD,0BAA0B,qCAAqC;AAC/D,yBAAyB,oCAAoC;AAC7D,mBAAmB,0CAA0C;AAC7D,sBAAsB,6BAA6B;AACnD,oBAAoB,2BAA2B;AAC/C,sBAAsB,6BAA6B;AACnD,uBAAuB;AACvB,SAAS;AACT;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,6DAA6D;AAC7D;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE,OAAO,EAAE;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2GAA2G;AAC3G;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,EAAE;AAC5B;AACA,iDAAiD,oBAAoB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6CAA6C,EAAE;AAC/C;AACA;AACA,6CAA6C,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET,KAAK;AACL;;AAEA;;AAEA;AACA;AACA,sFAAsF,mBAAmB,EAAE;AAC3G;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,8BAA8B,0BAA0B;AACxD;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET,KAAK;;AAEL;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;;AAEA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,EAAE;AACxC;AACA,sCAAsC,EAAE;AACxC;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACz7BA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA,6BAA6B;AAC7B,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA,E;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjCA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,0B;;;;;;AClCA;;AAEA;;AAEA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;ACnEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,8CAA8C;AAC9C;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,E","file":"./build/ringcentral-web-phone.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebPhone\"] = factory();\n\telse\n\t\troot[\"RingCentral\"] = root[\"RingCentral\"] || {}, root[\"RingCentral\"][\"WebPhone\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 8c9fbab19495d2b63fcb\n **/","var SIP = require('sip.js');\nvar EventEmitter = require('./emitter');\nvar UserAgent = require('./userAgent');\nvar PhoneLine = require('./phoneLine');\nvar AudioHelper = require('./audioHelper');\nvar defer = require('./utils').defer;\nvar uuid = require('./utils').uuid;\nvar extend = require('./utils').extend;\nvar EVENT_NAMES = require('./eventNames');\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n/*--------------------------------------------------------------------------------------------------------------------*/\n\n//Patching proto because of https://developers.google.com/web/updates/2015/07/mediastream-deprecations\nvar mediaStreamManagerProto = Object.create(SIP.WebRTC.MediaStreamManager.prototype, {\n    'release': {\n        value: function release(stream) {\n            var streamId = SIP.WebRTC.MediaStreamManager.streamId(stream);\n            if (this.acquisitions[streamId] === false) {\n                //MediaStream.stop removed in M47\n                if (typeof (stream.stop) === 'function') {\n                    stream.stop();\n                }\n                else {\n                    stream.getTracks().forEach(function(track) {\n                        track.stop()\n                    });\n                }\n            }\n            delete this.acquisitions[streamId];\n        }\n    }\n});\n\nSIP.WebRTC.MediaStreamManager.prototype = mediaStreamManagerProto;\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n/*--------------------------------------------------------------------------------------------------------------------*/\n\n/**\n * @namespace RingCentral\n * @param {boolean} [options.audioHelper] Automatically create audio helper\n * @param {string} [options.uuid] Instance ID\n * @constructor\n */\nfunction WebPhone(options) {\n\n    options = options || {};\n\n    var service = this;\n\n    this.__registerDeferred = undefined;\n    this.__unregisterDeferred = undefined;\n    this.__callDeferred = undefined;\n    this.__sipRegistered = false;\n    this.__sipOutboundEnabled = false;\n\n    if (options.uuid) {\n        this.uuid = options.uuid;\n    } else {\n        localStorage['rc-webPhone-uuid'] = localStorage['rc-webPhone-uuid'] || uuid();\n        this.uuid = localStorage['rc-webPhone-uuid'];\n    }\n\n    this.activeLine = null;\n\n    this.onMute = false;\n    this.onHold = false;\n    this.onRecord = false;\n    this.contact = undefined;\n\n    var ua = new UserAgent();\n\n    this.ua = ua;\n    this.on = ua.on.bind(ua);\n\n    this.username = null;\n\n    this.isRegistered = false;\n    this.isRegistering = false;\n    this.isUnregistering = false;\n\n    this.events = EVENT_NAMES;\n\n    this.causes = SIP.C.causes;\n    this.reasons = SIP.C.REASON_PHRASE;\n\n    //naming convention: incoming or sipincoming?\n    service.on(EVENT_NAMES.sipIncomingCall, function(line) {\n        service.ua.eventEmitter.emit(EVENT_NAMES.incomingCall, line);\n    });\n\n    //naming convention: outgoing or sipoutgoing?\n    service.on(EVENT_NAMES.outgoingCall, function(line) {\n        if (service.activeLine && !service.activeLine.isOnHold()) {\n            service.activeLine.setHold();\n        }\n        service.__callDeferred && service.__callDeferred.resolve(line);\n        service.__callDeferred = null;\n    });\n\n    //naming convention: call or line?\n    service.on([EVENT_NAMES.callEnded, EVENT_NAMES.callFailed], function(call) {\n        //delete activeLine property if the call has ended on the other side\n        if (call && service.activeLine && call === service.activeLine) {\n            service.activeLine = null;\n        }\n    });\n\n    // On Call Failed due to 503 Invite Connection error reconnect the call\n    service.on(EVENT_NAMES.callFailed, function(call, response, cause) {\n        if (response) {\n            switch (true) {\n                //[WRTC-424] Should reconnect the websocket if received 503 on INVITE\n                case (/^503$/.test(response.status_code)):\n                    //This method will throw 'Connection Error', so we just remove it\n                    call.session.onTransportError = function() {};\n                    //Re-register after 500ms\n                    setTimeout(service.reregister.bind(service, true), 500);\n                    break;\n            }\n        }\n    });\n\n\n    // Setting flags for SIP Registration process\n    service.on(EVENT_NAMES.sipRegistered, function(e) {\n        service.__sipRegistered = true;\n        service.__registerDeferred && service.__registerDeferred.resolve(e);\n        service.isRegistered = true;\n        service.isRegistering = false;\n        service.isUnregistering = false;\n        service.isUnregistered = false;\n    });\n\n    service.on([EVENT_NAMES.sipRegistrationFailed, EVENT_NAMES.sipConnectionFailed], function(e) {\n        service.__sipRegistered = false;\n        service.__registerDeferred && service.__registerDeferred.reject(e);\n        service.isRegistered = false;\n        service.isRegistering = false;\n        service.isUnregistering = false;\n        service.isUnregistered = false;\n    });\n\n    service.on(EVENT_NAMES.sipUnRegistered, function(e) {\n        service.__sipRegistered = false;\n        service.__unregisterDeferred && service.__unregisterDeferred.resolve(e);\n        service.isRegistered = false;\n        service.isRegistering = false;\n        service.isUnregistered = true;\n        service.isUnregistering = false;\n    });\n\n    window.addEventListener('unload', function() {\n        service.hangup();\n        service.unregister();\n    });\n\n    this._audioHelper = null;\n    if (options.audioHelper) service.createAudioHelper(options.audioHelper);\n\n    this._appKey = options.appKey;\n    this._appName = options.appName;\n    this._appVersion = options.appVersion;\n\n    this._x_userAgent = (options.appName ? (options.appName + (options.appVersion ? '/' + options.appVersion : '')) + ' ' : '') +\n                      'RCWEBPHONE/' + WebPhone.version;\n\n    this._client_id = options.appkey;\n\n}\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nWebPhone.version = '0.1.0';\n\nWebPhone.PhoneLine = PhoneLine;\nWebPhone.EventEmitter = EventEmitter;\nWebPhone.UserAgent = UserAgent;\nWebPhone.AudioHelper = AudioHelper;\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\n/**\n * @param [options]\n * @return {AudioHelper}\n */\nWebPhone.prototype.createAudioHelper = function(options) {\n    if (!this._audioHelper) {\n        console.log('Helper Created');\n        this._audioHelper = new AudioHelper(this, options);\n    }\n    return this._audioHelper;\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nWebPhone.prototype.register = function(info, checkFlags) {\n\n    try {\n        var service = this;\n\n        // console.log(\"Sip Data\"+JSON.stringify(data));\n\n        if (!checkFlags || (\n            typeof(info.sipFlags) === 'object' &&\n                //checking for undefined for platform v7.3, which doesn't support this flag\n            (info.sipFlags.outboundCallsEnabled === undefined || info.sipFlags.outboundCallsEnabled === true))\n        ) {\n\n            // Access SIP flags\n            this.__sipOutboundEnabled = info.sipFlags.outboundCallsEnabled;\n\n            // console.log('SIP Provision data', data+'\\n');\n            info = info.sipInfo[0];\n\n        } else {\n            throw new Error('ERROR.sipOutboundNotAvailable'); //FIXME Better error reporting...\n        }\n\n        var headers = [];\n        var endpointId = this.uuid;\n        if (endpointId) {\n            headers.push('P-rc-endpoint-id: ' + endpointId);\n            headers.push('x-user-agent:'+ this._x_userAgent);\n            headers.push('client-id:'+this._client_id);\n        }\n\n        extend(info, {\n            extraHeaders: headers\n        });\n\n        if (service.isRegistered) {\n            console.warn('Already registered, please unregister the UA first');\n            return service.__registerDeferred.promise;\n        }\n\n        if (service.isRegistering) {\n            console.warn('Already registering the UA');\n            return service.__registerDeferred.promise;\n        }\n\n        service.__registerDeferred = defer();\n        service.isRegistering = true;\n        service.isRegistered = false;\n\n        //compatability properties\n        info.wsServers = info.outboundProxy && info.transport\n            ? info.transport.toLowerCase() + '://' + info.outboundProxy\n            : info.wsServers;\n        info.domain = info.domain || info.sipDomain;\n        info.username = info.username || info.userName;\n\n        info.extraHeaders = Array.isArray(info.extraHeaders) ? info.extraHeaders : [];\n\n\n\n\n\n        var options = {\n            wsServers: info.wsServers,\n            uri: \"sip:\" + info.username + \"@\" + info.domain,\n            password: info.password,\n            authorizationUser: info.authorizationId,\n            traceSip: true,\n            stunServers: info.stunServers || ['stun:74.125.194.127:19302'],\n            turnServers: [],\n            log: {\n                level: 3 //FIXME LOG LEVEL 3\n            },\n            domain: info.domain,\n            autostart: false,   //turn off autostart on UA creation\n            register: false,     //turn off auto register on UA creation,\n            iceGatheringTimeout: info.iceGatheringTimeout || 3000,\n\n            headers: headers\n        };\n\n        service.username = info.userName;\n        service.ua.setSIPConfig(options);\n        service.ua.start({\n            extraHeaders: info.extraHeaders\n        });\n    }\n    catch (e) {\n        service.isRegistering = false;\n        service.isRegistered = false;\n        return Promise.reject(e);\n    }\n\n    return service.__registerDeferred.promise;\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nWebPhone.prototype.reregister = function(reconnect) {\n    var service = this;\n    if (service.isRegistering) return service.__registerDeferred;\n    service.__registerDeferred = defer();\n    service.isRegistering = true;\n    service.ua.reregister({}, !!reconnect);\n    return service.__registerDeferred.promise;\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nWebPhone.prototype.unregister = function() {\n    var service = this;\n    if (service.isRegistering) {\n        service.ua.forceDisconnect();\n        service.isRegistering = false;\n        service.isUnregistering = false;\n        service.isRegistered = false;\n        service.isUnregistered = true;\n    }\n\n    if (service.isUnregistered || service.isUnregistering) return service.__unregisterDeferred;\n\n    service.isUnregistering = true;\n    service.isUnregistered = false;\n\n    service.__unregisterDeferred = defer();\n    if (service.__sipRegistered) {\n        service.ua.stop();\n    }\n    else {\n        service.__unregisterDeferred.resolve(null);\n    }\n    return service.__unregisterDeferred.promise.catch(function() {\n        return null;\n    });\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nWebPhone.prototype.forceDisconnect = function() {\n    this.ua.forceDisconnect();\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nWebPhone.prototype.call = function(toNumber, fromNumber, country) {\n    var service = this;\n    if(!this.__sipOutboundEnabled || false === Boolean(this.__sipOutboundEnabled)) {\n        throw new Error('Outbound calling is disabled'); // TODO: Fix this to be more robust error messaging\n    }\n    if(!toNumber)\n        throw new Error('Invalid or undefined [toNumber]');\n    if (!service.__callDeferred) {\n        service.__callDeferred = defer();\n        this.activeLine = service.ua.call.call(service.ua, toNumber, {\n            fromNumber: fromNumber,\n            country: country\n        });\n    }\n    return service.__callDeferred;\n};\n\n\n/*--------------------------------------------------------------------------------------------------------------------*/\nWebPhone.prototype.answer = function(line) {\n    var incomingLines = this.ua.getIncomingLinesArray();\n    var activeLines = this.ua.getActiveLinesArray();\n    var self = this;\n\n    return new Promise(function(resolve, reject) {\n        if (!line) {\n            line = incomingLines.length > 0 && incomingLines[0];\n        }\n\n        if (line) {\n            var promises = [];\n            activeLines.forEach(function (activeLine) {\n                if (activeLine !== line) {\n                    !activeLine.isOnHold() && promises.push(activeLine.setHold(true));\n                }\n            });\n            resolve(Promise\n                .all(promises)\n                .then(function () {\n                    self.activeLine = line;\n                    self.ua.answer(line);\n                })\n                .catch(function (e) {\n                    self.hangup(line);\n                    throw e;\n                }));\n        } else {\n            reject();            \n        }\n    });\n\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nWebPhone.prototype.onCall = function() {\n    return this.ua.getActiveLinesArray().filter(function(line) {\n            return line.onCall;\n        }).length > 0;\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n/***\n * deprecated\n * @param line\n * @returns {*}\n */\nWebPhone.prototype.hangup = function(line) {\n    var self = this;\n    return new Promise(function(resolve, reject){\n        line = self.getLine(line);\n        self.ua.hangup(line);\n        if (line === self.activeLine) self.activeLine = null;\n        resolve();\n    });\n};\n\nWebPhone.prototype.getLine = function(line) {\n    if (!line) line = this.activeLine;\n    if (!line) throw new Error('No line or no active line');\n    return line;\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\n//FIXME: Check if we can replace this with  SIPJS dtmf(tone,[options]) ref: http://sipjs.com/api/0.7.0/session/#dtmftone-options\n/***\n * deprecated\n * @param value\n * @param line\n * @returns {*}\n */\nWebPhone.prototype.sendDTMF = function(value, line) {\n    var self = this;\n    return new Promise(function(resolve, reject){\n        line = self.getLine(line);\n        line && line.sendDTMF.call(line, value);\n        resolve();\n    });\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n/***\n * deprecated\n * @param line\n * @returns {*}\n */\nWebPhone.prototype.hold = function(line) {\n    var self = this;\n    return new Promise(function(resolve, reject){\n        line = self.getLine(line);\n        line && line.setHold(true);\n        if (line === self.activeLine) self.activeLine = null;\n        resolve();\n    });\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n/***\n * deprecated\n * @param line\n * @returns {*}\n */\nWebPhone.prototype.unhold = function(line) {\n    var self = this;\n    return new Promise(function(resolve, reject){\n        line = self.getLine(line);\n        if (line) {\n            self.ua.getActiveLinesArray().forEach(function (activeLine) {\n                if (activeLine !== line && !activeLine.isIncoming() && !activeLine.isOnHold()) {\n                    activeLine.setHold(true);\n                }\n            });\n            line.setHold(false);\n            self.activeLine = line;\n        }\n        resolve();\n    });\n};\n\n////FIXME: Use SIPJS mute() and unmute() ref:http://sipjs.com/api/0.7.0/session/#muteoptions\n/*--------------------------------------------------------------------------------------------------------------------*/\n/***\n * deprecated\n * @param line\n * @returns {*}\n */\nWebPhone.prototype.mute = function(line) {\n    var self = this;\n    return new Promise(function(resolve, reject){\n        line = self.getLine(line);\n        line && line.setMute(true);\n        resolve();\n    });\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n/***\n * deprecated\n * @param line\n * @returns {*}\n */\nWebPhone.prototype.unmute = function(line) {\n    var self = this;\n    return new Promise(function(resolve, reject){\n        line = self.getLine(line);\n        line && line.setMute(false);\n        resolve();\n    });\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n/***\n * deprecated\n * @param line\n * @param target\n * @param options\n * @returns {*}\n */\n//Phone-line->transfer->blindTransfer\nWebPhone.prototype.transfer = function(line, target, options) {\n    var self = this;\n    return new Promise(function(resolve, reject){\n        line = self.getLine(line);\n        line && line.transfer(target, options);\n        if (line === self.activeLine) self.activeLine = null;\n        resolve();\n    });\n};\n\nmodule.exports = WebPhone;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * @name SIP\n * @namespace\n */\nmodule.exports = (function(window) {\n  \"use strict\";\n\n  var SIP = {};\n\n  var pkg = require('../package.json');\n\n  Object.defineProperties(SIP, {\n    version: {\n      get: function(){ return pkg.version; }\n    },\n    name: {\n      get: function(){ return pkg.title; }\n    }\n  });\n\n  require('./Utils.js')(SIP);\n  var Logger = require('./Logger.js');\n  SIP.LoggerFactory = require('./LoggerFactory.js')(window, Logger);\n  require('./EventEmitter.js')(SIP);\n  SIP.C = require('./Constants.js')(SIP.name, SIP.version);\n  SIP.Exceptions = require('./Exceptions.js');\n  SIP.Timers = require('./Timers.js')(window);\n  require('./Transport.js')(SIP, window);\n  require('./Parser.js')(SIP);\n  require('./SIPMessage.js')(SIP);\n  require('./URI.js')(SIP);\n  require('./NameAddrHeader.js')(SIP);\n  require('./Transactions.js')(SIP, window);\n  var DialogRequestSender = require('./Dialog/RequestSender.js')(SIP, window);\n  require('./Dialogs.js')(SIP, DialogRequestSender);\n  require('./RequestSender.js')(SIP);\n  require('./RegisterContext.js')(SIP, window);\n  SIP.MediaHandler = require('./MediaHandler.js')(SIP.EventEmitter);\n  require('./ClientContext.js')(SIP);\n  require('./ServerContext.js')(SIP);\n  var SessionDTMF = require('./Session/DTMF.js')(SIP);\n  require('./Session.js')(SIP, window, SessionDTMF);\n  require('./Subscription.js')(SIP, window);\n  var WebRTCMediaHandler = require('./WebRTC/MediaHandler.js')(SIP);\n  var WebRTCMediaStreamManager = require('./WebRTC/MediaStreamManager.js')(SIP);\n  SIP.WebRTC = require('./WebRTC.js')(SIP.Utils, window, WebRTCMediaHandler, WebRTCMediaStreamManager);\n  require('./UA.js')(SIP, window);\n  SIP.Hacks = require('./Hacks.js')(SIP);\n  require('./SanityCheck.js')(SIP);\n  SIP.DigestAuthentication = require('./DigestAuthentication.js')(SIP.Utils);\n  SIP.Grammar = require('./Grammar/dist/Grammar')(SIP);\n\n  return SIP;\n})((typeof window !== 'undefined') ? window : global);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/SIP.js\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = {\n\t\"_args\": [\n\t\t[\n\t\t\t\"sip.js@0.6.4\",\n\t\t\t\"/Users/howard.zhang/Sites/ringcentral-web-phone\"\n\t\t]\n\t],\n\t\"_from\": \"sip.js@0.6.4\",\n\t\"_id\": \"sip.js@0.6.4\",\n\t\"_inCache\": true,\n\t\"_installable\": true,\n\t\"_location\": \"/sip.js\",\n\t\"_npmUser\": {\n\t\t\"email\": \"eric.green@onsip.com\",\n\t\t\"name\": \"egreen_onsip\"\n\t},\n\t\"_npmVersion\": \"1.4.13\",\n\t\"_phantomChildren\": {},\n\t\"_requested\": {\n\t\t\"name\": \"sip.js\",\n\t\t\"raw\": \"sip.js@0.6.4\",\n\t\t\"rawSpec\": \"0.6.4\",\n\t\t\"scope\": null,\n\t\t\"spec\": \"0.6.4\",\n\t\t\"type\": \"version\"\n\t},\n\t\"_requiredBy\": [\n\t\t\"/\"\n\t],\n\t\"_resolved\": \"https://registry.npmjs.org/sip.js/-/sip.js-0.6.4.tgz\",\n\t\"_shasum\": \"e080d4b0fa1a7dd803741d6bca6d32c29ae37380\",\n\t\"_shrinkwrap\": null,\n\t\"_spec\": \"sip.js@0.6.4\",\n\t\"_where\": \"/Users/howard.zhang/Sites/ringcentral-web-phone\",\n\t\"author\": {\n\t\t\"email\": \"will@onsip.com\",\n\t\t\"name\": \"Will Mitchell\"\n\t},\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/onsip/SIP.js/issues\"\n\t},\n\t\"contributors\": [\n\t\t{\n\t\t\t\"url\": \"http://sipjs.com/authors/\"\n\t\t}\n\t],\n\t\"dependencies\": {},\n\t\"description\": \"A simple, intuitive, and powerful JavaScript signaling library\",\n\t\"devDependencies\": {\n\t\t\"browserify\": \"^4.1.8\",\n\t\t\"grunt\": \"~0.4.0\",\n\t\t\"grunt-browserify\": \"^2.1.0\",\n\t\t\"grunt-cli\": \"~0.1.6\",\n\t\t\"grunt-contrib-copy\": \"^0.5.0\",\n\t\t\"grunt-contrib-jasmine\": \"~0.6.0\",\n\t\t\"grunt-contrib-jshint\": \">0.5.0\",\n\t\t\"grunt-contrib-uglify\": \"~0.2.0\",\n\t\t\"grunt-peg\": \"~1.3.1\",\n\t\t\"grunt-trimtrailingspaces\": \"^0.4.0\",\n\t\t\"node-minify\": \"~0.7.2\",\n\t\t\"pegjs\": \"0.8.0\",\n\t\t\"sdp-transform\": \"~0.4.0\"\n\t},\n\t\"directories\": {},\n\t\"dist\": {\n\t\t\"shasum\": \"e080d4b0fa1a7dd803741d6bca6d32c29ae37380\",\n\t\t\"tarball\": \"http://registry.npmjs.org/sip.js/-/sip.js-0.6.4.tgz\"\n\t},\n\t\"engines\": {\n\t\t\"node\": \">=0.8\"\n\t},\n\t\"gitHead\": \"209fb9bb50f1918522d37a002b83f21abd6946ab\",\n\t\"homepage\": \"http://sipjs.com\",\n\t\"keywords\": [\n\t\t\"sip\",\n\t\t\"websocket\",\n\t\t\"webrtc\",\n\t\t\"library\",\n\t\t\"javascript\"\n\t],\n\t\"license\": \"MIT\",\n\t\"main\": \"src/SIP.js\",\n\t\"maintainers\": [\n\t\t{\n\t\t\t\"email\": \"joseph@onsip.com\",\n\t\t\t\"name\": \"joseph-onsip\"\n\t\t},\n\t\t{\n\t\t\t\"email\": \"eric.green@onsip.com\",\n\t\t\t\"name\": \"egreen_onsip\"\n\t\t}\n\t],\n\t\"name\": \"sip.js\",\n\t\"optionalDependencies\": {},\n\t\"readme\": \"ERROR: No README data found!\",\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"git+https://github.com/onsip/SIP.js.git\"\n\t},\n\t\"scripts\": {\n\t\t\"test\": \"grunt travis --verbose\"\n\t},\n\t\"title\": \"SIP.js\",\n\t\"version\": \"0.6.4\"\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/package.json\n ** module id = 3\n ** module chunks = 0\n **/","/**\n * @fileoverview Utils\n */\n\nmodule.exports = function (SIP) {\nvar Utils;\n\nUtils= {\n\n  augment: function (object, constructor, args, override) {\n    var idx, proto;\n\n    // Add public properties from constructor's prototype onto object\n    proto = constructor.prototype;\n    for (idx in proto) {\n      if (override || object[idx] === undefined) {\n        object[idx] = proto[idx];\n      }\n    }\n\n    // Construct the object as though it were just created by constructor\n    constructor.apply(object, args);\n  },\n\n  optionsOverride: function (options, winner, loser, isDeprecated, logger, defaultValue) {\n    if (isDeprecated && options[loser]) {\n      logger.warn(loser + ' is deprecated, please use ' + winner + ' instead');\n    }\n\n    if (options[winner] && options[loser]) {\n      logger.warn(winner + ' overriding ' + loser);\n    }\n\n    options[winner] = options[winner] || options[loser] || defaultValue;\n  },\n\n  desugarSessionOptions: function desugarSessionOptions (options) {\n    if (global.HTMLMediaElement && options instanceof global.HTMLMediaElement) {\n      options = {\n        media: {\n          constraints: {\n            audio: true,\n            video: options.tagName === 'VIDEO'\n          },\n          render: {\n            remote: {\n              video: options\n            }\n          }\n        }\n      };\n    }\n    return options;\n  },\n\n  str_utf8_length: function(string) {\n    return encodeURIComponent(string).replace(/%[A-F\\d]{2}/g, 'U').length;\n  },\n\n  getPrefixedProperty: function (object, name) {\n    if (object == null) {\n      return;\n    }\n    var capitalizedName = name.charAt(0).toUpperCase() + name.slice(1);\n    var prefixedNames = [name, 'webkit' + capitalizedName, 'moz' + capitalizedName];\n    for (var i in prefixedNames) {\n      var property = object[prefixedNames[i]];\n      if (property) {\n        return property;\n      }\n    }\n  },\n\n  generateFakeSDP: function(body) {\n    if (!body) {\n      return;\n    }\n\n    var start = body.indexOf('o=');\n    var end = body.indexOf('\\r\\n', start);\n\n    return 'v=0\\r\\n' + body.slice(start, end) + '\\r\\ns=-\\r\\nt=0 0\\r\\nc=IN IP4 0.0.0.0';\n  },\n\n  isFunction: function(fn) {\n    if (fn !== undefined) {\n      return Object.prototype.toString.call(fn) === '[object Function]';\n    } else {\n      return false;\n    }\n  },\n\n  isDecimal: function (num) {\n    return !isNaN(num) && (parseFloat(num) === parseInt(num,10));\n  },\n\n  createRandomToken: function(size, base) {\n    var i, r,\n      token = '';\n\n    base = base || 32;\n\n    for( i=0; i < size; i++ ) {\n      r = Math.random() * base|0;\n      token += r.toString(base);\n    }\n\n    return token;\n  },\n\n  newTag: function() {\n    return SIP.Utils.createRandomToken(SIP.UA.C.TAG_LENGTH);\n  },\n\n  // http://stackoverflow.com/users/109538/broofa\n  newUUID: function() {\n    var UUID =  'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random()*16|0, v = c === 'x' ? r : (r&0x3|0x8);\n      return v.toString(16);\n    });\n\n    return UUID;\n  },\n\n  hostType: function(host) {\n    if (!host) {\n      return;\n    } else {\n      host = SIP.Grammar.parse(host,'host');\n      if (host !== -1) {\n        return host.host_type;\n      }\n    }\n  },\n\n  /**\n  * Normalize SIP URI.\n  * NOTE: It does not allow a SIP URI without username.\n  * Accepts 'sip', 'sips' and 'tel' URIs and convert them into 'sip'.\n  * Detects the domain part (if given) and properly hex-escapes the user portion.\n  * If the user portion has only 'tel' number symbols the user portion is clean of 'tel' visual separators.\n  * @private\n  * @param {String} target\n  * @param {String} [domain]\n  */\n  normalizeTarget: function(target, domain) {\n    var uri, target_array, target_user, target_domain;\n\n    // If no target is given then raise an error.\n    if (!target) {\n      return;\n    // If a SIP.URI instance is given then return it.\n    } else if (target instanceof SIP.URI) {\n      return target;\n\n    // If a string is given split it by '@':\n    // - Last fragment is the desired domain.\n    // - Otherwise append the given domain argument.\n    } else if (typeof target === 'string') {\n      target_array = target.split('@');\n\n      switch(target_array.length) {\n        case 1:\n          if (!domain) {\n            return;\n          }\n          target_user = target;\n          target_domain = domain;\n          break;\n        case 2:\n          target_user = target_array[0];\n          target_domain = target_array[1];\n          break;\n        default:\n          target_user = target_array.slice(0, target_array.length-1).join('@');\n          target_domain = target_array[target_array.length-1];\n      }\n\n      // Remove the URI scheme (if present).\n      target_user = target_user.replace(/^(sips?|tel):/i, '');\n\n      // Remove 'tel' visual separators if the user portion just contains 'tel' number symbols.\n      if (/^[\\-\\.\\(\\)]*\\+?[0-9\\-\\.\\(\\)]+$/.test(target_user)) {\n        target_user = target_user.replace(/[\\-\\.\\(\\)]/g, '');\n      }\n\n      // Build the complete SIP URI.\n      target = SIP.C.SIP + ':' + SIP.Utils.escapeUser(target_user) + '@' + target_domain;\n\n      // Finally parse the resulting URI.\n      if (uri = SIP.URI.parse(target)) {\n        return uri;\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  },\n\n  /**\n  * Hex-escape a SIP URI user.\n  * @private\n  * @param {String} user\n  */\n  escapeUser: function(user) {\n    // Don't hex-escape ':' (%3A), '+' (%2B), '?' (%3F\"), '/' (%2F).\n    return encodeURIComponent(decodeURIComponent(user)).replace(/%3A/ig, ':').replace(/%2B/ig, '+').replace(/%3F/ig, '?').replace(/%2F/ig, '/');\n  },\n\n  headerize: function(string) {\n    var exceptions = {\n      'Call-Id': 'Call-ID',\n      'Cseq': 'CSeq',\n      'Rack': 'RAck',\n      'Rseq': 'RSeq',\n      'Www-Authenticate': 'WWW-Authenticate'\n      },\n      name = string.toLowerCase().replace(/_/g,'-').split('-'),\n      hname = '',\n      parts = name.length, part;\n\n    for (part = 0; part < parts; part++) {\n      if (part !== 0) {\n        hname +='-';\n      }\n      hname += name[part].charAt(0).toUpperCase()+name[part].substring(1);\n    }\n    if (exceptions[hname]) {\n      hname = exceptions[hname];\n    }\n    return hname;\n  },\n\n  sipErrorCause: function(status_code) {\n    var cause;\n\n    for (cause in SIP.C.SIP_ERROR_CAUSES) {\n      if (SIP.C.SIP_ERROR_CAUSES[cause].indexOf(status_code) !== -1) {\n        return SIP.C.causes[cause];\n      }\n    }\n\n    return SIP.C.causes.SIP_FAILURE_CODE;\n  },\n\n  /**\n  * Generate a random Test-Net IP (http://tools.ietf.org/html/rfc5735)\n  * @private\n  */\n  getRandomTestNetIP: function() {\n    function getOctet(from,to) {\n      return Math.floor(Math.random()*(to-from+1)+from);\n    }\n    return '192.0.2.' + getOctet(1, 254);\n  },\n\n  getAllowedMethods: function(ua) {\n    var event,\n      allowed = SIP.UA.C.ALLOWED_METHODS.toString();\n\n    for (event in SIP.UA.C.EVENT_METHODS) {\n      if (ua.checkListener(event)) {\n        allowed += ','+ SIP.UA.C.EVENT_METHODS[event];\n      }\n    }\n\n    return allowed;\n  },\n\n  // MD5 (Message-Digest Algorithm) http://www.webtoolkit.info\n  calculateMD5: function(string) {\n    function RotateLeft(lValue, iShiftBits) {\n      return (lValue<<iShiftBits) | (lValue>>>(32-iShiftBits));\n    }\n\n    function AddUnsigned(lX,lY) {\n      var lX4,lY4,lX8,lY8,lResult;\n      lX8 = (lX & 0x80000000);\n      lY8 = (lY & 0x80000000);\n      lX4 = (lX & 0x40000000);\n      lY4 = (lY & 0x40000000);\n      lResult = (lX & 0x3FFFFFFF)+(lY & 0x3FFFFFFF);\n      if (lX4 & lY4) {\n        return (lResult ^ 0x80000000 ^ lX8 ^ lY8);\n      }\n      if (lX4 | lY4) {\n        if (lResult & 0x40000000) {\n          return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);\n        } else {\n          return (lResult ^ 0x40000000 ^ lX8 ^ lY8);\n        }\n      } else {\n        return (lResult ^ lX8 ^ lY8);\n      }\n    }\n\n    function F(x,y,z) {\n      return (x & y) | ((~x) & z);\n    }\n\n    function G(x,y,z) {\n      return (x & z) | (y & (~z));\n    }\n\n    function H(x,y,z) {\n      return (x ^ y ^ z);\n    }\n\n    function I(x,y,z) {\n      return (y ^ (x | (~z)));\n    }\n\n    function FF(a,b,c,d,x,s,ac) {\n      a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));\n      return AddUnsigned(RotateLeft(a, s), b);\n    }\n\n    function GG(a,b,c,d,x,s,ac) {\n      a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));\n      return AddUnsigned(RotateLeft(a, s), b);\n    }\n\n    function HH(a,b,c,d,x,s,ac) {\n      a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));\n      return AddUnsigned(RotateLeft(a, s), b);\n    }\n\n    function II(a,b,c,d,x,s,ac) {\n      a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));\n      return AddUnsigned(RotateLeft(a, s), b);\n    }\n\n    function ConvertToWordArray(string) {\n      var lWordCount;\n      var lMessageLength = string.length;\n      var lNumberOfWords_temp1=lMessageLength + 8;\n      var lNumberOfWords_temp2=(lNumberOfWords_temp1-(lNumberOfWords_temp1 % 64))/64;\n      var lNumberOfWords = (lNumberOfWords_temp2+1)*16;\n      var lWordArray=Array(lNumberOfWords-1);\n      var lBytePosition = 0;\n      var lByteCount = 0;\n      while ( lByteCount < lMessageLength ) {\n        lWordCount = (lByteCount-(lByteCount % 4))/4;\n        lBytePosition = (lByteCount % 4)*8;\n        lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount)<<lBytePosition));\n        lByteCount++;\n      }\n      lWordCount = (lByteCount-(lByteCount % 4))/4;\n      lBytePosition = (lByteCount % 4)*8;\n      lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80<<lBytePosition);\n      lWordArray[lNumberOfWords-2] = lMessageLength<<3;\n      lWordArray[lNumberOfWords-1] = lMessageLength>>>29;\n      return lWordArray;\n    }\n\n    function WordToHex(lValue) {\n      var WordToHexValue=\"\",WordToHexValue_temp=\"\",lByte,lCount;\n      for (lCount = 0;lCount<=3;lCount++) {\n        lByte = (lValue>>>(lCount*8)) & 255;\n        WordToHexValue_temp = \"0\" + lByte.toString(16);\n        WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length-2,2);\n      }\n      return WordToHexValue;\n    }\n\n    function Utf8Encode(string) {\n      string = string.replace(/\\r\\n/g,\"\\n\");\n      var utftext = \"\";\n\n      for (var n = 0; n < string.length; n++) {\n        var c = string.charCodeAt(n);\n\n        if (c < 128) {\n          utftext += String.fromCharCode(c);\n        }\n        else if((c > 127) && (c < 2048)) {\n          utftext += String.fromCharCode((c >> 6) | 192);\n          utftext += String.fromCharCode((c & 63) | 128);\n        }\n        else {\n          utftext += String.fromCharCode((c >> 12) | 224);\n          utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n          utftext += String.fromCharCode((c & 63) | 128);\n        }\n      }\n      return utftext;\n    }\n\n    var x=[];\n    var k,AA,BB,CC,DD,a,b,c,d;\n    var S11=7, S12=12, S13=17, S14=22;\n    var S21=5, S22=9 , S23=14, S24=20;\n    var S31=4, S32=11, S33=16, S34=23;\n    var S41=6, S42=10, S43=15, S44=21;\n\n    string = Utf8Encode(string);\n\n    x = ConvertToWordArray(string);\n\n    a = 0x67452301; b = 0xEFCDAB89; c = 0x98BADCFE; d = 0x10325476;\n\n    for (k=0;k<x.length;k+=16) {\n      AA=a; BB=b; CC=c; DD=d;\n      a=FF(a,b,c,d,x[k+0], S11,0xD76AA478);\n      d=FF(d,a,b,c,x[k+1], S12,0xE8C7B756);\n      c=FF(c,d,a,b,x[k+2], S13,0x242070DB);\n      b=FF(b,c,d,a,x[k+3], S14,0xC1BDCEEE);\n      a=FF(a,b,c,d,x[k+4], S11,0xF57C0FAF);\n      d=FF(d,a,b,c,x[k+5], S12,0x4787C62A);\n      c=FF(c,d,a,b,x[k+6], S13,0xA8304613);\n      b=FF(b,c,d,a,x[k+7], S14,0xFD469501);\n      a=FF(a,b,c,d,x[k+8], S11,0x698098D8);\n      d=FF(d,a,b,c,x[k+9], S12,0x8B44F7AF);\n      c=FF(c,d,a,b,x[k+10],S13,0xFFFF5BB1);\n      b=FF(b,c,d,a,x[k+11],S14,0x895CD7BE);\n      a=FF(a,b,c,d,x[k+12],S11,0x6B901122);\n      d=FF(d,a,b,c,x[k+13],S12,0xFD987193);\n      c=FF(c,d,a,b,x[k+14],S13,0xA679438E);\n      b=FF(b,c,d,a,x[k+15],S14,0x49B40821);\n      a=GG(a,b,c,d,x[k+1], S21,0xF61E2562);\n      d=GG(d,a,b,c,x[k+6], S22,0xC040B340);\n      c=GG(c,d,a,b,x[k+11],S23,0x265E5A51);\n      b=GG(b,c,d,a,x[k+0], S24,0xE9B6C7AA);\n      a=GG(a,b,c,d,x[k+5], S21,0xD62F105D);\n      d=GG(d,a,b,c,x[k+10],S22,0x2441453);\n      c=GG(c,d,a,b,x[k+15],S23,0xD8A1E681);\n      b=GG(b,c,d,a,x[k+4], S24,0xE7D3FBC8);\n      a=GG(a,b,c,d,x[k+9], S21,0x21E1CDE6);\n      d=GG(d,a,b,c,x[k+14],S22,0xC33707D6);\n      c=GG(c,d,a,b,x[k+3], S23,0xF4D50D87);\n      b=GG(b,c,d,a,x[k+8], S24,0x455A14ED);\n      a=GG(a,b,c,d,x[k+13],S21,0xA9E3E905);\n      d=GG(d,a,b,c,x[k+2], S22,0xFCEFA3F8);\n      c=GG(c,d,a,b,x[k+7], S23,0x676F02D9);\n      b=GG(b,c,d,a,x[k+12],S24,0x8D2A4C8A);\n      a=HH(a,b,c,d,x[k+5], S31,0xFFFA3942);\n      d=HH(d,a,b,c,x[k+8], S32,0x8771F681);\n      c=HH(c,d,a,b,x[k+11],S33,0x6D9D6122);\n      b=HH(b,c,d,a,x[k+14],S34,0xFDE5380C);\n      a=HH(a,b,c,d,x[k+1], S31,0xA4BEEA44);\n      d=HH(d,a,b,c,x[k+4], S32,0x4BDECFA9);\n      c=HH(c,d,a,b,x[k+7], S33,0xF6BB4B60);\n      b=HH(b,c,d,a,x[k+10],S34,0xBEBFBC70);\n      a=HH(a,b,c,d,x[k+13],S31,0x289B7EC6);\n      d=HH(d,a,b,c,x[k+0], S32,0xEAA127FA);\n      c=HH(c,d,a,b,x[k+3], S33,0xD4EF3085);\n      b=HH(b,c,d,a,x[k+6], S34,0x4881D05);\n      a=HH(a,b,c,d,x[k+9], S31,0xD9D4D039);\n      d=HH(d,a,b,c,x[k+12],S32,0xE6DB99E5);\n      c=HH(c,d,a,b,x[k+15],S33,0x1FA27CF8);\n      b=HH(b,c,d,a,x[k+2], S34,0xC4AC5665);\n      a=II(a,b,c,d,x[k+0], S41,0xF4292244);\n      d=II(d,a,b,c,x[k+7], S42,0x432AFF97);\n      c=II(c,d,a,b,x[k+14],S43,0xAB9423A7);\n      b=II(b,c,d,a,x[k+5], S44,0xFC93A039);\n      a=II(a,b,c,d,x[k+12],S41,0x655B59C3);\n      d=II(d,a,b,c,x[k+3], S42,0x8F0CCC92);\n      c=II(c,d,a,b,x[k+10],S43,0xFFEFF47D);\n      b=II(b,c,d,a,x[k+1], S44,0x85845DD1);\n      a=II(a,b,c,d,x[k+8], S41,0x6FA87E4F);\n      d=II(d,a,b,c,x[k+15],S42,0xFE2CE6E0);\n      c=II(c,d,a,b,x[k+6], S43,0xA3014314);\n      b=II(b,c,d,a,x[k+13],S44,0x4E0811A1);\n      a=II(a,b,c,d,x[k+4], S41,0xF7537E82);\n      d=II(d,a,b,c,x[k+11],S42,0xBD3AF235);\n      c=II(c,d,a,b,x[k+2], S43,0x2AD7D2BB);\n      b=II(b,c,d,a,x[k+9], S44,0xEB86D391);\n      a=AddUnsigned(a,AA);\n      b=AddUnsigned(b,BB);\n      c=AddUnsigned(c,CC);\n      d=AddUnsigned(d,DD);\n    }\n\n    var temp = WordToHex(a)+WordToHex(b)+WordToHex(c)+WordToHex(d);\n\n    return temp.toLowerCase();\n  }\n};\n\nSIP.Utils = Utils;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/Utils.js\n ** module id = 4\n ** module chunks = 0\n **/","\nmodule.exports = (function() {\n\nvar Logger = function(logger, category, label) {\n  this.logger = logger;\n  this.category = category;\n  this.label = label;\n};\n\n\nLogger.prototype.debug = function(content) {\n  this.logger.debug(this.category, this.label, content);\n};\n\nLogger.prototype.log = function(content) {\n  this.logger.log(this.category, this.label, content);\n};\n\nLogger.prototype.warn = function(content) {\n  this.logger.warn(this.category, this.label, content);\n};\n\nLogger.prototype.error = function(content) {\n  this.logger.error(this.category, this.label, content);\n};\n\nreturn Logger;\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/Logger.js\n ** module id = 5\n ** module chunks = 0\n **/","\nmodule.exports = function (window, Logger) {\n\n// Console is not defined in ECMAScript, so just in case...\nvar console = window.console || {\n  debug: function () {},\n  log: function () {},\n  warn: function () {},\n  error: function () {}\n};\n\nvar LoggerFactory = function() {\n  var logger,\n    levels = {\n    'error': 0,\n    'warn': 1,\n    'log': 2,\n    'debug': 3\n    },\n\n    level = 2,\n    builtinEnabled = true,\n    connector = null;\n\n    this.loggers = {};\n\n    logger = this.getLogger('sip.loggerfactory');\n\n\n  Object.defineProperties(this, {\n    builtinEnabled: {\n      get: function(){ return builtinEnabled; },\n      set: function(value){\n        if (typeof value === 'boolean') {\n          builtinEnabled = value;\n        } else {\n          logger.error('invalid \"builtinEnabled\" parameter value: '+ JSON.stringify(value));\n        }\n      }\n    },\n\n    level: {\n      get: function() {return level; },\n      set: function(value) {\n        if (value >= 0 && value <=3) {\n          level = value;\n        } else if (value > 3) {\n          level = 3;\n        } else if (levels.hasOwnProperty(value)) {\n          level = levels[value];\n        } else {\n          logger.error('invalid \"level\" parameter value: '+ JSON.stringify(value));\n        }\n      }\n    },\n\n    connector: {\n      get: function() {return connector; },\n      set: function(value){\n        if(value === null || value === \"\" || value === undefined) {\n          connector = null;\n        } else if (typeof value === 'function') {\n          connector = value;\n        } else {\n          logger.error('invalid \"connector\" parameter value: '+ JSON.stringify(value));\n        }\n      }\n    }\n  });\n};\n\nLoggerFactory.prototype.print = function(target, category, label, content) {\n  var prefix = [];\n\n  prefix.push(new Date());\n\n  prefix.push(category);\n\n  if (label) {\n    prefix.push(label);\n  }\n\n  prefix.push('');\n\n  if (typeof content === 'string') {\n    target.call(console, prefix.join(' | ') + content);\n  } else {\n    target.call(console, content);\n  }\n};\n\nLoggerFactory.prototype.debug = function(category, label, content) {\n  if (this.level === 3) {\n    if (this.builtinEnabled) {\n      this.print(console.debug, category, label, content);\n    }\n\n    if (this.connector) {\n      this.connector('debug', category, label, content);\n    }\n  }\n};\n\nLoggerFactory.prototype.log = function(category, label, content) {\n  if (this.level >= 2) {\n    if (this.builtinEnabled) {\n      this.print(console.log, category, label, content);\n    }\n\n    if (this.connector) {\n      this.connector('log', category, label, content);\n    }\n  }\n};\n\nLoggerFactory.prototype.warn = function(category, label, content) {\n  if (this.level >= 1) {\n    if (this.builtinEnabled) {\n      this.print(console.warn, category, label, content);\n    }\n\n    if (this.connector) {\n      this.connector('warn', category, label, content);\n    }\n  }\n};\n\nLoggerFactory.prototype.error = function(category, label, content) {\n  if (this.builtinEnabled) {\n    this.print(console.error,category, label, content);\n  }\n\n  if (this.connector) {\n    this.connector('error', category, label, content);\n  }\n};\n\nLoggerFactory.prototype.getLogger = function(category, label) {\n  var logger;\n\n  if (label && this.level === 3) {\n    return new Logger(this, category, label);\n  } else if (this.loggers[category]) {\n    return this.loggers[category];\n  } else {\n    logger = new Logger(this, category);\n    this.loggers[category] = logger;\n    return logger;\n  }\n};\n\nreturn LoggerFactory;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/LoggerFactory.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * @fileoverview EventEmitter\n */\n\n/**\n * @augments SIP\n * @class Class creating an event emitter.\n */\nmodule.exports = function (SIP) {\nvar\n  EventEmitter,\n  Event,\n  logger = new SIP.LoggerFactory().getLogger('sip.eventemitter'),\n  C = {\n    MAX_LISTENERS: 10\n  };\n\nEventEmitter = function(){};\nEventEmitter.prototype = {\n  /**\n   * Initialize events dictionaries.\n   * @param {Array} events\n   */\n  initEvents: function(events) {\n    this.events = {};\n\n    return this.initMoreEvents(events);\n  },\n\n  initMoreEvents: function(events) {\n    var idx;\n\n    if (!this.logger) {\n      this.logger = logger;\n    }\n\n    this.maxListeners = C.MAX_LISTENERS;\n\n    for (idx = 0; idx < events.length; idx++) {\n      if (!this.events[events[idx]]) {\n        this.logger.log('adding event '+ events[idx]);\n        this.events[events[idx]] = [];\n      } else {\n        this.logger.log('skipping event '+ events[idx]+ ' - Event exists');\n      }\n    }\n\n    return this;\n  },\n\n  /**\n  * Check whether an event exists or not.\n  * @param {String} event\n  * @returns {Boolean}\n  */\n  checkEvent: function(event) {\n    return !!(this.events && this.events[event]);\n  },\n\n  /**\n  * Check whether an event exists and has at least one listener or not.\n  * @param {String} event\n  * @returns {Boolean}\n  */\n  checkListener: function(event) {\n    return this.checkEvent(event) && this.events[event].length > 0;\n  },\n\n  /**\n  * Add a listener to the end of the listeners array for the specified event.\n  * @param {String} event\n  * @param {Function} listener\n  */\n  on: function(event, listener, bindTarget) {\n    if (listener === undefined) {\n      return this;\n    } else if (typeof listener !== 'function') {\n      this.logger.error('listener must be a function');\n      return this;\n    } else if (!this.checkEvent(event)) {\n      this.logger.error('unable to add a listener to a nonexistent event '+ event);\n      throw new TypeError('Invalid or uninitialized event: ' + event);\n    }\n\n    var listenerObj = { listener: listener };\n    if (bindTarget) {\n      listenerObj.bindTarget = bindTarget;\n    }\n\n    if (this.events[event].length >= this.maxListeners) {\n      this.logger.warn('max listeners exceeded for event '+ event);\n      return this;\n    }\n\n    this.events[event].push(listenerObj);\n    this.logger.log('new listener added to event '+ event);\n    return this;\n  },\n\n  /**\n  * Add a one time listener for the specified event.\n  * The listener is invoked only the next time the event is fired, then it is removed.\n  * @param {String} event\n  * @param {Function} listener\n  */\n  once: function(event, listener, bindTarget) {\n    var self = this;\n    function listenOnce () {\n      listener.apply(this, arguments);\n      self.off(event, listenOnce, bindTarget);\n    }\n\n    return this.on(event, listenOnce, bindTarget);\n  },\n\n  /**\n  * Remove a listener from the listener array for the specified event.\n  * Note that the order of the array elements will change after removing the listener\n  * @param {String} event\n  * @param {Function} listener\n  */\n  off: function(event, listener, bindTarget) {\n    var events, length,\n      idx = 0;\n\n    if (listener && typeof listener !== 'function') {\n      this.logger.error('listener must be a function');\n      return this;\n    } else if (!event) {\n      for (idx in this.events) {\n        this.events[idx] = [];\n      }\n      return this;\n    } else if (!this.checkEvent(event)) {\n      this.logger.error('unable to remove a listener from a nonexistent event '+ event);\n      throw new TypeError('Invalid or uninitialized event: ' + event);\n    }\n\n    events = this.events[event];\n    length = events.length;\n\n    while (idx < length) {\n      if (events[idx] &&\n          (!listener || events[idx].listener === listener) &&\n          (!bindTarget || events[idx].bindTarget === bindTarget)) {\n        events.splice(idx,1);\n      } else {\n        idx ++;\n      }\n    }\n\n    return this;\n  },\n\n  /**\n  * By default EventEmitter will print a warning\n  * if more than C.MAX_LISTENERS listeners are added for a particular event.\n  * This function allows that limit to be modified.\n  * @param {Number} listeners\n  */\n  setMaxListeners: function(listeners) {\n    if (typeof listeners !== 'number' || listeners < 0) {\n      this.logger.error('listeners must be a positive number');\n      return this;\n    }\n\n    this.maxListeners = listeners;\n    return this;\n  },\n\n  /**\n  * Execute each of the listeners in order with the supplied arguments.\n  * @param {String} events\n  * @param {Array} args\n  */\n  emit: function(event) {\n    if (!this.checkEvent(event)) {\n      this.logger.error('unable to emit a nonexistent event '+ event);\n      throw new TypeError('Invalid or uninitialized event: ' + event);\n    }\n\n    this.logger.log('emitting event '+ event);\n\n    // Fire event listeners\n    var args = Array.prototype.slice.call(arguments, 1);\n    this.events[event].slice().forEach(function (listener) {\n      try {\n        listener.listener.apply(listener.bindTarget || this, args);\n      } catch(err) {\n        this.logger.error(err.stack);\n      }\n    }, this);\n\n    return this;\n  }\n};\n\nEvent = function(type, sender, data) {\n  this.type = type;\n  this.sender= sender;\n  this.data = data;\n};\n\nEventEmitter.C = C;\n\nSIP.EventEmitter = EventEmitter;\nSIP.Event = Event;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/EventEmitter.js\n ** module id = 7\n ** module chunks = 0\n **/","/**\n * @fileoverview SIP Constants\n */\n\n/**\n * SIP Constants.\n * @augments SIP\n */\n\nmodule.exports = function (name, version) {\nreturn {\n  USER_AGENT: name +'/'+ version,\n\n  // SIP scheme\n  SIP:  'sip',\n  SIPS: 'sips',\n\n  // End and Failure causes\n  causes: {\n    // Generic error causes\n    CONNECTION_ERROR:         'Connection Error',\n    REQUEST_TIMEOUT:          'Request Timeout',\n    SIP_FAILURE_CODE:         'SIP Failure Code',\n    INTERNAL_ERROR:           'Internal Error',\n\n    // SIP error causes\n    BUSY:                     'Busy',\n    REJECTED:                 'Rejected',\n    REDIRECTED:               'Redirected',\n    UNAVAILABLE:              'Unavailable',\n    NOT_FOUND:                'Not Found',\n    ADDRESS_INCOMPLETE:       'Address Incomplete',\n    INCOMPATIBLE_SDP:         'Incompatible SDP',\n    AUTHENTICATION_ERROR:     'Authentication Error',\n    DIALOG_ERROR:             'Dialog Error',\n\n    // Session error causes\n    WEBRTC_NOT_SUPPORTED:     'WebRTC Not Supported',\n    WEBRTC_ERROR:             'WebRTC Error',\n    CANCELED:                 'Canceled',\n    NO_ANSWER:                'No Answer',\n    EXPIRES:                  'Expires',\n    NO_ACK:                   'No ACK',\n    NO_PRACK:                 'No PRACK',\n    USER_DENIED_MEDIA_ACCESS: 'User Denied Media Access',\n    BAD_MEDIA_DESCRIPTION:    'Bad Media Description',\n    RTP_TIMEOUT:              'RTP Timeout'\n  },\n\n  supported: {\n    UNSUPPORTED:        'none',\n    SUPPORTED:          'supported',\n    REQUIRED:           'required'\n  },\n\n  SIP_ERROR_CAUSES: {\n    REDIRECTED: [300,301,302,305,380],\n    BUSY: [486,600],\n    REJECTED: [403,603],\n    NOT_FOUND: [404,604],\n    UNAVAILABLE: [480,410,408,430],\n    ADDRESS_INCOMPLETE: [484],\n    INCOMPATIBLE_SDP: [488,606],\n    AUTHENTICATION_ERROR:[401,407]\n  },\n\n  // SIP Methods\n  ACK:        'ACK',\n  BYE:        'BYE',\n  CANCEL:     'CANCEL',\n  INFO:       'INFO',\n  INVITE:     'INVITE',\n  MESSAGE:    'MESSAGE',\n  NOTIFY:     'NOTIFY',\n  OPTIONS:    'OPTIONS',\n  REGISTER:   'REGISTER',\n  UPDATE:     'UPDATE',\n  SUBSCRIBE:  'SUBSCRIBE',\n  REFER:      'REFER',\n  PRACK:      'PRACK',\n\n  /* SIP Response Reasons\n   * DOC: http://www.iana.org/assignments/sip-parameters\n   * Copied from https://github.com/versatica/OverSIP/blob/master/lib/oversip/sip/constants.rb#L7\n   */\n  REASON_PHRASE: {\n    100: 'Trying',\n    180: 'Ringing',\n    181: 'Call Is Being Forwarded',\n    182: 'Queued',\n    183: 'Session Progress',\n    199: 'Early Dialog Terminated',  // draft-ietf-sipcore-199\n    200: 'OK',\n    202: 'Accepted',  // RFC 3265\n    204: 'No Notification',  //RFC 5839\n    300: 'Multiple Choices',\n    301: 'Moved Permanently',\n    302: 'Moved Temporarily',\n    305: 'Use Proxy',\n    380: 'Alternative Service',\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    402: 'Payment Required',\n    403: 'Forbidden',\n    404: 'Not Found',\n    405: 'Method Not Allowed',\n    406: 'Not Acceptable',\n    407: 'Proxy Authentication Required',\n    408: 'Request Timeout',\n    410: 'Gone',\n    412: 'Conditional Request Failed',  // RFC 3903\n    413: 'Request Entity Too Large',\n    414: 'Request-URI Too Long',\n    415: 'Unsupported Media Type',\n    416: 'Unsupported URI Scheme',\n    417: 'Unknown Resource-Priority',  // RFC 4412\n    420: 'Bad Extension',\n    421: 'Extension Required',\n    422: 'Session Interval Too Small',  // RFC 4028\n    423: 'Interval Too Brief',\n    428: 'Use Identity Header',  // RFC 4474\n    429: 'Provide Referrer Identity',  // RFC 3892\n    430: 'Flow Failed',  // RFC 5626\n    433: 'Anonymity Disallowed',  // RFC 5079\n    436: 'Bad Identity-Info',  // RFC 4474\n    437: 'Unsupported Certificate',  // RFC 4744\n    438: 'Invalid Identity Header',  // RFC 4744\n    439: 'First Hop Lacks Outbound Support',  // RFC 5626\n    440: 'Max-Breadth Exceeded',  // RFC 5393\n    469: 'Bad Info Package',  // draft-ietf-sipcore-info-events\n    470: 'Consent Needed',  // RFC 5360\n    478: 'Unresolvable Destination',  // Custom code copied from Kamailio.\n    480: 'Temporarily Unavailable',\n    481: 'Call/Transaction Does Not Exist',\n    482: 'Loop Detected',\n    483: 'Too Many Hops',\n    484: 'Address Incomplete',\n    485: 'Ambiguous',\n    486: 'Busy Here',\n    487: 'Request Terminated',\n    488: 'Not Acceptable Here',\n    489: 'Bad Event',  // RFC 3265\n    491: 'Request Pending',\n    493: 'Undecipherable',\n    494: 'Security Agreement Required',  // RFC 3329\n    500: 'Internal Server Error',\n    501: 'Not Implemented',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    504: 'Server Time-out',\n    505: 'Version Not Supported',\n    513: 'Message Too Large',\n    580: 'Precondition Failure',  // RFC 3312\n    600: 'Busy Everywhere',\n    603: 'Decline',\n    604: 'Does Not Exist Anywhere',\n    606: 'Not Acceptable'\n  }\n};\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/Constants.js\n ** module id = 8\n ** module chunks = 0\n **/","/**\n * @fileoverview Exceptions\n */\n\n/**\n * SIP Exceptions.\n * @augments SIP\n */\nmodule.exports = {\n  ConfigurationError: (function(){\n    var exception = function(parameter, value) {\n      this.code = 1;\n      this.name = 'CONFIGURATION_ERROR';\n      this.parameter = parameter;\n      this.value = value;\n      this.message = (!this.value)? 'Missing parameter: '+ this.parameter : 'Invalid value '+ JSON.stringify(this.value) +' for parameter \"'+ this.parameter +'\"';\n    };\n    exception.prototype = new Error();\n    return exception;\n  }()),\n\n  InvalidStateError: (function(){\n    var exception = function(status) {\n      this.code = 2;\n      this.name = 'INVALID_STATE_ERROR';\n      this.status = status;\n      this.message = 'Invalid status: ' + status;\n    };\n    exception.prototype = new Error();\n    return exception;\n  }()),\n\n  NotSupportedError: (function(){\n    var exception = function(message) {\n      this.code = 3;\n      this.name = 'NOT_SUPPORTED_ERROR';\n      this.message = message;\n    };\n    exception.prototype = new Error();\n    return exception;\n  }()),\n\n  NotReadyError: (function(){\n    var exception = function(message) {\n      this.code = 4;\n      this.name = 'NOT_READY_ERROR';\n      this.message = message;\n    };\n    exception.prototype = new Error();\n    return exception;\n  }())\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/Exceptions.js\n ** module id = 9\n ** module chunks = 0\n **/","/**\n * @fileoverview SIP TIMERS\n */\n\n/**\n * @augments SIP\n */\nvar\n  T1 = 500,\n  T2 = 4000,\n  T4 = 5000;\nmodule.exports = function (timers) {\n  var exports = {\n    T1: T1,\n    T2: T2,\n    T4: T4,\n    TIMER_B: 64 * T1,\n    TIMER_D: 0  * T1,\n    TIMER_F: 64 * T1,\n    TIMER_H: 64 * T1,\n    TIMER_I: 0  * T1,\n    TIMER_J: 0  * T1,\n    TIMER_K: 0  * T4,\n    TIMER_L: 64 * T1,\n    TIMER_M: 64 * T1,\n    TIMER_N: 64 * T1,\n    PROVISIONAL_RESPONSE_INTERVAL: 60000  // See RFC 3261 Section 13.3.1.1\n  };\n\n  ['setTimeout', 'clearTimeout', 'setInterval', 'clearInterval']\n  .forEach(function (name) {\n    // can't just use timers[name].bind(timers) since it bypasses jasmine's\n    // clock-mocking\n    exports[name] = function () {\n      return timers[name].apply(timers, arguments);\n    };\n  });\n\n  return exports;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/Timers.js\n ** module id = 10\n ** module chunks = 0\n **/","/**\n * @fileoverview Transport\n */\n\n/**\n * @augments SIP\n * @class Transport\n * @param {SIP.UA} ua\n * @param {Object} server ws_server Object\n */\nmodule.exports = function (SIP, window) {\nvar Transport,\n  C = {\n    // Transport status codes\n    STATUS_READY:        0,\n    STATUS_DISCONNECTED: 1,\n    STATUS_ERROR:        2\n  };\n\nTransport = function(ua, server) {\n\n  this.logger = ua.getLogger('sip.transport');\n  this.ua = ua;\n  this.ws = null;\n  this.server = server;\n  this.reconnection_attempts = 0;\n  this.closed = false;\n  this.connected = false;\n  this.reconnectTimer = null;\n  this.lastTransportError = {};\n\n  this.ua.transport = this;\n\n  // Connect\n  this.connect();\n};\n\nTransport.prototype = {\n  /**\n   * Send a message.\n   * @param {SIP.OutgoingRequest|String} msg\n   * @returns {Boolean}\n   */\n  send: function(msg) {\n    var message = msg.toString();\n\n    if(this.ws && this.ws.readyState === window.WebSocket.OPEN) {\n      if (this.ua.configuration.traceSip === true) {\n        this.logger.log('sending WebSocket message:\\n\\n' + message + '\\n');\n      }\n      this.ws.send(message);\n      return true;\n    } else {\n      this.logger.warn('unable to send message, WebSocket is not open');\n      return false;\n    }\n  },\n\n  /**\n  * Disconnect socket.\n  */\n  disconnect: function() {\n    if(this.ws) {\n      // Clear reconnectTimer\n      SIP.Timers.clearTimeout(this.reconnectTimer);\n\n      this.closed = true;\n      this.logger.log('closing WebSocket ' + this.server.ws_uri);\n      this.ws.close();\n    }\n\n    if (this.reconnectTimer !== null) {\n      SIP.Timers.clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n      this.ua.emit('disconnected', {\n        transport: this,\n        code: this.lastTransportError.code,\n        reason: this.lastTransportError.reason\n      });\n    }\n  },\n\n  /**\n  * Connect socket.\n  */\n  connect: function() {\n    var transport = this;\n\n    if(this.ws && (this.ws.readyState === WebSocket.OPEN || this.ws.readyState === WebSocket.CONNECTING)) {\n      this.logger.log('WebSocket ' + this.server.ws_uri + ' is already connected');\n      return false;\n    }\n\n    if(this.ws) {\n      this.ws.close();\n    }\n\n    this.logger.log('connecting to WebSocket ' + this.server.ws_uri);\n    this.ua.onTransportConnecting(this,\n      (this.reconnection_attempts === 0)?1:this.reconnection_attempts);\n\n    try {\n      this.ws = new window.WebSocket(this.server.ws_uri, 'sip');\n    } catch(e) {\n      this.logger.warn('error connecting to WebSocket ' + this.server.ws_uri + ': ' + e);\n    }\n\n    this.ws.binaryType = 'arraybuffer';\n\n    this.ws.onopen = function() {\n      transport.onOpen();\n    };\n\n    this.ws.onclose = function(e) {\n      transport.onClose(e);\n    };\n\n    this.ws.onmessage = function(e) {\n      transport.onMessage(e);\n    };\n\n    this.ws.onerror = function(e) {\n      transport.onError(e);\n    };\n  },\n\n  // Transport Event Handlers\n\n  /**\n  * @event\n  * @param {event} e\n  */\n  onOpen: function() {\n    this.connected = true;\n\n    this.logger.log('WebSocket ' + this.server.ws_uri + ' connected');\n    // Clear reconnectTimer since we are not disconnected\n    if (this.reconnectTimer !== null) {\n      SIP.Timers.clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    // Reset reconnection_attempts\n    this.reconnection_attempts = 0;\n    // Disable closed\n    this.closed = false;\n    // Trigger onTransportConnected callback\n    this.ua.onTransportConnected(this);\n  },\n\n  /**\n  * @event\n  * @param {event} e\n  */\n  onClose: function(e) {\n    var connected_before = this.connected;\n\n    this.connected = false;\n    this.lastTransportError.code = e.code;\n    this.lastTransportError.reason = e.reason;\n    this.logger.log('WebSocket disconnected (code: ' + e.code + (e.reason? '| reason: ' + e.reason : '') +')');\n\n    if(e.wasClean === false) {\n      this.logger.warn('WebSocket abrupt disconnection');\n    }\n    // Transport was connected\n    if(connected_before === true) {\n      this.ua.onTransportClosed(this);\n      // Check whether the user requested to close.\n      if(!this.closed) {\n        this.reConnect();\n      } else {\n        this.ua.emit('disconnected', {\n          transport: this,\n          code: this.lastTransportError.code,\n          reason: this.lastTransportError.reason\n        });\n      }\n    } else {\n      // This is the first connection attempt\n      //Network error\n      this.ua.onTransportError(this);\n    }\n  },\n\n  /**\n  * @event\n  * @param {event} e\n  */\n  onMessage: function(e) {\n    var message, transaction,\n      data = e.data;\n\n    // CRLF Keep Alive response from server. Ignore it.\n    if(data === '\\r\\n') {\n      if (this.ua.configuration.traceSip === true) {\n        this.logger.log('received WebSocket message with CRLF Keep Alive response');\n      }\n      return;\n    }\n\n    // WebSocket binary message.\n    else if (typeof data !== 'string') {\n      try {\n        data = String.fromCharCode.apply(null, new Uint8Array(data));\n      } catch(evt) {\n        this.logger.warn('received WebSocket binary message failed to be converted into string, message discarded');\n        return;\n      }\n\n      if (this.ua.configuration.traceSip === true) {\n        this.logger.log('received WebSocket binary message:\\n\\n' + data + '\\n');\n      }\n    }\n\n    // WebSocket text message.\n    else {\n      if (this.ua.configuration.traceSip === true) {\n        this.logger.log('received WebSocket text message:\\n\\n' + data + '\\n');\n      }\n    }\n\n    message = SIP.Parser.parseMessage(data, this.ua);\n\n    if (!message) {\n      return;\n    }\n\n    if(this.ua.status === SIP.UA.C.STATUS_USER_CLOSED && message instanceof SIP.IncomingRequest) {\n      return;\n    }\n\n    // Do some sanity check\n    if(SIP.sanityCheck(message, this.ua, this)) {\n      if(message instanceof SIP.IncomingRequest) {\n        message.transport = this;\n        this.ua.receiveRequest(message);\n      } else if(message instanceof SIP.IncomingResponse) {\n        /* Unike stated in 18.1.2, if a response does not match\n        * any transaction, it is discarded here and no passed to the core\n        * in order to be discarded there.\n        */\n        switch(message.method) {\n          case SIP.C.INVITE:\n            transaction = this.ua.transactions.ict[message.via_branch];\n            if(transaction) {\n              transaction.receiveResponse(message);\n            }\n            break;\n          case SIP.C.ACK:\n            // Just in case ;-)\n            break;\n          default:\n            transaction = this.ua.transactions.nict[message.via_branch];\n            if(transaction) {\n              transaction.receiveResponse(message);\n            }\n            break;\n        }\n      }\n    }\n  },\n\n  /**\n  * @event\n  * @param {event} e\n  */\n  onError: function(e) {\n    this.logger.warn('WebSocket connection error: ' + e);\n  },\n\n  /**\n  * Reconnection attempt logic.\n  * @private\n  */\n  reConnect: function() {\n    var transport = this;\n\n    this.reconnection_attempts += 1;\n\n    if(this.reconnection_attempts > this.ua.configuration.wsServerMaxReconnection) {\n      this.logger.warn('maximum reconnection attempts for WebSocket ' + this.server.ws_uri);\n      this.ua.onTransportError(this);\n    } else {\n      this.logger.log('trying to reconnect to WebSocket ' + this.server.ws_uri + ' (reconnection attempt ' + this.reconnection_attempts + ')');\n\n      this.reconnectTimer = SIP.Timers.setTimeout(function() {\n        transport.connect();\n        transport.reconnectTimer = null;\n      }, this.ua.configuration.wsServerReconnectionTimeout * 1000);\n    }\n  }\n};\n\nTransport.C = C;\nSIP.Transport = Transport;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/Transport.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\n * @fileoverview SIP Message Parser\n */\n\n/**\n * Extract and parse every header of a SIP message.\n * @augments SIP\n * @namespace\n */\nmodule.exports = function (SIP) {\nvar Parser;\n\nfunction getHeader(data, headerStart) {\n  var\n    // 'start' position of the header.\n    start = headerStart,\n    // 'end' position of the header.\n    end = 0,\n    // 'partial end' position of the header.\n    partialEnd = 0;\n\n  //End of message.\n  if (data.substring(start, start + 2).match(/(^\\r\\n)/)) {\n    return -2;\n  }\n\n  while(end === 0) {\n    // Partial End of Header.\n    partialEnd = data.indexOf('\\r\\n', start);\n\n    // 'indexOf' returns -1 if the value to be found never occurs.\n    if (partialEnd === -1) {\n      return partialEnd;\n    }\n\n    if(!data.substring(partialEnd + 2, partialEnd + 4).match(/(^\\r\\n)/) && data.charAt(partialEnd + 2).match(/(^\\s+)/)) {\n      // Not the end of the message. Continue from the next position.\n      start = partialEnd + 2;\n    } else {\n      end = partialEnd;\n    }\n  }\n\n  return end;\n}\n\nfunction parseHeader(message, data, headerStart, headerEnd) {\n  var header, idx, length, parsed,\n    hcolonIndex = data.indexOf(':', headerStart),\n    headerName = data.substring(headerStart, hcolonIndex).trim(),\n    headerValue = data.substring(hcolonIndex + 1, headerEnd).trim();\n\n  // If header-field is well-known, parse it.\n  switch(headerName.toLowerCase()) {\n    case 'via':\n    case 'v':\n      message.addHeader('via', headerValue);\n      if(message.getHeaders('via').length === 1) {\n        parsed = message.parseHeader('Via');\n        if(parsed) {\n          message.via = parsed;\n          message.via_branch = parsed.branch;\n        }\n      } else {\n        parsed = 0;\n      }\n      break;\n    case 'from':\n    case 'f':\n      message.setHeader('from', headerValue);\n      parsed = message.parseHeader('from');\n      if(parsed) {\n        message.from = parsed;\n        message.from_tag = parsed.getParam('tag');\n      }\n      break;\n    case 'to':\n    case 't':\n      message.setHeader('to', headerValue);\n      parsed = message.parseHeader('to');\n      if(parsed) {\n        message.to = parsed;\n        message.to_tag = parsed.getParam('tag');\n      }\n      break;\n    case 'record-route':\n      parsed = SIP.Grammar.parse(headerValue, 'Record_Route');\n\n      if (parsed === -1) {\n        parsed = undefined;\n        break;\n      }\n\n      length = parsed.length;\n      for (idx = 0; idx < length; idx++) {\n        header = parsed[idx];\n        message.addHeader('record-route', headerValue.substring(header.position, header.offset));\n        message.headers['Record-Route'][message.getHeaders('record-route').length - 1].parsed = header.parsed;\n      }\n      break;\n    case 'call-id':\n    case 'i':\n      message.setHeader('call-id', headerValue);\n      parsed = message.parseHeader('call-id');\n      if(parsed) {\n        message.call_id = headerValue;\n      }\n      break;\n    case 'contact':\n    case 'm':\n      parsed = SIP.Grammar.parse(headerValue, 'Contact');\n\n      if (parsed === -1) {\n        parsed = undefined;\n        break;\n      }\n\n      length = parsed.length;\n      for (idx = 0; idx < length; idx++) {\n        header = parsed[idx];\n        message.addHeader('contact', headerValue.substring(header.position, header.offset));\n        message.headers['Contact'][message.getHeaders('contact').length - 1].parsed = header.parsed;\n      }\n      break;\n    case 'content-length':\n    case 'l':\n      message.setHeader('content-length', headerValue);\n      parsed = message.parseHeader('content-length');\n      break;\n    case 'content-type':\n    case 'c':\n      message.setHeader('content-type', headerValue);\n      parsed = message.parseHeader('content-type');\n      break;\n    case 'cseq':\n      message.setHeader('cseq', headerValue);\n      parsed = message.parseHeader('cseq');\n      if(parsed) {\n        message.cseq = parsed.value;\n      }\n      if(message instanceof SIP.IncomingResponse) {\n        message.method = parsed.method;\n      }\n      break;\n    case 'max-forwards':\n      message.setHeader('max-forwards', headerValue);\n      parsed = message.parseHeader('max-forwards');\n      break;\n    case 'www-authenticate':\n      message.setHeader('www-authenticate', headerValue);\n      parsed = message.parseHeader('www-authenticate');\n      break;\n    case 'proxy-authenticate':\n      message.setHeader('proxy-authenticate', headerValue);\n      parsed = message.parseHeader('proxy-authenticate');\n      break;\n    case 'refer-to':\n    case 'r':\n      message.setHeader('refer-to', headerValue);\n      parsed = message.parseHeader('refer-to');\n      if (parsed) {\n        message.refer_to = parsed;\n      }\n      break;\n    default:\n      // Do not parse this header.\n      message.setHeader(headerName, headerValue);\n      parsed = 0;\n  }\n\n  if (parsed === undefined) {\n    return {\n      error: 'error parsing header \"'+ headerName +'\"'\n    };\n  } else {\n    return true;\n  }\n}\n\n/** Parse SIP Message\n * @function\n * @param {String} message SIP message.\n * @param {Object} logger object.\n * @returns {SIP.IncomingRequest|SIP.IncomingResponse|undefined}\n */\nParser = {};\nParser.parseMessage = function(data, ua) {\n  var message, firstLine, contentLength, bodyStart, parsed,\n    headerStart = 0,\n    headerEnd = data.indexOf('\\r\\n'),\n    logger = ua.getLogger('sip.parser');\n\n  if(headerEnd === -1) {\n    logger.warn('no CRLF found, not a SIP message, discarded');\n    return;\n  }\n\n  // Parse first line. Check if it is a Request or a Reply.\n  firstLine = data.substring(0, headerEnd);\n  parsed = SIP.Grammar.parse(firstLine, 'Request_Response');\n\n  if(parsed === -1) {\n    logger.warn('error parsing first line of SIP message: \"' + firstLine + '\"');\n    return;\n  } else if(!parsed.status_code) {\n    message = new SIP.IncomingRequest(ua);\n    message.method = parsed.method;\n    message.ruri = parsed.uri;\n  } else {\n    message = new SIP.IncomingResponse(ua);\n    message.status_code = parsed.status_code;\n    message.reason_phrase = parsed.reason_phrase;\n  }\n\n  message.data = data;\n  headerStart = headerEnd + 2;\n\n  /* Loop over every line in data. Detect the end of each header and parse\n  * it or simply add to the headers collection.\n  */\n  while(true) {\n    headerEnd = getHeader(data, headerStart);\n\n    // The SIP message has normally finished.\n    if(headerEnd === -2) {\n      bodyStart = headerStart + 2;\n      break;\n    }\n    // data.indexOf returned -1 due to a malformed message.\n    else if(headerEnd === -1) {\n      logger.error('malformed message');\n      return;\n    }\n\n    parsed = parseHeader(message, data, headerStart, headerEnd);\n\n    if(parsed !== true) {\n      logger.error(parsed.error);\n      return;\n    }\n\n    headerStart = headerEnd + 2;\n  }\n\n  /* RFC3261 18.3.\n   * If there are additional bytes in the transport packet\n   * beyond the end of the body, they MUST be discarded.\n   */\n  if(message.hasHeader('content-length')) {\n    contentLength = message.getHeader('content-length');\n    message.body = data.substr(bodyStart, contentLength);\n  } else {\n    message.body = data.substring(bodyStart);\n  }\n\n  return message;\n};\n\nSIP.Parser = Parser;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/Parser.js\n ** module id = 12\n ** module chunks = 0\n **/","/**\n * @fileoverview SIP Message\n */\n\nmodule.exports = function (SIP) {\nvar\n  OutgoingRequest,\n  IncomingMessage,\n  IncomingRequest,\n  IncomingResponse;\n\n/**\n * @augments SIP\n * @class Class for outgoing SIP request.\n * @param {String} method request method\n * @param {String} ruri request uri\n * @param {SIP.UA} ua\n * @param {Object} params parameters that will have priority over ua.configuration parameters:\n * <br>\n *  - cseq, call_id, from_tag, from_uri, from_displayName, to_uri, to_tag, route_set\n * @param {Object} [headers] extra headers\n * @param {String} [body]\n */\nOutgoingRequest = function(method, ruri, ua, params, extraHeaders, body) {\n  var\n    to,\n    from,\n    call_id,\n    cseq;\n\n  params = params || {};\n\n  // Mandatory parameters check\n  if(!method || !ruri || !ua) {\n    return null;\n  }\n\n  this.logger = ua.getLogger('sip.sipmessage');\n  this.ua = ua;\n  this.headers = {};\n  this.method = method;\n  this.ruri = ruri;\n  this.body = body;\n  this.extraHeaders = (extraHeaders || []).slice();\n  this.statusCode = params.status_code;\n  this.reasonPhrase = params.reason_phrase;\n\n  // Fill the Common SIP Request Headers\n\n  // Route\n  if (params.route_set) {\n    this.setHeader('route', params.route_set);\n  } else if (ua.configuration.usePreloadedRoute){\n    this.setHeader('route', ua.transport.server.sip_uri);\n  }\n\n  // Via\n  // Empty Via header. Will be filled by the client transaction.\n  this.setHeader('via', '');\n\n  // Max-Forwards\n  this.setHeader('max-forwards', SIP.UA.C.MAX_FORWARDS);\n\n  // To\n  to = (params.to_displayName || params.to_displayName === 0) ? '\"' + params.to_displayName + '\" ' : '';\n  to += '<' + (params.to_uri || ruri) + '>';\n  to += params.to_tag ? ';tag=' + params.to_tag : '';\n  this.to = new SIP.NameAddrHeader.parse(to);\n  this.setHeader('to', to);\n\n  // From\n  if (params.from_displayName || params.from_displayName === 0) {\n    from = '\"' + params.from_displayName + '\" ';\n  } else if (ua.configuration.displayName) {\n    from = '\"' + ua.configuration.displayName + '\" ';\n  } else {\n    from = '';\n  }\n  from += '<' + (params.from_uri || ua.configuration.uri) + '>;tag=';\n  from += params.from_tag || SIP.Utils.newTag();\n  this.from = new SIP.NameAddrHeader.parse(from);\n  this.setHeader('from', from);\n\n  // Call-ID\n  call_id = params.call_id || (ua.configuration.sipjsId + SIP.Utils.createRandomToken(15));\n  this.call_id = call_id;\n  this.setHeader('call-id', call_id);\n\n  // CSeq\n  cseq = params.cseq || Math.floor(Math.random() * 10000);\n  this.cseq = cseq;\n  this.setHeader('cseq', cseq + ' ' + method);\n};\n\nOutgoingRequest.prototype = {\n  /**\n   * Replace the the given header by the given value.\n   * @param {String} name header name\n   * @param {String | Array} value header value\n   */\n  setHeader: function(name, value) {\n    this.headers[SIP.Utils.headerize(name)] = (value instanceof Array) ? value : [value];\n  },\n\n  /**\n   * Get the value of the given header name at the given position.\n   * @param {String} name header name\n   * @returns {String|undefined} Returns the specified header, undefined if header doesn't exist.\n   */\n  getHeader: function(name) {\n    var regexp, idx,\n      length = this.extraHeaders.length,\n      header = this.headers[SIP.Utils.headerize(name)];\n\n    if(header) {\n      if(header[0]) {\n        return header[0];\n      }\n    } else {\n      regexp = new RegExp('^\\\\s*' + name + '\\\\s*:','i');\n      for (idx = 0; idx < length; idx++) {\n        header = this.extraHeaders[idx];\n        if (regexp.test(header)) {\n          return header.substring(header.indexOf(':')+1).trim();\n        }\n      }\n    }\n\n    return;\n  },\n\n  /**\n   * Get the header/s of the given name.\n   * @param {String} name header name\n   * @returns {Array} Array with all the headers of the specified name.\n   */\n  getHeaders: function(name) {\n    var idx, length, regexp,\n      header = this.headers[SIP.Utils.headerize(name)],\n      result = [];\n\n    if(header) {\n      length = header.length;\n      for (idx = 0; idx < length; idx++) {\n        result.push(header[idx]);\n      }\n      return result;\n    } else {\n      length = this.extraHeaders.length;\n      regexp = new RegExp('^\\\\s*' + name + '\\\\s*:','i');\n      for (idx = 0; idx < length; idx++) {\n        header = this.extraHeaders[idx];\n        if (regexp.test(header)) {\n          result.push(header.substring(header.indexOf(':')+1).trim());\n        }\n      }\n      return result;\n    }\n  },\n\n  /**\n   * Verify the existence of the given header.\n   * @param {String} name header name\n   * @returns {boolean} true if header with given name exists, false otherwise\n   */\n  hasHeader: function(name) {\n    var regexp, idx,\n      length = this.extraHeaders.length;\n\n    if (this.headers[SIP.Utils.headerize(name)]) {\n      return true;\n    } else {\n      regexp = new RegExp('^\\\\s*' + name + '\\\\s*:','i');\n      for (idx = 0; idx < length; idx++) {\n        if (regexp.test(this.extraHeaders[idx])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  toString: function() {\n    var msg = '', header, length, idx, supported = [];\n\n    msg += this.method + ' ' + this.ruri + ' SIP/2.0\\r\\n';\n\n    for (header in this.headers) {\n      length = this.headers[header].length;\n      for (idx = 0; idx < length; idx++) {\n        msg += header + ': ' + this.headers[header][idx] + '\\r\\n';\n      }\n    }\n\n    length = this.extraHeaders.length;\n    for (idx = 0; idx < length; idx++) {\n      msg += this.extraHeaders[idx].trim() +'\\r\\n';\n    }\n\n    //Supported\n    if (this.method === SIP.C.REGISTER) {\n      supported.push('path', 'gruu');\n    } else if (this.method === SIP.C.INVITE &&\n               (this.ua.contact.pub_gruu || this.ua.contact.temp_gruu)) {\n      supported.push('gruu');\n    }\n\n    if (this.ua.configuration.rel100 === SIP.C.supported.SUPPORTED) {\n      supported.push('100rel');\n    }\n\n    supported.push('outbound');\n\n    msg += 'Supported: ' +  supported +'\\r\\n';\n    msg += 'User-Agent: ' + this.ua.configuration.userAgentString +'\\r\\n';\n\n    if(this.body) {\n      length = SIP.Utils.str_utf8_length(this.body);\n      msg += 'Content-Length: ' + length + '\\r\\n\\r\\n';\n      msg += this.body;\n    } else {\n      msg += 'Content-Length: 0\\r\\n\\r\\n';\n    }\n\n    return msg;\n  }\n};\n\n/**\n * @augments SIP\n * @class Class for incoming SIP message.\n */\nIncomingMessage = function(){\n  this.data = null;\n  this.headers = null;\n  this.method =  null;\n  this.via = null;\n  this.via_branch = null;\n  this.call_id = null;\n  this.cseq = null;\n  this.from = null;\n  this.from_tag = null;\n  this.to = null;\n  this.to_tag = null;\n  this.body = null;\n};\n\nIncomingMessage.prototype = {\n  /**\n  * Insert a header of the given name and value into the last position of the\n  * header array.\n  * @param {String} name header name\n  * @param {String} value header value\n  */\n  addHeader: function(name, value) {\n    var header = { raw: value };\n\n    name = SIP.Utils.headerize(name);\n\n    if(this.headers[name]) {\n      this.headers[name].push(header);\n    } else {\n      this.headers[name] = [header];\n    }\n  },\n\n  /**\n   * Get the value of the given header name at the given position.\n   * @param {String} name header name\n   * @returns {String|undefined} Returns the specified header, null if header doesn't exist.\n   */\n  getHeader: function(name) {\n    var header = this.headers[SIP.Utils.headerize(name)];\n\n    if(header) {\n      if(header[0]) {\n        return header[0].raw;\n      }\n    } else {\n      return;\n    }\n  },\n\n  /**\n   * Get the header/s of the given name.\n   * @param {String} name header name\n   * @returns {Array} Array with all the headers of the specified name.\n   */\n  getHeaders: function(name) {\n    var idx, length,\n      header = this.headers[SIP.Utils.headerize(name)],\n      result = [];\n\n    if(!header) {\n      return [];\n    }\n\n    length = header.length;\n    for (idx = 0; idx < length; idx++) {\n      result.push(header[idx].raw);\n    }\n\n    return result;\n  },\n\n  /**\n   * Verify the existence of the given header.\n   * @param {String} name header name\n   * @returns {boolean} true if header with given name exists, false otherwise\n   */\n  hasHeader: function(name) {\n    return(this.headers[SIP.Utils.headerize(name)]) ? true : false;\n  },\n\n  /**\n  * Parse the given header on the given index.\n  * @param {String} name header name\n  * @param {Number} [idx=0] header index\n  * @returns {Object|undefined} Parsed header object, undefined if the header is not present or in case of a parsing error.\n  */\n  parseHeader: function(name, idx) {\n    var header, value, parsed;\n\n    name = SIP.Utils.headerize(name);\n\n    idx = idx || 0;\n\n    if(!this.headers[name]) {\n      this.logger.log('header \"' + name + '\" not present');\n      return;\n    } else if(idx >= this.headers[name].length) {\n      this.logger.log('not so many \"' + name + '\" headers present');\n      return;\n    }\n\n    header = this.headers[name][idx];\n    value = header.raw;\n\n    if(header.parsed) {\n      return header.parsed;\n    }\n\n    //substitute '-' by '_' for grammar rule matching.\n    parsed = SIP.Grammar.parse(value, name.replace(/-/g, '_'));\n\n    if(parsed === -1) {\n      this.headers[name].splice(idx, 1); //delete from headers\n      this.logger.warn('error parsing \"' + name + '\" header field with value \"' + value + '\"');\n      return;\n    } else {\n      header.parsed = parsed;\n      return parsed;\n    }\n  },\n\n  /**\n   * Message Header attribute selector. Alias of parseHeader.\n   * @param {String} name header name\n   * @param {Number} [idx=0] header index\n   * @returns {Object|undefined} Parsed header object, undefined if the header is not present or in case of a parsing error.\n   *\n   * @example\n   * message.s('via',3).port\n   */\n  s: function(name, idx) {\n    return this.parseHeader(name, idx);\n  },\n\n  /**\n  * Replace the value of the given header by the value.\n  * @param {String} name header name\n  * @param {String} value header value\n  */\n  setHeader: function(name, value) {\n    var header = { raw: value };\n    this.headers[SIP.Utils.headerize(name)] = [header];\n  },\n\n  toString: function() {\n    return this.data;\n  }\n};\n\n/**\n * @augments IncomingMessage\n * @class Class for incoming SIP request.\n */\nIncomingRequest = function(ua) {\n  this.logger = ua.getLogger('sip.sipmessage');\n  this.ua = ua;\n  this.headers = {};\n  this.ruri = null;\n  this.transport = null;\n  this.server_transaction = null;\n};\nIncomingRequest.prototype = new IncomingMessage();\n\n/**\n* Stateful reply.\n* @param {Number} code status code\n* @param {String} reason reason phrase\n* @param {Object} headers extra headers\n* @param {String} body body\n* @param {Function} [onSuccess] onSuccess callback\n* @param {Function} [onFailure] onFailure callback\n*/\nIncomingRequest.prototype.reply = function(code, reason, extraHeaders, body, onSuccess, onFailure) {\n  var rr, vias, length, idx, response,\n  supported = [],\n    to = this.getHeader('To'),\n    r = 0,\n    v = 0;\n\n  code = code || null;\n  reason = reason || null;\n\n  // Validate code and reason values\n  if (!code || (code < 100 || code > 699)) {\n    throw new TypeError('Invalid status_code: '+ code);\n  } else if (reason && typeof reason !== 'string' && !(reason instanceof String)) {\n    throw new TypeError('Invalid reason_phrase: '+ reason);\n  }\n\n  reason = reason || SIP.C.REASON_PHRASE[code] || '';\n  extraHeaders = (extraHeaders || []).slice();\n\n  response = 'SIP/2.0 ' + code + ' ' + reason + '\\r\\n';\n\n  if(this.method === SIP.C.INVITE && code > 100 && code <= 200) {\n    rr = this.getHeaders('record-route');\n    length = rr.length;\n\n    for(r; r < length; r++) {\n      response += 'Record-Route: ' + rr[r] + '\\r\\n';\n    }\n  }\n\n  vias = this.getHeaders('via');\n  length = vias.length;\n\n  for(v; v < length; v++) {\n    response += 'Via: ' + vias[v] + '\\r\\n';\n  }\n\n  if(!this.to_tag && code > 100) {\n    to += ';tag=' + SIP.Utils.newTag();\n  } else if(this.to_tag && !this.s('to').hasParam('tag')) {\n    to += ';tag=' + this.to_tag;\n  }\n\n  response += 'To: ' + to + '\\r\\n';\n  response += 'From: ' + this.getHeader('From') + '\\r\\n';\n  response += 'Call-ID: ' + this.call_id + '\\r\\n';\n  response += 'CSeq: ' + this.cseq + ' ' + this.method + '\\r\\n';\n\n  length = extraHeaders.length;\n  for (idx = 0; idx < length; idx++) {\n    response += extraHeaders[idx].trim() +'\\r\\n';\n  }\n\n  //Supported\n  if (this.method === SIP.C.INVITE &&\n               (this.ua.contact.pub_gruu || this.ua.contact.temp_gruu)) {\n    supported.push('gruu');\n  }\n\n  if (this.ua.configuration.rel100 === SIP.C.supported.SUPPORTED) {\n    supported.push('100rel');\n  }\n\n  supported.push('outbound');\n\n  response += 'Supported: ' + supported + '\\r\\n';\n\n  if(body) {\n    length = SIP.Utils.str_utf8_length(body);\n    response += 'Content-Type: application/sdp\\r\\n';\n    response += 'Content-Length: ' + length + '\\r\\n\\r\\n';\n    response += body;\n  } else {\n    response += 'Content-Length: ' + 0 + '\\r\\n\\r\\n';\n  }\n\n  this.server_transaction.receiveResponse(code, response, onSuccess, onFailure);\n\n  return response;\n};\n\n/**\n* Stateless reply.\n* @param {Number} code status code\n* @param {String} reason reason phrase\n*/\nIncomingRequest.prototype.reply_sl = function(code, reason) {\n  var to, response,\n    v = 0,\n    vias = this.getHeaders('via'),\n    length = vias.length;\n\n  code = code || null;\n  reason = reason || null;\n\n  // Validate code and reason values\n  if (!code || (code < 100 || code > 699)) {\n    throw new TypeError('Invalid status_code: '+ code);\n  } else if (reason && typeof reason !== 'string' && !(reason instanceof String)) {\n    throw new TypeError('Invalid reason_phrase: '+ reason);\n  }\n\n  reason = reason || SIP.C.REASON_PHRASE[code] || '';\n\n  response = 'SIP/2.0 ' + code + ' ' + reason + '\\r\\n';\n\n  for(v; v < length; v++) {\n    response += 'Via: ' + vias[v] + '\\r\\n';\n  }\n\n  to = this.getHeader('To');\n\n  if(!this.to_tag && code > 100) {\n    to += ';tag=' + SIP.Utils.newTag();\n  } else if(this.to_tag && !this.s('to').hasParam('tag')) {\n    to += ';tag=' + this.to_tag;\n  }\n\n  response += 'To: ' + to + '\\r\\n';\n  response += 'From: ' + this.getHeader('From') + '\\r\\n';\n  response += 'Call-ID: ' + this.call_id + '\\r\\n';\n  response += 'CSeq: ' + this.cseq + ' ' + this.method + '\\r\\n';\n  response += 'Content-Length: ' + 0 + '\\r\\n\\r\\n';\n\n  this.transport.send(response);\n};\n\n\n/**\n * @augments IncomingMessage\n * @class Class for incoming SIP response.\n */\nIncomingResponse = function(ua) {\n  this.logger = ua.getLogger('sip.sipmessage');\n  this.headers = {};\n  this.status_code = null;\n  this.reason_phrase = null;\n};\nIncomingResponse.prototype = new IncomingMessage();\n\nSIP.OutgoingRequest = OutgoingRequest;\nSIP.IncomingRequest = IncomingRequest;\nSIP.IncomingResponse = IncomingResponse;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/SIPMessage.js\n ** module id = 13\n ** module chunks = 0\n **/","/**\n * @fileoverview SIP URI\n */\n\n/**\n * @augments SIP\n * @class Class creating a SIP URI.\n *\n * @param {String} [scheme]\n * @param {String} [user]\n * @param {String} host\n * @param {String} [port]\n * @param {Object} [parameters]\n * @param {Object} [headers]\n *\n */\nmodule.exports = function (SIP) {\nvar URI;\n\nURI = function(scheme, user, host, port, parameters, headers) {\n  var param, header;\n\n  // Checks\n  if(!host) {\n    throw new TypeError('missing or invalid \"host\" parameter');\n  }\n\n  // Initialize parameters\n  scheme = scheme || SIP.C.SIP;\n  this.parameters = {};\n  this.headers = {};\n\n  for (param in parameters) {\n    this.setParam(param, parameters[param]);\n  }\n\n  for (header in headers) {\n    this.setHeader(header, headers[header]);\n  }\n\n  Object.defineProperties(this, {\n    scheme: {\n      get: function(){ return scheme; },\n      set: function(value){\n        scheme = value.toLowerCase();\n      }\n    },\n\n    user: {\n      get: function(){ return user; },\n      set: function(value){\n        user = value;\n      }\n    },\n\n    host: {\n      get: function(){ return host; },\n      set: function(value){\n        host = value.toLowerCase();\n      }\n    },\n\n    port: {\n      get: function(){ return port; },\n      set: function(value){\n        port = value === 0 ? value : (parseInt(value,10) || null);\n      }\n    }\n  });\n};\nURI.prototype = {\n  setParam: function(key, value) {\n    if(key) {\n      this.parameters[key.toLowerCase()] = (typeof value === 'undefined' || value === null) ? null : value.toString().toLowerCase();\n    }\n  },\n\n  getParam: function(key) {\n    if(key) {\n      return this.parameters[key.toLowerCase()];\n    }\n  },\n\n  hasParam: function(key) {\n    if(key) {\n      return (this.parameters.hasOwnProperty(key.toLowerCase()) && true) || false;\n    }\n  },\n\n  deleteParam: function(parameter) {\n    var value;\n    parameter = parameter.toLowerCase();\n    if (this.parameters.hasOwnProperty(parameter)) {\n      value = this.parameters[parameter];\n      delete this.parameters[parameter];\n      return value;\n    }\n  },\n\n  clearParams: function() {\n    this.parameters = {};\n  },\n\n  setHeader: function(name, value) {\n    this.headers[SIP.Utils.headerize(name)] = (value instanceof Array) ? value : [value];\n  },\n\n  getHeader: function(name) {\n    if(name) {\n      return this.headers[SIP.Utils.headerize(name)];\n    }\n  },\n\n  hasHeader: function(name) {\n    if(name) {\n      return (this.headers.hasOwnProperty(SIP.Utils.headerize(name)) && true) || false;\n    }\n  },\n\n  deleteHeader: function(header) {\n    var value;\n    header = SIP.Utils.headerize(header);\n    if(this.headers.hasOwnProperty(header)) {\n      value = this.headers[header];\n      delete this.headers[header];\n      return value;\n    }\n  },\n\n  clearHeaders: function() {\n    this.headers = {};\n  },\n\n  clone: function() {\n    return new URI(\n      this.scheme,\n      this.user,\n      this.host,\n      this.port,\n      JSON.parse(JSON.stringify(this.parameters)),\n      JSON.parse(JSON.stringify(this.headers)));\n  },\n\n  toString: function(){\n    var header, parameter, idx, uri,\n      headers = [];\n\n    uri  = this.scheme + ':';\n    // add slashes if it's not a sip(s) URI\n    if (!this.scheme.match(\"^sips?$\")) {\n      uri += \"//\";\n    }\n    if (this.user) {\n      uri += SIP.Utils.escapeUser(this.user) + '@';\n    }\n    uri += this.host;\n    if (this.port || this.port === 0) {\n      uri += ':' + this.port;\n    }\n\n    for (parameter in this.parameters) {\n      uri += ';' + parameter;\n\n      if (this.parameters[parameter] !== null) {\n        uri += '='+ this.parameters[parameter];\n      }\n    }\n\n    for(header in this.headers) {\n      for(idx in this.headers[header]) {\n        headers.push(header + '=' + this.headers[header][idx]);\n      }\n    }\n\n    if (headers.length > 0) {\n      uri += '?' + headers.join('&');\n    }\n\n    return uri;\n  }\n};\n\n\n/**\n  * Parse the given string and returns a SIP.URI instance or undefined if\n  * it is an invalid URI.\n  * @public\n  * @param {String} uri\n  */\nURI.parse = function(uri) {\n  uri = SIP.Grammar.parse(uri,'SIP_URI');\n\n  if (uri !== -1) {\n    return uri;\n  } else {\n    return undefined;\n  }\n};\n\nSIP.URI = URI;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/URI.js\n ** module id = 14\n ** module chunks = 0\n **/","/**\n * @fileoverview SIP NameAddrHeader\n */\n\n/**\n * @augments SIP\n * @class Class creating a Name Address SIP header.\n *\n * @param {SIP.URI} uri\n * @param {String} [displayName]\n * @param {Object} [parameters]\n *\n */\nmodule.exports = function (SIP) {\nvar NameAddrHeader;\n\nNameAddrHeader = function(uri, displayName, parameters) {\n  var param;\n\n  // Checks\n  if(!uri || !(uri instanceof SIP.URI)) {\n    throw new TypeError('missing or invalid \"uri\" parameter');\n  }\n\n  // Initialize parameters\n  this.uri = uri;\n  this.parameters = {};\n\n  for (param in parameters) {\n    this.setParam(param, parameters[param]);\n  }\n\n  Object.defineProperties(this, {\n    displayName: {\n      get: function() { return displayName; },\n      set: function(value) {\n        displayName = (value === 0) ? '0' : value;\n      }\n    }\n  });\n};\nNameAddrHeader.prototype = {\n  setParam: function (key, value) {\n    if(key) {\n      this.parameters[key.toLowerCase()] = (typeof value === 'undefined' || value === null) ? null : value.toString();\n    }\n  },\n  getParam: SIP.URI.prototype.getParam,\n  hasParam: SIP.URI.prototype.hasParam,\n  deleteParam: SIP.URI.prototype.deleteParam,\n  clearParams: SIP.URI.prototype.clearParams,\n\n  clone: function() {\n    return new NameAddrHeader(\n      this.uri.clone(),\n      this.displayName,\n      JSON.parse(JSON.stringify(this.parameters)));\n  },\n\n  toString: function() {\n    var body, parameter;\n\n    body  = (this.displayName || this.displayName === 0) ? '\"' + this.displayName + '\" ' : '';\n    body += '<' + this.uri.toString() + '>';\n\n    for (parameter in this.parameters) {\n      body += ';' + parameter;\n\n      if (this.parameters[parameter] !== null) {\n        body += '='+ this.parameters[parameter];\n      }\n    }\n\n    return body;\n  }\n};\n\n\n/**\n  * Parse the given string and returns a SIP.NameAddrHeader instance or undefined if\n  * it is an invalid NameAddrHeader.\n  * @public\n  * @param {String} name_addr_header\n  */\nNameAddrHeader.parse = function(name_addr_header) {\n  name_addr_header = SIP.Grammar.parse(name_addr_header,'Name_Addr_Header');\n\n  if (name_addr_header !== -1) {\n    return name_addr_header;\n  } else {\n    return undefined;\n  }\n};\n\nSIP.NameAddrHeader = NameAddrHeader;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/NameAddrHeader.js\n ** module id = 15\n ** module chunks = 0\n **/","/**\n * @fileoverview SIP Transactions\n */\n\n/**\n * SIP Transactions module.\n * @augments SIP\n */\nmodule.exports = function (SIP) {\nvar\n  C = {\n    // Transaction states\n    STATUS_TRYING:     1,\n    STATUS_PROCEEDING: 2,\n    STATUS_CALLING:    3,\n    STATUS_ACCEPTED:   4,\n    STATUS_COMPLETED:  5,\n    STATUS_TERMINATED: 6,\n    STATUS_CONFIRMED:  7,\n\n    // Transaction types\n    NON_INVITE_CLIENT: 'nict',\n    NON_INVITE_SERVER: 'nist',\n    INVITE_CLIENT: 'ict',\n    INVITE_SERVER: 'ist'\n  };\n\n/**\n* @augments SIP.Transactions\n* @class Non Invite Client Transaction\n* @param {SIP.RequestSender} request_sender\n* @param {SIP.OutgoingRequest} request\n* @param {SIP.Transport} transport\n*/\nvar NonInviteClientTransaction = function(request_sender, request, transport) {\n  var via,\n    events = ['stateChanged'];\n\n  this.type = C.NON_INVITE_CLIENT;\n  this.transport = transport;\n  this.id = 'z9hG4bK' + Math.floor(Math.random() * 10000000);\n  this.request_sender = request_sender;\n  this.request = request;\n\n  this.logger = request_sender.ua.getLogger('sip.transaction.nict', this.id);\n\n  via = 'SIP/2.0/' + (request_sender.ua.configuration.hackViaTcp ? 'TCP' : transport.server.scheme);\n  via += ' ' + request_sender.ua.configuration.viaHost + ';branch=' + this.id;\n\n  this.request.setHeader('via', via);\n\n  this.request_sender.ua.newTransaction(this);\n\n  this.initEvents(events);\n};\nNonInviteClientTransaction.prototype = new SIP.EventEmitter();\n\nNonInviteClientTransaction.prototype.stateChanged = function(state) {\n  this.state = state;\n  this.emit('stateChanged');\n};\n\nNonInviteClientTransaction.prototype.send = function() {\n  var tr = this;\n\n  this.stateChanged(C.STATUS_TRYING);\n  this.F = SIP.Timers.setTimeout(tr.timer_F.bind(tr), SIP.Timers.TIMER_F);\n\n  if(!this.transport.send(this.request)) {\n    this.onTransportError();\n  }\n};\n\nNonInviteClientTransaction.prototype.onTransportError = function() {\n  this.logger.log('transport error occurred, deleting non-INVITE client transaction ' + this.id);\n  SIP.Timers.clearTimeout(this.F);\n  SIP.Timers.clearTimeout(this.K);\n  this.stateChanged(C.STATUS_TERMINATED);\n  this.request_sender.ua.destroyTransaction(this);\n  this.request_sender.onTransportError();\n};\n\nNonInviteClientTransaction.prototype.timer_F = function() {\n  this.logger.log('Timer F expired for non-INVITE client transaction ' + this.id);\n  this.stateChanged(C.STATUS_TERMINATED);\n  this.request_sender.ua.destroyTransaction(this);\n  this.request_sender.onRequestTimeout();\n};\n\nNonInviteClientTransaction.prototype.timer_K = function() {\n  this.stateChanged(C.STATUS_TERMINATED);\n  this.request_sender.ua.destroyTransaction(this);\n};\n\nNonInviteClientTransaction.prototype.receiveResponse = function(response) {\n  var\n    tr = this,\n    status_code = response.status_code;\n\n  if(status_code < 200) {\n    switch(this.state) {\n      case C.STATUS_TRYING:\n      case C.STATUS_PROCEEDING:\n        this.stateChanged(C.STATUS_PROCEEDING);\n        this.request_sender.receiveResponse(response);\n        break;\n    }\n  } else {\n    switch(this.state) {\n      case C.STATUS_TRYING:\n      case C.STATUS_PROCEEDING:\n        this.stateChanged(C.STATUS_COMPLETED);\n        SIP.Timers.clearTimeout(this.F);\n\n        if(status_code === 408) {\n          this.request_sender.onRequestTimeout();\n        } else {\n          this.request_sender.receiveResponse(response);\n        }\n\n        this.K = SIP.Timers.setTimeout(tr.timer_K.bind(tr), SIP.Timers.TIMER_K);\n        break;\n      case C.STATUS_COMPLETED:\n        break;\n    }\n  }\n};\n\n\n\n/**\n* @augments SIP.Transactions\n* @class Invite Client Transaction\n* @param {SIP.RequestSender} request_sender\n* @param {SIP.OutgoingRequest} request\n* @param {SIP.Transport} transport\n*/\nvar InviteClientTransaction = function(request_sender, request, transport) {\n  var via,\n    tr = this,\n    events = ['stateChanged'];\n\n  this.type = C.INVITE_CLIENT;\n  this.transport = transport;\n  this.id = 'z9hG4bK' + Math.floor(Math.random() * 10000000);\n  this.request_sender = request_sender;\n  this.request = request;\n\n  this.logger = request_sender.ua.getLogger('sip.transaction.ict', this.id);\n\n  via = 'SIP/2.0/' + (request_sender.ua.configuration.hackViaTcp ? 'TCP' : transport.server.scheme);\n  via += ' ' + request_sender.ua.configuration.viaHost + ';branch=' + this.id;\n\n  this.request.setHeader('via', via);\n\n  this.request_sender.ua.newTransaction(this);\n\n  // Add the cancel property to the request.\n  //Will be called from the request instance, not the transaction itself.\n  this.request.cancel = function(reason) {\n    tr.cancel_request(tr, reason);\n  };\n\n  this.initEvents(events);\n};\nInviteClientTransaction.prototype = new SIP.EventEmitter();\n\nInviteClientTransaction.prototype.stateChanged = function(state) {\n  this.state = state;\n  this.emit('stateChanged');\n};\n\nInviteClientTransaction.prototype.send = function() {\n  var tr = this;\n  this.stateChanged(C.STATUS_CALLING);\n  this.B = SIP.Timers.setTimeout(tr.timer_B.bind(tr), SIP.Timers.TIMER_B);\n\n  if(!this.transport.send(this.request)) {\n    this.onTransportError();\n  }\n};\n\nInviteClientTransaction.prototype.onTransportError = function() {\n  this.logger.log('transport error occurred, deleting INVITE client transaction ' + this.id);\n  SIP.Timers.clearTimeout(this.B);\n  SIP.Timers.clearTimeout(this.D);\n  SIP.Timers.clearTimeout(this.M);\n  this.stateChanged(C.STATUS_TERMINATED);\n  this.request_sender.ua.destroyTransaction(this);\n\n  if (this.state !== C.STATUS_ACCEPTED) {\n    this.request_sender.onTransportError();\n  }\n};\n\n// RFC 6026 7.2\nInviteClientTransaction.prototype.timer_M = function() {\n  this.logger.log('Timer M expired for INVITE client transaction ' + this.id);\n\n  if(this.state === C.STATUS_ACCEPTED) {\n    SIP.Timers.clearTimeout(this.B);\n    this.stateChanged(C.STATUS_TERMINATED);\n    this.request_sender.ua.destroyTransaction(this);\n  }\n};\n\n// RFC 3261 17.1.1\nInviteClientTransaction.prototype.timer_B = function() {\n  this.logger.log('Timer B expired for INVITE client transaction ' + this.id);\n  if(this.state === C.STATUS_CALLING) {\n    this.stateChanged(C.STATUS_TERMINATED);\n    this.request_sender.ua.destroyTransaction(this);\n    this.request_sender.onRequestTimeout();\n  }\n};\n\nInviteClientTransaction.prototype.timer_D = function() {\n  this.logger.log('Timer D expired for INVITE client transaction ' + this.id);\n  SIP.Timers.clearTimeout(this.B);\n  this.stateChanged(C.STATUS_TERMINATED);\n  this.request_sender.ua.destroyTransaction(this);\n};\n\nInviteClientTransaction.prototype.sendACK = function(response) {\n  var tr = this;\n\n  this.ack = 'ACK ' + this.request.ruri + ' SIP/2.0\\r\\n';\n  this.ack += 'Via: ' + this.request.headers['Via'].toString() + '\\r\\n';\n\n  if(this.request.headers['Route']) {\n    this.ack += 'Route: ' + this.request.headers['Route'].toString() + '\\r\\n';\n  }\n\n  this.ack += 'To: ' + response.getHeader('to') + '\\r\\n';\n  this.ack += 'From: ' + this.request.headers['From'].toString() + '\\r\\n';\n  this.ack += 'Call-ID: ' + this.request.headers['Call-ID'].toString() + '\\r\\n';\n  this.ack += 'CSeq: ' + this.request.headers['CSeq'].toString().split(' ')[0];\n  this.ack += ' ACK\\r\\n\\r\\n';\n\n  this.D = SIP.Timers.setTimeout(tr.timer_D.bind(tr), SIP.Timers.TIMER_D);\n\n  this.transport.send(this.ack);\n};\n\nInviteClientTransaction.prototype.cancel_request = function(tr, reason) {\n  var request = tr.request;\n\n  this.cancel = SIP.C.CANCEL + ' ' + request.ruri + ' SIP/2.0\\r\\n';\n  this.cancel += 'Via: ' + request.headers['Via'].toString() + '\\r\\n';\n\n  if(this.request.headers['Route']) {\n    this.cancel += 'Route: ' + request.headers['Route'].toString() + '\\r\\n';\n  }\n\n  this.cancel += 'To: ' + request.headers['To'].toString() + '\\r\\n';\n  this.cancel += 'From: ' + request.headers['From'].toString() + '\\r\\n';\n  this.cancel += 'Call-ID: ' + request.headers['Call-ID'].toString() + '\\r\\n';\n  this.cancel += 'CSeq: ' + request.headers['CSeq'].toString().split(' ')[0] +\n  ' CANCEL\\r\\n';\n\n  if(reason) {\n    this.cancel += 'Reason: ' + reason + '\\r\\n';\n  }\n\n  this.cancel += 'Content-Length: 0\\r\\n\\r\\n';\n\n  // Send only if a provisional response (>100) has been received.\n  if(this.state === C.STATUS_PROCEEDING) {\n    this.transport.send(this.cancel);\n  }\n};\n\nInviteClientTransaction.prototype.receiveResponse = function(response) {\n  var\n  tr = this,\n  status_code = response.status_code;\n\n  if(status_code >= 100 && status_code <= 199) {\n    switch(this.state) {\n      case C.STATUS_CALLING:\n        this.stateChanged(C.STATUS_PROCEEDING);\n        this.request_sender.receiveResponse(response);\n        if(this.cancel) {\n          this.transport.send(this.cancel);\n        }\n        break;\n      case C.STATUS_PROCEEDING:\n        this.request_sender.receiveResponse(response);\n        break;\n    }\n  } else if(status_code >= 200 && status_code <= 299) {\n    switch(this.state) {\n      case C.STATUS_CALLING:\n      case C.STATUS_PROCEEDING:\n        this.stateChanged(C.STATUS_ACCEPTED);\n        this.M = SIP.Timers.setTimeout(tr.timer_M.bind(tr), SIP.Timers.TIMER_M);\n        this.request_sender.receiveResponse(response);\n        break;\n      case C.STATUS_ACCEPTED:\n        this.request_sender.receiveResponse(response);\n        break;\n    }\n  } else if(status_code >= 300 && status_code <= 699) {\n    switch(this.state) {\n      case C.STATUS_CALLING:\n      case C.STATUS_PROCEEDING:\n        this.stateChanged(C.STATUS_COMPLETED);\n        this.sendACK(response);\n        this.request_sender.receiveResponse(response);\n        break;\n      case C.STATUS_COMPLETED:\n        this.sendACK(response);\n        break;\n    }\n  }\n};\n\n\n/**\n * @augments SIP.Transactions\n * @class ACK Client Transaction\n * @param {SIP.RequestSender} request_sender\n * @param {SIP.OutgoingRequest} request\n * @param {SIP.Transport} transport\n */\nvar AckClientTransaction = function(request_sender, request, transport) {\n  var via;\n\n  this.transport = transport;\n  this.id = 'z9hG4bK' + Math.floor(Math.random() * 10000000);\n  this.request_sender = request_sender;\n  this.request = request;\n\n  this.logger = request_sender.ua.getLogger('sip.transaction.nict', this.id);\n\n  via = 'SIP/2.0/' + (request_sender.ua.configuration.hackViaTcp ? 'TCP' : transport.server.scheme);\n  via += ' ' + request_sender.ua.configuration.viaHost + ';branch=' + this.id;\n\n  this.request.setHeader('via', via);\n};\nAckClientTransaction.prototype = new SIP.EventEmitter();\n\nAckClientTransaction.prototype.send = function() {\n  if(!this.transport.send(this.request)) {\n    this.onTransportError();\n  }\n};\n\nAckClientTransaction.prototype.onTransportError = function() {\n  this.logger.log('transport error occurred, for an ACK client transaction ' + this.id);\n  this.request_sender.onTransportError();\n};\n\n\n/**\n* @augments SIP.Transactions\n* @class Non Invite Server Transaction\n* @param {SIP.IncomingRequest} request\n* @param {SIP.UA} ua\n*/\nvar NonInviteServerTransaction = function(request, ua) {\n  var events = ['stateChanged'];\n\n  this.type = C.NON_INVITE_SERVER;\n  this.id = request.via_branch;\n  this.request = request;\n  this.transport = request.transport;\n  this.ua = ua;\n  this.last_response = '';\n  request.server_transaction = this;\n\n  this.logger = ua.getLogger('sip.transaction.nist', this.id);\n\n  this.state = C.STATUS_TRYING;\n\n  ua.newTransaction(this);\n\n  this.initEvents(events);\n};\nNonInviteServerTransaction.prototype = new SIP.EventEmitter();\n\nNonInviteServerTransaction.prototype.stateChanged = function(state) {\n  this.state = state;\n  this.emit('stateChanged');\n};\n\nNonInviteServerTransaction.prototype.timer_J = function() {\n  this.logger.log('Timer J expired for non-INVITE server transaction ' + this.id);\n  this.stateChanged(C.STATUS_TERMINATED);\n  this.ua.destroyTransaction(this);\n};\n\nNonInviteServerTransaction.prototype.onTransportError = function() {\n  if (!this.transportError) {\n    this.transportError = true;\n\n    this.logger.log('transport error occurred, deleting non-INVITE server transaction ' + this.id);\n\n    SIP.Timers.clearTimeout(this.J);\n    this.stateChanged(C.STATUS_TERMINATED);\n    this.ua.destroyTransaction(this);\n  }\n};\n\nNonInviteServerTransaction.prototype.receiveResponse = function(status_code, response, onSuccess, onFailure) {\n  var tr = this;\n\n  if(status_code === 100) {\n    /* RFC 4320 4.1\n     * 'A SIP element MUST NOT\n     * send any provisional response with a\n     * Status-Code other than 100 to a non-INVITE request.'\n     */\n    switch(this.state) {\n      case C.STATUS_TRYING:\n        this.stateChanged(C.STATUS_PROCEEDING);\n        if(!this.transport.send(response))  {\n          this.onTransportError();\n        }\n        break;\n      case C.STATUS_PROCEEDING:\n        this.last_response = response;\n        if(!this.transport.send(response)) {\n          this.onTransportError();\n          if (onFailure) {\n            onFailure();\n          }\n        } else if (onSuccess) {\n          onSuccess();\n        }\n        break;\n    }\n  } else if(status_code >= 200 && status_code <= 699) {\n    switch(this.state) {\n      case C.STATUS_TRYING:\n      case C.STATUS_PROCEEDING:\n        this.stateChanged(C.STATUS_COMPLETED);\n        this.last_response = response;\n        this.J = SIP.Timers.setTimeout(tr.timer_J.bind(tr), SIP.Timers.TIMER_J);\n        if(!this.transport.send(response)) {\n          this.onTransportError();\n          if (onFailure) {\n            onFailure();\n          }\n        } else if (onSuccess) {\n          onSuccess();\n        }\n        break;\n      case C.STATUS_COMPLETED:\n        break;\n    }\n  }\n};\n\n/**\n* @augments SIP.Transactions\n* @class Invite Server Transaction\n* @param {SIP.IncomingRequest} request\n* @param {SIP.UA} ua\n*/\nvar InviteServerTransaction = function(request, ua) {\n  var events = ['stateChanged'];\n\n  this.type = C.INVITE_SERVER;\n  this.id = request.via_branch;\n  this.request = request;\n  this.transport = request.transport;\n  this.ua = ua;\n  this.last_response = '';\n  request.server_transaction = this;\n\n  this.logger = ua.getLogger('sip.transaction.ist', this.id);\n\n  this.state = C.STATUS_PROCEEDING;\n\n  ua.newTransaction(this);\n\n  this.resendProvisionalTimer = null;\n\n  request.reply(100);\n\n  this.initEvents(events);\n};\nInviteServerTransaction.prototype = new SIP.EventEmitter();\n\nInviteServerTransaction.prototype.stateChanged = function(state) {\n  this.state = state;\n  this.emit('stateChanged');\n};\n\nInviteServerTransaction.prototype.timer_H = function() {\n  this.logger.log('Timer H expired for INVITE server transaction ' + this.id);\n\n  if(this.state === C.STATUS_COMPLETED) {\n    this.logger.warn('transactions', 'ACK for INVITE server transaction was never received, call will be terminated');\n  }\n\n  this.stateChanged(C.STATUS_TERMINATED);\n  this.ua.destroyTransaction(this);\n};\n\nInviteServerTransaction.prototype.timer_I = function() {\n  this.stateChanged(C.STATUS_TERMINATED);\n  this.ua.destroyTransaction(this);\n};\n\n// RFC 6026 7.1\nInviteServerTransaction.prototype.timer_L = function() {\n  this.logger.log('Timer L expired for INVITE server transaction ' + this.id);\n\n  if(this.state === C.STATUS_ACCEPTED) {\n    this.stateChanged(C.STATUS_TERMINATED);\n    this.ua.destroyTransaction(this);\n  }\n};\n\nInviteServerTransaction.prototype.onTransportError = function() {\n  if (!this.transportError) {\n    this.transportError = true;\n\n    this.logger.log('transport error occurred, deleting INVITE server transaction ' + this.id);\n\n    if (this.resendProvisionalTimer !== null) {\n      SIP.Timers.clearInterval(this.resendProvisionalTimer);\n      this.resendProvisionalTimer = null;\n    }\n\n    SIP.Timers.clearTimeout(this.L);\n    SIP.Timers.clearTimeout(this.H);\n    SIP.Timers.clearTimeout(this.I);\n\n    this.stateChanged(C.STATUS_TERMINATED);\n    this.ua.destroyTransaction(this);\n  }\n};\n\nInviteServerTransaction.prototype.resend_provisional = function() {\n  if(!this.transport.send(this.last_response)) {\n    this.onTransportError();\n  }\n};\n\n// INVITE Server Transaction RFC 3261 17.2.1\nInviteServerTransaction.prototype.receiveResponse = function(status_code, response, onSuccess, onFailure) {\n  var tr = this;\n\n  if(status_code >= 100 && status_code <= 199) {\n    switch(this.state) {\n      case C.STATUS_PROCEEDING:\n        if(!this.transport.send(response)) {\n          this.onTransportError();\n        }\n        this.last_response = response;\n        break;\n    }\n  }\n\n  if(status_code > 100 && status_code <= 199 && this.state === C.STATUS_PROCEEDING) {\n    // Trigger the resendProvisionalTimer only for the first non 100 provisional response.\n    if(this.resendProvisionalTimer === null) {\n      this.resendProvisionalTimer = SIP.Timers.setInterval(tr.resend_provisional.bind(tr),\n        SIP.Timers.PROVISIONAL_RESPONSE_INTERVAL);\n    }\n  } else if(status_code >= 200 && status_code <= 299) {\n    switch(this.state) {\n      case C.STATUS_PROCEEDING:\n        this.stateChanged(C.STATUS_ACCEPTED);\n        this.last_response = response;\n        this.L = SIP.Timers.setTimeout(tr.timer_L.bind(tr), SIP.Timers.TIMER_L);\n\n        if (this.resendProvisionalTimer !== null) {\n          SIP.Timers.clearInterval(this.resendProvisionalTimer);\n          this.resendProvisionalTimer = null;\n        }\n        /* falls through */\n        case C.STATUS_ACCEPTED:\n          // Note that this point will be reached for proceeding tr.state also.\n          if(!this.transport.send(response)) {\n            this.onTransportError();\n            if (onFailure) {\n              onFailure();\n            }\n          } else if (onSuccess) {\n            onSuccess();\n          }\n          break;\n    }\n  } else if(status_code >= 300 && status_code <= 699) {\n    switch(this.state) {\n      case C.STATUS_PROCEEDING:\n        if (this.resendProvisionalTimer !== null) {\n          SIP.Timers.clearInterval(this.resendProvisionalTimer);\n          this.resendProvisionalTimer = null;\n        }\n\n        if(!this.transport.send(response)) {\n          this.onTransportError();\n          if (onFailure) {\n            onFailure();\n          }\n        } else {\n          this.stateChanged(C.STATUS_COMPLETED);\n          this.H = SIP.Timers.setTimeout(tr.timer_H.bind(tr), SIP.Timers.TIMER_H);\n          if (onSuccess) {\n            onSuccess();\n          }\n        }\n        break;\n    }\n  }\n};\n\n/**\n * @function\n * @param {SIP.UA} ua\n * @param {SIP.IncomingRequest} request\n *\n * @return {boolean}\n * INVITE:\n *  _true_ if retransmission\n *  _false_ new request\n *\n * ACK:\n *  _true_  ACK to non2xx response\n *  _false_ ACK must be passed to TU (accepted state)\n *          ACK to 2xx response\n *\n * CANCEL:\n *  _true_  no matching invite transaction\n *  _false_ matching invite transaction and no final response sent\n *\n * OTHER:\n *  _true_  retransmission\n *  _false_ new request\n */\nvar checkTransaction = function(ua, request) {\n  var tr;\n\n  switch(request.method) {\n    case SIP.C.INVITE:\n      tr = ua.transactions.ist[request.via_branch];\n      if(tr) {\n        switch(tr.state) {\n          case C.STATUS_PROCEEDING:\n            tr.transport.send(tr.last_response);\n            break;\n\n            // RFC 6026 7.1 Invite retransmission\n            //received while in C.STATUS_ACCEPTED state. Absorb it.\n          case C.STATUS_ACCEPTED:\n            break;\n        }\n        return true;\n      }\n      break;\n    case SIP.C.ACK:\n      tr = ua.transactions.ist[request.via_branch];\n\n      // RFC 6026 7.1\n      if(tr) {\n        if(tr.state === C.STATUS_ACCEPTED) {\n          return false;\n        } else if(tr.state === C.STATUS_COMPLETED) {\n          tr.state = C.STATUS_CONFIRMED;\n          tr.I = SIP.Timers.setTimeout(tr.timer_I.bind(tr), SIP.Timers.TIMER_I);\n          return true;\n        }\n      }\n\n      // ACK to 2XX Response.\n      else {\n        return false;\n      }\n      break;\n    case SIP.C.CANCEL:\n      tr = ua.transactions.ist[request.via_branch];\n      if(tr) {\n        request.reply_sl(200);\n        if(tr.state === C.STATUS_PROCEEDING) {\n          return false;\n        } else {\n          return true;\n        }\n      } else {\n        request.reply_sl(481);\n        return true;\n      }\n      break;\n    default:\n\n      // Non-INVITE Server Transaction RFC 3261 17.2.2\n      tr = ua.transactions.nist[request.via_branch];\n      if(tr) {\n        switch(tr.state) {\n          case C.STATUS_TRYING:\n            break;\n          case C.STATUS_PROCEEDING:\n          case C.STATUS_COMPLETED:\n            tr.transport.send(tr.last_response);\n            break;\n        }\n        return true;\n      }\n      break;\n  }\n};\n\nSIP.Transactions = {\n  C: C,\n  checkTransaction: checkTransaction,\n  NonInviteClientTransaction: NonInviteClientTransaction,\n  InviteClientTransaction: InviteClientTransaction,\n  AckClientTransaction: AckClientTransaction,\n  NonInviteServerTransaction: NonInviteServerTransaction,\n  InviteServerTransaction: InviteServerTransaction\n};\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/Transactions.js\n ** module id = 16\n ** module chunks = 0\n **/","\n/**\n * @fileoverview In-Dialog Request Sender\n */\n\n/**\n * @augments SIP.Dialog\n * @class Class creating an In-dialog request sender.\n * @param {SIP.Dialog} dialog\n * @param {Object} applicant\n * @param {SIP.OutgoingRequest} request\n */\n/**\n * @fileoverview in-Dialog Request Sender\n */\n\nmodule.exports = function (SIP) {\nvar RequestSender;\n\nRequestSender = function(dialog, applicant, request) {\n\n  this.dialog = dialog;\n  this.applicant = applicant;\n  this.request = request;\n\n  // RFC3261 14.1 Modifying an Existing Session. UAC Behavior.\n  this.reattempt = false;\n  this.reattemptTimer = null;\n};\n\nRequestSender.prototype = {\n  send: function() {\n    var self = this,\n      request_sender = new SIP.RequestSender(this, this.dialog.owner.ua);\n\n      request_sender.send();\n\n    // RFC3261 14.2 Modifying an Existing Session -UAC BEHAVIOR-\n    if (this.request.method === SIP.C.INVITE && request_sender.clientTransaction.state !== SIP.Transactions.C.STATUS_TERMINATED) {\n      this.dialog.uac_pending_reply = true;\n      request_sender.clientTransaction.on('stateChanged', function stateChanged(){\n        if (this.state === SIP.Transactions.C.STATUS_ACCEPTED ||\n            this.state === SIP.Transactions.C.STATUS_COMPLETED ||\n            this.state === SIP.Transactions.C.STATUS_TERMINATED) {\n\n          this.off('stateChanged', stateChanged);\n          self.dialog.uac_pending_reply = false;\n\n          if (self.dialog.uas_pending_reply === false) {\n            self.dialog.owner.onReadyToReinvite();\n          }\n        }\n      });\n    }\n  },\n\n  onRequestTimeout: function() {\n    this.applicant.onRequestTimeout();\n  },\n\n  onTransportError: function() {\n    this.applicant.onTransportError();\n  },\n\n  receiveResponse: function(response) {\n    var self = this;\n\n    // RFC3261 12.2.1.2 408 or 481 is received for a request within a dialog.\n    if (response.status_code === 408 || response.status_code === 481) {\n      this.applicant.onDialogError(response);\n    } else if (response.method === SIP.C.INVITE && response.status_code === 491) {\n      if (this.reattempt) {\n        this.applicant.receiveResponse(response);\n      } else {\n        this.request.cseq.value = this.dialog.local_seqnum += 1;\n        this.reattemptTimer = SIP.Timers.setTimeout(\n          function() {\n            if (self.applicant.owner.status !== SIP.Session.C.STATUS_TERMINATED) {\n              self.reattempt = true;\n              self.request_sender.send();\n            }\n          },\n          this.getReattemptTimeout()\n        );\n      }\n    } else {\n      this.applicant.receiveResponse(response);\n    }\n  }\n};\n\nreturn RequestSender;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/Dialog/RequestSender.js\n ** module id = 17\n ** module chunks = 0\n **/","/**\n * @fileoverview SIP Dialog\n */\n\n/**\n * @augments SIP\n * @class Class creating a SIP dialog.\n * @param {SIP.RTCSession} owner\n * @param {SIP.IncomingRequest|SIP.IncomingResponse} message\n * @param {Enum} type UAC / UAS\n * @param {Enum} state SIP.Dialog.C.STATUS_EARLY / SIP.Dialog.C.STATUS_CONFIRMED\n */\nmodule.exports = function (SIP, RequestSender) {\n\nvar Dialog,\n  C = {\n    // Dialog states\n    STATUS_EARLY:       1,\n    STATUS_CONFIRMED:   2\n  };\n\n// RFC 3261 12.1\nDialog = function(owner, message, type, state) {\n  var contact;\n\n  this.uac_pending_reply = false;\n  this.uas_pending_reply = false;\n\n  if(!message.hasHeader('contact')) {\n    return {\n      error: 'unable to create a Dialog without Contact header field'\n    };\n  }\n\n  if(message instanceof SIP.IncomingResponse) {\n    state = (message.status_code < 200) ? C.STATUS_EARLY : C.STATUS_CONFIRMED;\n  } else {\n    // Create confirmed dialog if state is not defined\n    state = state || C.STATUS_CONFIRMED;\n  }\n\n  contact = message.parseHeader('contact');\n\n  // RFC 3261 12.1.1\n  if(type === 'UAS') {\n    this.id = {\n      call_id: message.call_id,\n      local_tag: message.to_tag,\n      remote_tag: message.from_tag,\n      toString: function() {\n        return this.call_id + this.local_tag + this.remote_tag;\n      }\n    };\n    this.state = state;\n    this.remote_seqnum = message.cseq;\n    this.local_uri = message.parseHeader('to').uri;\n    this.remote_uri = message.parseHeader('from').uri;\n    this.remote_target = contact.uri;\n    this.route_set = message.getHeaders('record-route');\n    this.invite_seqnum = message.cseq;\n    this.local_seqnum = message.cseq;\n  }\n  // RFC 3261 12.1.2\n  else if(type === 'UAC') {\n    this.id = {\n      call_id: message.call_id,\n      local_tag: message.from_tag,\n      remote_tag: message.to_tag,\n      toString: function() {\n        return this.call_id + this.local_tag + this.remote_tag;\n      }\n    };\n    this.state = state;\n    this.invite_seqnum = message.cseq;\n    this.local_seqnum = message.cseq;\n    this.local_uri = message.parseHeader('from').uri;\n    this.pracked = [];\n    this.remote_uri = message.parseHeader('to').uri;\n    this.remote_target = contact.uri;\n    this.route_set = message.getHeaders('record-route').reverse();\n\n    //RENDERBODY\n    if (this.state === C.STATUS_EARLY && (!owner.hasOffer)) {\n      this.mediaHandler = owner.mediaHandlerFactory(owner);\n    }\n  }\n\n  this.logger = owner.ua.getLogger('sip.dialog', this.id.toString());\n  this.owner = owner;\n  owner.ua.dialogs[this.id.toString()] = this;\n  this.logger.log('new ' + type + ' dialog created with status ' + (this.state === C.STATUS_EARLY ? 'EARLY': 'CONFIRMED'));\n};\n\nDialog.prototype = {\n  /**\n   * @param {SIP.IncomingMessage} message\n   * @param {Enum} UAC/UAS\n   */\n  update: function(message, type) {\n    this.state = C.STATUS_CONFIRMED;\n\n    this.logger.log('dialog '+ this.id.toString() +'  changed to CONFIRMED state');\n\n    if(type === 'UAC') {\n      // RFC 3261 13.2.2.4\n      this.route_set = message.getHeaders('record-route').reverse();\n    }\n  },\n\n  terminate: function() {\n    this.logger.log('dialog ' + this.id.toString() + ' deleted');\n    if (this.mediaHandler && this.state !== C.STATUS_CONFIRMED) {\n      this.mediaHandler.peerConnection.close();\n    }\n    delete this.owner.ua.dialogs[this.id.toString()];\n  },\n\n  /**\n  * @param {String} method request method\n  * @param {Object} extraHeaders extra headers\n  * @returns {SIP.OutgoingRequest}\n  */\n\n  // RFC 3261 12.2.1.1\n  createRequest: function(method, extraHeaders, body) {\n    var cseq, request;\n    extraHeaders = (extraHeaders || []).slice();\n\n    if(!this.local_seqnum) { this.local_seqnum = Math.floor(Math.random() * 10000); }\n\n    cseq = (method === SIP.C.CANCEL || method === SIP.C.ACK) ? this.invite_seqnum : this.local_seqnum += 1;\n\n    request = new SIP.OutgoingRequest(\n      method,\n      this.remote_target,\n      this.owner.ua, {\n        'cseq': cseq,\n        'call_id': this.id.call_id,\n        'from_uri': this.local_uri,\n        'from_tag': this.id.local_tag,\n        'to_uri': this.remote_uri,\n        'to_tag': this.id.remote_tag,\n        'route_set': this.route_set\n      }, extraHeaders, body);\n\n    request.dialog = this;\n\n    return request;\n  },\n\n  /**\n  * @param {SIP.IncomingRequest} request\n  * @returns {Boolean}\n  */\n\n  // RFC 3261 12.2.2\n  checkInDialogRequest: function(request) {\n    var self = this;\n\n    if(!this.remote_seqnum) {\n      this.remote_seqnum = request.cseq;\n    } else if(request.cseq < this.remote_seqnum) {\n        //Do not try to reply to an ACK request.\n        if (request.method !== SIP.C.ACK) {\n          request.reply(500);\n        }\n        if (request.cseq === this.invite_seqnum) {\n          return true;\n        }\n        return false;\n    } else if(request.cseq > this.remote_seqnum) {\n      this.remote_seqnum = request.cseq;\n    }\n\n    switch(request.method) {\n      // RFC3261 14.2 Modifying an Existing Session -UAS BEHAVIOR-\n      case SIP.C.INVITE:\n        if (this.uac_pending_reply === true) {\n          request.reply(491);\n        } else if (this.uas_pending_reply === true) {\n          var retryAfter = (Math.random() * 10 | 0) + 1;\n          request.reply(500, null, ['Retry-After:' + retryAfter]);\n          return false;\n        } else {\n          this.uas_pending_reply = true;\n          request.server_transaction.on('stateChanged', function stateChanged(){\n            if (this.state === SIP.Transactions.C.STATUS_ACCEPTED ||\n                this.state === SIP.Transactions.C.STATUS_COMPLETED ||\n                this.state === SIP.Transactions.C.STATUS_TERMINATED) {\n\n              this.off('stateChanged', stateChanged);\n              self.uas_pending_reply = false;\n\n              if (self.uac_pending_reply === false) {\n                self.owner.onReadyToReinvite();\n              }\n            }\n          });\n        }\n\n        // RFC3261 12.2.2 Replace the dialog`s remote target URI if the request is accepted\n        if(request.hasHeader('contact')) {\n          request.server_transaction.on('stateChanged', function(){\n            if (this.state === SIP.Transactions.C.STATUS_ACCEPTED) {\n              self.remote_target = request.parseHeader('contact').uri;\n            }\n          });\n        }\n        break;\n      case SIP.C.NOTIFY:\n        // RFC6665 3.2 Replace the dialog`s remote target URI if the request is accepted\n        if(request.hasHeader('contact')) {\n          request.server_transaction.on('stateChanged', function(){\n            if (this.state === SIP.Transactions.C.STATUS_COMPLETED) {\n              self.remote_target = request.parseHeader('contact').uri;\n            }\n          });\n        }\n        break;\n    }\n\n    return true;\n  },\n\n  sendRequest: function(applicant, method, options) {\n    options = options || {};\n\n    var\n      extraHeaders = (options.extraHeaders || []).slice(),\n      body = options.body || null,\n      request = this.createRequest(method, extraHeaders, body),\n      request_sender = new RequestSender(this, applicant, request);\n\n    request_sender.send();\n\n    return request;\n  },\n\n  /**\n  * @param {SIP.IncomingRequest} request\n  */\n  receiveRequest: function(request) {\n    //Check in-dialog request\n    if(!this.checkInDialogRequest(request)) {\n      return;\n    }\n\n    this.owner.receiveRequest(request);\n  }\n};\n\nDialog.C = C;\nSIP.Dialog = Dialog;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/Dialogs.js\n ** module id = 18\n ** module chunks = 0\n **/","\n/**\n * @fileoverview Request Sender\n */\n\n/**\n * @augments SIP\n * @class Class creating a request sender.\n * @param {Object} applicant\n * @param {SIP.UA} ua\n */\nmodule.exports = function (SIP) {\nvar RequestSender;\n\nRequestSender = function(applicant, ua) {\n  this.logger = ua.getLogger('sip.requestsender');\n  this.ua = ua;\n  this.applicant = applicant;\n  this.method = applicant.request.method;\n  this.request = applicant.request;\n  this.credentials = null;\n  this.challenged = false;\n  this.staled = false;\n\n  // If ua is in closing process or even closed just allow sending Bye and ACK\n  if (ua.status === SIP.UA.C.STATUS_USER_CLOSED && (this.method !== SIP.C.BYE || this.method !== SIP.C.ACK)) {\n    this.onTransportError();\n  }\n};\n\n/**\n* Create the client transaction and send the message.\n*/\nRequestSender.prototype = {\n  send: function() {\n    switch(this.method) {\n      case \"INVITE\":\n        this.clientTransaction = new SIP.Transactions.InviteClientTransaction(this, this.request, this.ua.transport);\n        break;\n      case \"ACK\":\n        this.clientTransaction = new SIP.Transactions.AckClientTransaction(this, this.request, this.ua.transport);\n        break;\n      default:\n        this.clientTransaction = new SIP.Transactions.NonInviteClientTransaction(this, this.request, this.ua.transport);\n    }\n    this.clientTransaction.send();\n\n    return this.clientTransaction;\n  },\n\n  /**\n  * Callback fired when receiving a request timeout error from the client transaction.\n  * To be re-defined by the applicant.\n  * @event\n  */\n  onRequestTimeout: function() {\n    this.applicant.onRequestTimeout();\n  },\n\n  /**\n  * Callback fired when receiving a transport error from the client transaction.\n  * To be re-defined by the applicant.\n  * @event\n  */\n  onTransportError: function() {\n    this.applicant.onTransportError();\n  },\n\n  /**\n  * Called from client transaction when receiving a correct response to the request.\n  * Authenticate request if needed or pass the response back to the applicant.\n  * @param {SIP.IncomingResponse} response\n  */\n  receiveResponse: function(response) {\n    var cseq, challenge, authorization_header_name,\n      status_code = response.status_code;\n\n    /*\n    * Authentication\n    * Authenticate once. _challenged_ flag used to avoid infinite authentications.\n    */\n    if ((status_code === 401 || status_code === 407) && this.ua.configuration.password !== null) {\n\n      // Get and parse the appropriate WWW-Authenticate or Proxy-Authenticate header.\n      if (response.status_code === 401) {\n        challenge = response.parseHeader('www-authenticate');\n        authorization_header_name = 'authorization';\n      } else {\n        challenge = response.parseHeader('proxy-authenticate');\n        authorization_header_name = 'proxy-authorization';\n      }\n\n      // Verify it seems a valid challenge.\n      if (! challenge) {\n        this.logger.warn(response.status_code + ' with wrong or missing challenge, cannot authenticate');\n        this.applicant.receiveResponse(response);\n        return;\n      }\n\n      if (!this.challenged || (!this.staled && challenge.stale === true)) {\n        if (!this.credentials) {\n          this.credentials = new SIP.DigestAuthentication(this.ua);\n        }\n\n        // Verify that the challenge is really valid.\n        if (!this.credentials.authenticate(this.request, challenge)) {\n          this.applicant.receiveResponse(response);\n          return;\n        }\n        this.challenged = true;\n\n        if (challenge.stale) {\n          this.staled = true;\n        }\n\n        if (response.method === SIP.C.REGISTER) {\n          cseq = this.applicant.cseq += 1;\n        } else if (this.request.dialog){\n          cseq = this.request.dialog.local_seqnum += 1;\n        } else {\n          cseq = this.request.cseq + 1;\n          this.request.cseq = cseq;\n        }\n        this.request.setHeader('cseq', cseq +' '+ this.method);\n\n        this.request.setHeader(authorization_header_name, this.credentials.toString());\n        this.send();\n      } else {\n        this.applicant.receiveResponse(response);\n      }\n    } else {\n      this.applicant.receiveResponse(response);\n    }\n  }\n};\n\nSIP.RequestSender = RequestSender;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/RequestSender.js\n ** module id = 19\n ** module chunks = 0\n **/","module.exports = function (SIP) {\n\nvar RegisterContext;\n\nRegisterContext = function (ua) {\n  var params = {},\n      regId = 1,\n      events = [\n        'registered',\n        'unregistered'\n      ];\n\n  this.registrar = ua.configuration.registrarServer;\n  this.expires = ua.configuration.registerExpires;\n\n\n  // Contact header\n  this.contact = ua.contact.toString();\n\n  if(regId) {\n    this.contact += ';reg-id='+ regId;\n    this.contact += ';+sip.instance=\"<urn:uuid:'+ ua.configuration.instanceId+'>\"';\n  }\n\n  // Call-ID and CSeq values RFC3261 10.2\n  this.call_id = SIP.Utils.createRandomToken(22);\n  this.cseq = 80;\n\n  this.to_uri = ua.configuration.uri;\n\n  params.to_uri = this.to_uri;\n  params.call_id = this.call_id;\n  params.cseq = this.cseq;\n\n  // Extends ClientContext\n  SIP.Utils.augment(this, SIP.ClientContext, [ua, 'REGISTER', this.registrar, {params: params}]);\n\n  this.registrationTimer = null;\n  this.registrationExpiredTimer = null;\n\n  // Set status\n  this.registered = false;\n\n  this.logger = ua.getLogger('sip.registercontext');\n  this.initMoreEvents(events);\n};\n\nRegisterContext.prototype = {\n  register: function (options) {\n    var self = this, extraHeaders;\n\n    // Handle Options\n    options = options || {};\n    extraHeaders = (options.extraHeaders || []).slice();\n    extraHeaders.push('Contact: ' + this.contact + ';expires=' + this.expires);\n    extraHeaders.push('Allow: ' + SIP.Utils.getAllowedMethods(this.ua));\n\n    this.receiveResponse = function(response) {\n      var contact, expires,\n        contacts = response.getHeaders('contact').length,\n        cause;\n\n      // Discard responses to older REGISTER/un-REGISTER requests.\n      if(response.cseq !== this.cseq) {\n        return;\n      }\n\n      // Clear registration timer\n      if (this.registrationTimer !== null) {\n        SIP.Timers.clearTimeout(this.registrationTimer);\n        this.registrationTimer = null;\n      }\n\n      switch(true) {\n        case /^1[0-9]{2}$/.test(response.status_code):\n          this.emit('progress', response);\n          break;\n        case /^2[0-9]{2}$/.test(response.status_code):\n          this.emit('accepted', response);\n\n          if(response.hasHeader('expires')) {\n            expires = response.getHeader('expires');\n          }\n\n          if (this.registrationExpiredTimer !== null) {\n            SIP.Timers.clearTimeout(this.registrationExpiredTimer);\n            this.registrationExpiredTimer = null;\n          }\n\n          // Search the Contact pointing to us and update the expires value accordingly.\n          if (!contacts) {\n            this.logger.warn('no Contact header in response to REGISTER, response ignored');\n            break;\n          }\n\n          while(contacts--) {\n            contact = response.parseHeader('contact', contacts);\n            if(contact.uri.user === this.ua.contact.uri.user) {\n              expires = contact.getParam('expires');\n              break;\n            } else {\n              contact = null;\n            }\n          }\n\n          if (!contact) {\n            this.logger.warn('no Contact header pointing to us, response ignored');\n            break;\n          }\n\n          if(!expires) {\n            expires = this.expires;\n          }\n\n          // Re-Register before the expiration interval has elapsed.\n          // For that, decrease the expires value. ie: 3 seconds\n          this.registrationTimer = SIP.Timers.setTimeout(function() {\n            self.registrationTimer = null;\n            self.register(options);\n          }, (expires * 1000) - 3000);\n          this.registrationExpiredTimer = SIP.Timers.setTimeout(function () {\n            self.logger.warn('registration expired');\n            if (self.registered) {\n              self.unregistered(null, SIP.C.causes.EXPIRES);\n            }\n          }, expires * 1000);\n\n          //Save gruu values\n          if (contact.hasParam('temp-gruu')) {\n            this.ua.contact.temp_gruu = SIP.URI.parse(contact.getParam('temp-gruu').replace(/\"/g,''));\n          }\n          if (contact.hasParam('pub-gruu')) {\n            this.ua.contact.pub_gruu = SIP.URI.parse(contact.getParam('pub-gruu').replace(/\"/g,''));\n          }\n\n          this.registered = true;\n          this.emit('registered', response || null);\n          break;\n        // Interval too brief RFC3261 10.2.8\n        case /^423$/.test(response.status_code):\n          if(response.hasHeader('min-expires')) {\n            // Increase our registration interval to the suggested minimum\n            this.expires = response.getHeader('min-expires');\n            // Attempt the registration again immediately\n            this.register(options);\n          } else { //This response MUST contain a Min-Expires header field\n            this.logger.warn('423 response received for REGISTER without Min-Expires');\n            this.registrationFailure(response, SIP.C.causes.SIP_FAILURE_CODE);\n          }\n          break;\n        default:\n          cause = SIP.Utils.sipErrorCause(response.status_code);\n          this.registrationFailure(response, cause);\n      }\n    };\n\n    this.onRequestTimeout = function() {\n      this.registrationFailure(null, SIP.C.causes.REQUEST_TIMEOUT);\n    };\n\n    this.onTransportError = function() {\n      this.registrationFailure(null, SIP.C.causes.CONNECTION_ERROR);\n    };\n\n    this.cseq++;\n    this.request.cseq = this.cseq;\n    this.request.setHeader('cseq', this.cseq + ' REGISTER');\n    this.request.extraHeaders = extraHeaders;\n    this.send();\n  },\n\n  registrationFailure: function (response, cause) {\n    this.emit('failed', response || null, cause || null);\n  },\n\n  onTransportClosed: function() {\n    this.registered_before = this.registered;\n    if (this.registrationTimer !== null) {\n      SIP.Timers.clearTimeout(this.registrationTimer);\n      this.registrationTimer = null;\n    }\n\n    if (this.registrationExpiredTimer !== null) {\n      SIP.Timers.clearTimeout(this.registrationExpiredTimer);\n      this.registrationExpiredTimer = null;\n    }\n\n    if(this.registered) {\n      this.unregistered(null, SIP.C.causes.CONNECTION_ERROR);\n    }\n  },\n\n  onTransportConnected: function() {\n    this.register();\n  },\n\n  close: function() {\n    this.registered_before = this.registered;\n    this.unregister();\n  },\n\n  unregister: function(options) {\n    var extraHeaders;\n\n    if(!this.registered) {\n      this.logger.warn('already unregistered');\n      return;\n    }\n\n    options = options || {};\n    extraHeaders = (options.extraHeaders || []).slice();\n\n    this.registered = false;\n\n    // Clear the registration timer.\n    if (this.registrationTimer !== null) {\n      SIP.Timers.clearTimeout(this.registrationTimer);\n      this.registrationTimer = null;\n    }\n\n    if(options.all) {\n      extraHeaders.push('Contact: *');\n      extraHeaders.push('Expires: 0');\n    } else {\n      extraHeaders.push('Contact: '+ this.contact + ';expires=0');\n    }\n\n\n    this.receiveResponse = function(response) {\n      var cause;\n\n      switch(true) {\n        case /^1[0-9]{2}$/.test(response.status_code):\n          this.emit('progress', response);\n          break;\n        case /^2[0-9]{2}$/.test(response.status_code):\n          this.emit('accepted', response);\n          if (this.registrationExpiredTimer !== null) {\n            SIP.Timers.clearTimeout(this.registrationExpiredTimer);\n            this.registrationExpiredTimer = null;\n          }\n          this.unregistered(response);\n          break;\n        default:\n          cause = SIP.Utils.sipErrorCause(response.status_code);\n          this.unregistered(response,cause);\n      }\n    };\n\n    this.onRequestTimeout = function() {\n      // Not actually unregistered...\n      //this.unregistered(null, SIP.C.causes.REQUEST_TIMEOUT);\n    };\n\n    this.onTransportError = function() {\n      // Not actually unregistered...\n      //this.unregistered(null, SIP.C.causes.CONNECTION_ERROR);\n    };\n\n    this.cseq++;\n    this.request.cseq = this.cseq;\n    this.request.setHeader('cseq', this.cseq + ' REGISTER');\n    this.request.extraHeaders = extraHeaders;\n\n    this.send();\n  },\n\n  unregistered: function(response, cause) {\n    this.registered = false;\n    this.emit('unregistered', response || null, cause || null);\n  }\n\n};\n\n\nSIP.RegisterContext = RegisterContext;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/RegisterContext.js\n ** module id = 20\n ** module chunks = 0\n **/","/**\n * @fileoverview MediaHandler\n */\n\n/* MediaHandler\n * @class PeerConnection helper Class.\n * @param {SIP.Session} session\n * @param {Object} [options]\n */\nmodule.exports = function (EventEmitter) {\nvar MediaHandler = function(session, options) {\n  // keep jshint happy\n  session = session;\n  options = options;\n};\n\nMediaHandler.prototype = Object.create(EventEmitter.prototype, {\n  isReady: {value: function isReady () {}},\n\n  close: {value: function close () {}},\n\n  /**\n   * @param {Function} onSuccess called with the obtained local media description\n   * @param {Function} onFailure\n   * @param {Object} [mediaHint] A custom object describing the media to be used during this session.\n   */\n  getDescription: {value: function getDescription (onSuccess, onFailure, mediaHint) {\n    // keep jshint happy\n    onSuccess = onSuccess;\n    onFailure = onFailure;\n    mediaHint = mediaHint;\n  }},\n\n  /**\n  * Message reception.\n  * @param {String} type\n  * @param {String} description\n  * @param {Function} onSuccess\n  * @param {Function} onFailure\n  */\n  setDescription: {value: function setDescription (description, onSuccess, onFailure) {\n    // keep jshint happy\n    description = description;\n    onSuccess = onSuccess;\n    onFailure = onFailure;\n  }}\n});\n\nreturn MediaHandler;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/MediaHandler.js\n ** module id = 21\n ** module chunks = 0\n **/","module.exports = function (SIP) {\nvar ClientContext;\n\nClientContext = function (ua, method, target, options) {\n  var params, extraHeaders,\n      originalTarget = target,\n      events = [\n        'progress',\n        'accepted',\n        'rejected',\n        'failed',\n        'cancel'\n      ];\n\n  if (target === undefined) {\n    throw new TypeError('Not enough arguments');\n  }\n\n  // Check target validity\n  target = ua.normalizeTarget(target);\n  if (!target) {\n    throw new TypeError('Invalid target: ' + originalTarget);\n  }\n\n  this.ua = ua;\n  this.logger = ua.getLogger('sip.clientcontext');\n  this.method = method;\n\n  params = options && options.params;\n  extraHeaders = (options && options.extraHeaders || []).slice();\n\n  if (options && options.body) {\n    this.body = options.body;\n  }\n  if (options && options.contentType) {\n    this.contentType = options.contentType;\n    extraHeaders.push('Content-Type: ' + this.contentType);\n  }\n\n  this.request = new SIP.OutgoingRequest(this.method, target, this.ua, params, extraHeaders);\n\n  this.localIdentity = this.request.from;\n  this.remoteIdentity = this.request.to;\n\n  if (this.body) {\n    this.request.body = this.body;\n  }\n\n  this.data = {};\n\n  this.initEvents(events);\n};\nClientContext.prototype = new SIP.EventEmitter();\n\nClientContext.prototype.send = function () {\n  (new SIP.RequestSender(this, this.ua)).send();\n  return this;\n};\n\nClientContext.prototype.cancel = function (options) {\n  options = options || {};\n\n  var\n  status_code = options.status_code,\n  reason_phrase = options.reason_phrase,\n  cancel_reason;\n\n  if (status_code && status_code < 200 || status_code > 699) {\n    throw new TypeError('Invalid status_code: ' + status_code);\n  } else if (status_code) {\n    reason_phrase = reason_phrase || SIP.C.REASON_PHRASE[status_code] || '';\n    cancel_reason = 'SIP ;cause=' + status_code + ' ;text=\"' + reason_phrase + '\"';\n  }\n  this.request.cancel(cancel_reason);\n\n  this.emit('cancel');\n};\n\nClientContext.prototype.receiveResponse = function (response) {\n  var cause = SIP.C.REASON_PHRASE[response.status_code] || '';\n\n  switch(true) {\n    case /^1[0-9]{2}$/.test(response.status_code):\n      this.emit('progress', response, cause);\n      break;\n\n    case /^2[0-9]{2}$/.test(response.status_code):\n      if(this.ua.applicants[this]) {\n        delete this.ua.applicants[this];\n      }\n      this.emit('accepted', response, cause);\n      break;\n\n    default:\n      if(this.ua.applicants[this]) {\n        delete this.ua.applicants[this];\n      }\n      this.emit('rejected', response, cause);\n      this.emit('failed', response, cause);\n      break;\n  }\n\n};\n\nClientContext.prototype.onRequestTimeout = function () {\n  this.emit('failed', null, SIP.C.causes.REQUEST_TIMEOUT);\n};\n\nClientContext.prototype.onTransportError = function () {\n  this.emit('failed', null, SIP.C.causes.CONNECTION_ERROR);\n};\n\nSIP.ClientContext = ClientContext;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/ClientContext.js\n ** module id = 22\n ** module chunks = 0\n **/","module.exports = function (SIP) {\nvar ServerContext;\n\nServerContext = function (ua, request) {\n  var events = [\n      'progress',\n      'accepted',\n      'rejected',\n      'failed'\n    ];\n  this.ua = ua;\n  this.logger = ua.getLogger('sip.servercontext');\n  this.request = request;\n  if (request.method === SIP.C.INVITE) {\n    this.transaction = new SIP.Transactions.InviteServerTransaction(request, ua);\n  } else {\n    this.transaction = new SIP.Transactions.NonInviteServerTransaction(request, ua);\n  }\n\n  if (request.body) {\n    this.body = request.body;\n  }\n  if (request.hasHeader('Content-Type')) {\n    this.contentType = request.getHeader('Content-Type');\n  }\n  this.method = request.method;\n\n  this.data = {};\n\n  this.localIdentity = request.to;\n  this.remoteIdentity = request.from;\n\n  this.initEvents(events);\n};\n\nServerContext.prototype = new SIP.EventEmitter();\n\nServerContext.prototype.progress = function (options) {\n  options = options || {};\n  var\n    statusCode = options.statusCode || 180,\n    reasonPhrase = options.reasonPhrase || SIP.C.REASON_PHRASE[statusCode],\n    extraHeaders = (options.extraHeaders || []).slice(),\n    body = options.body,\n    response;\n\n  if (statusCode < 100 || statusCode > 199) {\n    throw new TypeError('Invalid statusCode: ' + statusCode);\n  }\n  response = this.request.reply(statusCode, reasonPhrase, extraHeaders, body);\n  this.emit('progress', response, reasonPhrase);\n\n  return this;\n};\n\nServerContext.prototype.accept = function (options) {\n  options = options || {};\n  var\n    statusCode = options.statusCode || 200,\n    reasonPhrase = options.reasonPhrase || SIP.C.REASON_PHRASE[statusCode],\n    extraHeaders = (options.extraHeaders || []).slice(),\n    body = options.body,\n    response;\n\n  if (statusCode < 200 || statusCode > 299) {\n    throw new TypeError('Invalid statusCode: ' + statusCode);\n  }\n  response = this.request.reply(statusCode, reasonPhrase, extraHeaders, body);\n  this.emit('accepted', response, reasonPhrase);\n\n  return this;\n};\n\nServerContext.prototype.reject = function (options) {\n  options = options || {};\n  var\n    statusCode = options.statusCode || 480,\n    reasonPhrase = options.reasonPhrase || SIP.C.REASON_PHRASE[statusCode],\n    extraHeaders = (options.extraHeaders || []).slice(),\n    body = options.body,\n    response;\n\n  if (statusCode < 300 || statusCode > 699) {\n    throw new TypeError('Invalid statusCode: ' + statusCode);\n  }\n  response = this.request.reply(statusCode, reasonPhrase, extraHeaders, body);\n  this.emit('rejected', response, reasonPhrase);\n  this.emit('failed', response, reasonPhrase);\n\n  return this;\n};\n\nServerContext.prototype.reply = function (options) {\n  options = options || {};\n  var\n    statusCode = options.statusCode,\n    reasonPhrase = options.reasonPhrase,\n    extraHeaders = (options.extraHeaders || []).slice(),\n    body = options.body;\n\n  this.request.reply(statusCode, reasonPhrase, extraHeaders, body);\n\n  return this;\n};\n\nServerContext.prototype.onRequestTimeout = function () {\n  this.emit('failed', null, SIP.C.causes.REQUEST_TIMEOUT);\n};\n\nServerContext.prototype.onTransportError = function () {\n  this.emit('failed', null, SIP.C.causes.CONNECTION_ERROR);\n};\n\nSIP.ServerContext = ServerContext;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/ServerContext.js\n ** module id = 23\n ** module chunks = 0\n **/","/**\n * @fileoverview DTMF\n */\n\n/**\n * @class DTMF\n * @param {SIP.Session} session\n */\nmodule.exports = function (SIP) {\n\nvar DTMF,\n  C = {\n    MIN_DURATION:            70,\n    MAX_DURATION:            6000,\n    DEFAULT_DURATION:        100,\n    MIN_INTER_TONE_GAP:      50,\n    DEFAULT_INTER_TONE_GAP:  500\n  };\n\nDTMF = function(session, tone, options) {\n  var events = [\n  'succeeded',\n  'failed'\n  ], duration, interToneGap;\n\n  if (tone === undefined) {\n    throw new TypeError('Not enough arguments');\n  }\n\n  this.logger = session.ua.getLogger('sip.invitecontext.dtmf', session.id);\n  this.owner = session;\n  this.direction = null;\n\n  options = options || {};\n  duration = options.duration || null;\n  interToneGap = options.interToneGap || null;\n\n  // Check tone type\n  if (typeof tone === 'string' ) {\n    tone = tone.toUpperCase();\n  } else if (typeof tone === 'number') {\n    tone = tone.toString();\n  } else {\n    throw new TypeError('Invalid tone: '+ tone);\n  }\n\n  // Check tone value\n  if (!tone.match(/^[0-9A-D#*]$/)) {\n    throw new TypeError('Invalid tone: '+ tone);\n  } else {\n    this.tone = tone;\n  }\n\n  // Check duration\n  if (duration && !SIP.Utils.isDecimal(duration)) {\n    throw new TypeError('Invalid tone duration: '+ duration);\n  } else if (!duration) {\n    duration = DTMF.C.DEFAULT_DURATION;\n  } else if (duration < DTMF.C.MIN_DURATION) {\n    this.logger.warn('\"duration\" value is lower than the minimum allowed, setting it to '+ DTMF.C.MIN_DURATION+ ' milliseconds');\n    duration = DTMF.C.MIN_DURATION;\n  } else if (duration > DTMF.C.MAX_DURATION) {\n    this.logger.warn('\"duration\" value is greater than the maximum allowed, setting it to '+ DTMF.C.MAX_DURATION +' milliseconds');\n    duration = DTMF.C.MAX_DURATION;\n  } else {\n    duration = Math.abs(duration);\n  }\n  this.duration = duration;\n\n  // Check interToneGap\n  if (interToneGap && !SIP.Utils.isDecimal(interToneGap)) {\n    throw new TypeError('Invalid interToneGap: '+ interToneGap);\n  } else if (!interToneGap) {\n    interToneGap = DTMF.C.DEFAULT_INTER_TONE_GAP;\n  } else if (interToneGap < DTMF.C.MIN_INTER_TONE_GAP) {\n    this.logger.warn('\"interToneGap\" value is lower than the minimum allowed, setting it to '+ DTMF.C.MIN_INTER_TONE_GAP +' milliseconds');\n    interToneGap = DTMF.C.MIN_INTER_TONE_GAP;\n  } else {\n    interToneGap = Math.abs(interToneGap);\n  }\n  this.interToneGap = interToneGap;\n\n  this.initEvents(events);\n};\nDTMF.prototype = new SIP.EventEmitter();\n\n\nDTMF.prototype.send = function(options) {\n  var extraHeaders, body;\n\n  this.direction = 'outgoing';\n\n  // Check RTCSession Status\n  if (this.owner.status !== SIP.Session.C.STATUS_CONFIRMED &&\n    this.owner.status !== SIP.Session.C.STATUS_WAITING_FOR_ACK) {\n    throw new SIP.Exceptions.InvalidStateError(this.owner.status);\n  }\n\n  // Get DTMF options\n  options = options || {};\n  extraHeaders = options.extraHeaders ? options.extraHeaders.slice() : [];\n\n  extraHeaders.push('Content-Type: application/dtmf-relay');\n\n  body = \"Signal= \" + this.tone + \"\\r\\n\";\n  body += \"Duration= \" + this.duration;\n\n  this.request = this.owner.dialog.sendRequest(this, SIP.C.INFO, {\n    extraHeaders: extraHeaders,\n    body: body\n  });\n\n  this.owner.emit('dtmf', this.request, this);\n};\n\n/**\n * @private\n */\nDTMF.prototype.receiveResponse = function(response) {\n  var cause;\n\n  switch(true) {\n    case /^1[0-9]{2}$/.test(response.status_code):\n      // Ignore provisional responses.\n      break;\n\n    case /^2[0-9]{2}$/.test(response.status_code):\n      this.emit('succeeded', {\n        originator: 'remote',\n        response: response\n      });\n      break;\n\n    default:\n      cause = SIP.Utils.sipErrorCause(response.status_code);\n      this.emit('failed', response, cause);\n      break;\n  }\n};\n\n/**\n * @private\n */\nDTMF.prototype.onRequestTimeout = function() {\n  this.emit('failed', null, SIP.C.causes.REQUEST_TIMEOUT);\n  this.owner.onRequestTimeout();\n};\n\n/**\n * @private\n */\nDTMF.prototype.onTransportError = function() {\n  this.emit('failed', null, SIP.C.causes.CONNECTION_ERROR);\n  this.owner.onTransportError();\n};\n\n/**\n * @private\n */\nDTMF.prototype.onDialogError = function(response) {\n  this.emit('failed', response, SIP.C.causes.DIALOG_ERROR);\n  this.owner.onDialogError(response);\n};\n\n/**\n * @private\n */\nDTMF.prototype.init_incoming = function(request) {\n  this.direction = 'incoming';\n  this.request = request;\n\n  request.reply(200);\n\n  if (!this.tone || !this.duration) {\n    this.logger.warn('invalid INFO DTMF received, discarded');\n  } else {\n    this.owner.emit('dtmf', request, this);\n  }\n};\n\nDTMF.C = C;\nreturn DTMF;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/Session/DTMF.js\n ** module id = 24\n ** module chunks = 0\n **/","module.exports = function (SIP, window, DTMF) {\n\nvar Session, InviteServerContext, InviteClientContext,\n C = {\n    //Session states\n    STATUS_NULL:                        0,\n    STATUS_INVITE_SENT:                 1,\n    STATUS_1XX_RECEIVED:                2,\n    STATUS_INVITE_RECEIVED:             3,\n    STATUS_WAITING_FOR_ANSWER:          4,\n    STATUS_ANSWERED:                    5,\n    STATUS_WAITING_FOR_PRACK:           6,\n    STATUS_WAITING_FOR_ACK:             7,\n    STATUS_CANCELED:                    8,\n    STATUS_TERMINATED:                  9,\n    STATUS_ANSWERED_WAITING_FOR_PRACK: 10,\n    STATUS_EARLY_MEDIA:                11,\n    STATUS_CONFIRMED:                  12\n  };\n\n/*\n * @param {function returning SIP.MediaHandler} [mediaHandlerFactory]\n *        (See the documentation for the mediaHandlerFactory argument of the UA constructor.)\n */\nSession = function (mediaHandlerFactory) {\n  var events = [\n  'connecting',\n  'terminated',\n  'dtmf',\n  'invite',\n  'cancel',\n  'refer',\n  'bye',\n  'hold',\n  'unhold',\n  'muted',\n  'unmuted'\n  ];\n\n  this.status = C.STATUS_NULL;\n  this.dialog = null;\n  this.earlyDialogs = {};\n  this.mediaHandlerFactory = mediaHandlerFactory || SIP.WebRTC.MediaHandler.defaultFactory;\n  // this.mediaHandler gets set by ICC/ISC constructors\n  this.hasOffer = false;\n  this.hasAnswer = false;\n\n  // Session Timers\n  this.timers = {\n    ackTimer: null,\n    expiresTimer: null,\n    invite2xxTimer: null,\n    userNoAnswerTimer: null,\n    rel1xxTimer: null,\n    prackTimer: null\n  };\n\n  // Session info\n  this.startTime = null;\n  this.endTime = null;\n  this.tones = null;\n\n  // Mute/Hold state\n  this.local_hold = false;\n  this.remote_hold = false;\n\n  this.pending_actions = {\n    actions: [],\n\n    length: function() {\n      return this.actions.length;\n    },\n\n    isPending: function(name){\n      var\n      idx = 0,\n      length = this.actions.length;\n\n      for (idx; idx<length; idx++) {\n        if (this.actions[idx].name === name) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    shift: function() {\n      return this.actions.shift();\n    },\n\n    push: function(name) {\n      this.actions.push({\n        name: name\n      });\n    },\n\n    pop: function(name) {\n      var\n      idx = 0,\n      length = this.actions.length;\n\n      for (idx; idx<length; idx++) {\n        if (this.actions[idx].name === name) {\n          this.actions.splice(idx,1);\n          length --;\n          idx--;\n        }\n      }\n    }\n   };\n\n  this.early_sdp = null;\n  this.rel100 = SIP.C.supported.UNSUPPORTED;\n\n  this.initMoreEvents(events);\n};\n\nSession.prototype = {\n  dtmf: function(tones, options) {\n    var tone, dtmfs = [],\n        self = this;\n\n    options = options || {};\n\n    if (tones === undefined) {\n      throw new TypeError('Not enough arguments');\n    }\n\n    // Check Session Status\n    if (this.status !== C.STATUS_CONFIRMED && this.status !== C.STATUS_WAITING_FOR_ACK) {\n      throw new SIP.Exceptions.InvalidStateError(this.status);\n    }\n\n    // Check tones\n    if (!tones || (typeof tones !== 'string' && typeof tones !== 'number') || !tones.toString().match(/^[0-9A-D#*,]+$/i)) {\n      throw new TypeError('Invalid tones: '+ tones);\n    }\n\n    tones = tones.toString().split('');\n\n    while (tones.length > 0) { dtmfs.push(new DTMF(this, tones.shift(), options)); }\n\n    if (this.tones) {\n      // Tones are already queued, just add to the queue\n      this.tones =  this.tones.concat(dtmfs);\n      return this;\n    }\n\n    var sendDTMF = function () {\n      var dtmf, timeout;\n\n      if (self.status === C.STATUS_TERMINATED || !self.tones || self.tones.length === 0) {\n        // Stop sending DTMF\n        self.tones = null;\n        return this;\n      }\n\n      dtmf = self.tones.shift();\n\n      if (tone === ',') {\n        timeout = 2000;\n      } else {\n        dtmf.on('failed', function(){self.tones = null;});\n        dtmf.send(options);\n        timeout = dtmf.duration + dtmf.interToneGap;\n      }\n\n      // Set timeout for the next tone\n      SIP.Timers.setTimeout(sendDTMF, timeout);\n    };\n\n    this.tones = dtmfs;\n    sendDTMF();\n    return this;\n  },\n\n  bye: function(options) {\n    options = options || {};\n    var statusCode = options.statusCode;\n\n    // Check Session Status\n    if (this.status === C.STATUS_TERMINATED) {\n      this.logger.error('Error: Attempted to send BYE in a terminated session.');\n      return this;\n    }\n\n    this.logger.log('terminating Session');\n\n    if (statusCode && (statusCode < 200 || statusCode >= 700)) {\n      throw new TypeError('Invalid statusCode: '+ statusCode);\n    }\n\n    options.receiveResponse = function () {};\n\n    return this.\n      sendRequest(SIP.C.BYE, options).\n      terminated();\n  },\n\n  refer: function(target, options) {\n    options = options || {};\n    var extraHeaders = (options.extraHeaders || []).slice(),\n        originalTarget = target;\n\n    if (target === undefined) {\n      throw new TypeError('Not enough arguments');\n    } else if (target instanceof SIP.InviteServerContext || target instanceof SIP.InviteClientContext) {\n      //Attended Transfer\n      // B.transfer(C)\n      extraHeaders.push('Contact: '+ this.contact);\n      extraHeaders.push('Allow: '+ SIP.Utils.getAllowedMethods(this.ua));\n      extraHeaders.push('Refer-To: <' + target.dialog.remote_target.toString() + '?Replaces=' + target.dialog.id.call_id + '%3Bto-tag%3D' + target.dialog.id.remote_tag + '%3Bfrom-tag%3D' + target.dialog.id.local_tag + '>');\n    } else {\n      //Blind Transfer\n\n      // Check Session Status\n      if (this.status !== C.STATUS_CONFIRMED) {\n        throw new SIP.Exceptions.InvalidStateError(this.status);\n      }\n\n      // normalizeTarget allows instances of SIP.URI to pass through unaltered,\n      // so try to make one ahead of time\n      try {\n        target = SIP.Grammar.parse(target, 'Refer_To').uri || target;\n      } catch (e) {\n        this.logger.debug(\".refer() cannot parse Refer_To from\", target);\n        this.logger.debug(\"...falling through to normalizeTarget()\");\n      }\n\n      // Check target validity\n      target = this.ua.normalizeTarget(target);\n      if (!target) {\n        throw new TypeError('Invalid target: ' + originalTarget);\n      }\n\n      extraHeaders.push('Contact: '+ this.contact);\n      extraHeaders.push('Allow: '+ SIP.Utils.getAllowedMethods(this.ua));\n      extraHeaders.push('Refer-To: '+ target);\n    }\n\n    // Send the request\n    this.sendRequest(SIP.C.REFER, {\n      extraHeaders: extraHeaders,\n      body: options.body,\n      receiveResponse: function() {}\n    });\n    // hang up only if we transferred to a SIP address\n    if (target.scheme.match(\"^sips?$\")) {\n      this.terminate();\n    }\n    return this;\n  },\n\n  followRefer: function followRefer (callback) {\n    return function referListener (callback, request) {\n      // window.open non-SIP URIs if possible and keep session open\n      var target = request.parseHeader('refer-to').uri;\n      if (!target.scheme.match(\"^sips?$\")) {\n        var targetString = target.toString();\n        if (typeof window !== \"undefined\" && typeof window.open === \"function\") {\n          window.open(targetString);\n        } else {\n          this.logger.warn(\"referred to non-SIP URI but window.open isn't a function: \" + targetString);\n        }\n        return;\n      }\n\n      SIP.Hacks.Chrome.getsConfusedAboutGUM(this);\n\n      /*\n        Harmless race condition.  Both sides of REFER\n        may send a BYE, but in the end the dialogs are destroyed.\n      */\n      var referSession = this.ua.invite(request.parseHeader('refer-to').uri, {\n        media: this.mediaHint\n      });\n\n      callback.call(this, request, referSession);\n\n      this.terminate();\n    }.bind(this, callback);\n  },\n\n  sendRequest: function(method,options) {\n    options = options || {};\n    var self = this;\n\n    var request = new SIP.OutgoingRequest(\n      method,\n      this.dialog.remote_target,\n      this.ua,\n      {\n        cseq: options.cseq || (this.dialog.local_seqnum += 1),\n        call_id: this.dialog.id.call_id,\n        from_uri: this.dialog.local_uri,\n        from_tag: this.dialog.id.local_tag,\n        to_uri: this.dialog.remote_uri,\n        to_tag: this.dialog.id.remote_tag,\n        route_set: this.dialog.route_set,\n        statusCode: options.statusCode,\n        reasonPhrase: options.reasonPhrase\n      },\n      options.extraHeaders || [],\n      options.body\n    );\n\n    new SIP.RequestSender({\n      request: request,\n      onRequestTimeout: function() {\n        self.onRequestTimeout();\n      },\n      onTransportError: function() {\n        self.onTransportError();\n      },\n      receiveResponse: options.receiveResponse || function(response) {\n        self.receiveNonInviteResponse(response);\n      }\n    }, this.ua).send();\n\n    // Emit the request event\n    if (this.checkEvent(method.toLowerCase())) {\n      this.emit(method.toLowerCase(), request);\n    }\n\n    return this;\n  },\n\n  close: function() {\n    var idx;\n\n    if(this.status === C.STATUS_TERMINATED) {\n      return this;\n    }\n\n    this.logger.log('closing INVITE session ' + this.id);\n\n    // 1st Step. Terminate media.\n    if (this.mediaHandler){\n      this.mediaHandler.close();\n    }\n\n    // 2nd Step. Terminate signaling.\n\n    // Clear session timers\n    for(idx in this.timers) {\n      SIP.Timers.clearTimeout(this.timers[idx]);\n    }\n\n    // Terminate dialogs\n\n    // Terminate confirmed dialog\n    if(this.dialog) {\n      this.dialog.terminate();\n      delete this.dialog;\n    }\n\n    // Terminate early dialogs\n    for(idx in this.earlyDialogs) {\n      this.earlyDialogs[idx].terminate();\n      delete this.earlyDialogs[idx];\n    }\n\n    this.status = C.STATUS_TERMINATED;\n\n    delete this.ua.sessions[this.id];\n    return this;\n  },\n\n  createDialog: function(message, type, early) {\n    var dialog, early_dialog,\n      local_tag = message[(type === 'UAS') ? 'to_tag' : 'from_tag'],\n      remote_tag = message[(type === 'UAS') ? 'from_tag' : 'to_tag'],\n      id = message.call_id + local_tag + remote_tag;\n\n    early_dialog = this.earlyDialogs[id];\n\n    // Early Dialog\n    if (early) {\n      if (early_dialog) {\n        return true;\n      } else {\n        early_dialog = new SIP.Dialog(this, message, type, SIP.Dialog.C.STATUS_EARLY);\n\n        // Dialog has been successfully created.\n        if(early_dialog.error) {\n          this.logger.error(early_dialog.error);\n          this.failed(message, SIP.C.causes.INTERNAL_ERROR);\n          return false;\n        } else {\n          this.earlyDialogs[id] = early_dialog;\n          return true;\n        }\n      }\n    }\n    // Confirmed Dialog\n    else {\n      // In case the dialog is in _early_ state, update it\n      if (early_dialog) {\n        early_dialog.update(message, type);\n        this.dialog = early_dialog;\n        delete this.earlyDialogs[id];\n        for (var dia in this.earlyDialogs) {\n          this.earlyDialogs[dia].terminate();\n          delete this.earlyDialogs[dia];\n        }\n        return true;\n      }\n\n      // Otherwise, create a _confirmed_ dialog\n      dialog = new SIP.Dialog(this, message, type);\n\n      if(dialog.error) {\n        this.logger.error(dialog.error);\n        this.failed(message, SIP.C.causes.INTERNAL_ERROR);\n        return false;\n      } else {\n        this.to_tag = message.to_tag;\n        this.dialog = dialog;\n        return true;\n      }\n    }\n  },\n\n  /**\n  * Check if Session is ready for a re-INVITE\n  *\n  * @returns {Boolean}\n  */\n  isReadyToReinvite: function() {\n    return this.mediaHandler.isReady() &&\n      !this.dialog.uac_pending_reply &&\n      !this.dialog.uas_pending_reply;\n  },\n\n  /**\n   * Mute\n   */\n  mute: function(options) {\n    var ret = this.mediaHandler.mute(options);\n    if (ret) {\n      this.onmute(ret);\n    }\n  },\n\n  /**\n   * Unmute\n   */\n  unmute: function(options) {\n    var ret = this.mediaHandler.unmute(options);\n    if (ret) {\n      this.onunmute(ret);\n    }\n  },\n\n  /**\n   * Hold\n   */\n  hold: function() {\n\n    if (this.status !== C.STATUS_WAITING_FOR_ACK && this.status !== C.STATUS_CONFIRMED) {\n      throw new SIP.Exceptions.InvalidStateError(this.status);\n    }\n\n    this.mediaHandler.hold();\n\n    // Check if RTCSession is ready to send a reINVITE\n    if (!this.isReadyToReinvite()) {\n      /* If there is a pending 'unhold' action, cancel it and don't queue this one\n       * Else, if there isn't any 'hold' action, add this one to the queue\n       * Else, if there is already a 'hold' action, skip\n       */\n      if (this.pending_actions.isPending('unhold')) {\n        this.pending_actions.pop('unhold');\n      } else if (!this.pending_actions.isPending('hold')) {\n        this.pending_actions.push('hold');\n      }\n      return;\n    } else if (this.local_hold === true) {\n        return;\n    }\n\n    this.onhold('local');\n\n    this.sendReinvite({\n      mangle: function(body){\n\n        // Don't receive media\n        // TODO - This will break for media streams with different directions.\n        if (!(/a=(sendrecv|sendonly|recvonly|inactive)/).test(body)) {\n          body = body.replace(/(m=[^\\r]*\\r\\n)/g, '$1a=sendonly\\r\\n');\n        } else {\n          body = body.replace(/a=sendrecv\\r\\n/g, 'a=sendonly\\r\\n');\n          body = body.replace(/a=recvonly\\r\\n/g, 'a=inactive\\r\\n');\n        }\n\n        return body;\n      }\n    });\n  },\n\n  /**\n   * Unhold\n   */\n  unhold: function() {\n\n    if (this.status !== C.STATUS_WAITING_FOR_ACK && this.status !== C.STATUS_CONFIRMED) {\n      throw new SIP.Exceptions.InvalidStateError(this.status);\n    }\n\n    this.mediaHandler.unhold();\n\n    if (!this.isReadyToReinvite()) {\n      /* If there is a pending 'hold' action, cancel it and don't queue this one\n       * Else, if there isn't any 'unhold' action, add this one to the queue\n       * Else, if there is already a 'unhold' action, skip\n       */\n      if (this.pending_actions.isPending('hold')) {\n        this.pending_actions.pop('hold');\n      } else if (!this.pending_actions.isPending('unhold')) {\n        this.pending_actions.push('unhold');\n      }\n      return;\n    } else if (this.local_hold === false) {\n      return;\n    }\n\n    this.onunhold('local');\n\n    this.sendReinvite();\n  },\n\n  /**\n   * isOnHold\n   */\n  isOnHold: function() {\n    return {\n      local: this.local_hold,\n      remote: this.remote_hold\n    };\n  },\n\n  /**\n   * In dialog INVITE Reception\n   * @private\n   */\n  receiveReinvite: function(request) {\n    var self = this,\n        contentType = request.getHeader('Content-Type'),\n        hold = true;\n\n    if (request.body) {\n      if (contentType !== 'application/sdp') {\n        this.logger.warn('invalid Content-Type');\n        request.reply(415);\n        return;\n      }\n\n      // Are we holding?\n      hold = (/a=(sendonly|inactive)/).test(request.body);\n\n      this.mediaHandler.setDescription(\n        request.body,\n        /*\n         * onSuccess\n         * SDP Offer is valid\n         */\n        function() {\n          self.mediaHandler.getDescription(\n            function(body) {\n              request.reply(200, null, ['Contact: ' + self.contact], body,\n                function() {\n                  self.status = C.STATUS_WAITING_FOR_ACK;\n                  self.setInvite2xxTimer(request, body);\n                  self.setACKTimer();\n\n                  if (self.remote_hold && !hold) {\n                    self.onunhold('remote');\n                  } else if (!self.remote_hold && hold) {\n                    self.onhold('remote');\n                  }\n                });\n            },\n            function() {\n              request.reply(500);\n            },\n            self.mediaHint\n          );\n        },\n        /*\n         * onFailure\n         * Bad media description\n         */\n        function(e) {\n          self.logger.error(e);\n          request.reply(488);\n        }\n      );\n    }\n  },\n\n  sendReinvite: function(options) {\n    options = options || {};\n\n    var\n      self = this,\n       extraHeaders = (options.extraHeaders || []).slice(),\n       eventHandlers = options.eventHandlers || {},\n       mangle = options.mangle || null;\n\n    if (eventHandlers.succeeded) {\n      this.reinviteSucceeded = eventHandlers.succeeded;\n    } else {\n      this.reinviteSucceeded = function(){\n        SIP.Timers.clearTimeout(self.timers.ackTimer);\n        SIP.Timers.clearTimeout(self.timers.invite2xxTimer);\n        self.status = C.STATUS_CONFIRMED;\n      };\n    }\n    if (eventHandlers.failed) {\n      this.reinviteFailed = eventHandlers.failed;\n    } else {\n      this.reinviteFailed = function(){};\n    }\n\n    extraHeaders.push('Contact: ' + this.contact);\n    extraHeaders.push('Allow: '+ SIP.Utils.getAllowedMethods(this.ua));\n    extraHeaders.push('Content-Type: application/sdp');\n\n    this.receiveResponse = this.receiveReinviteResponse;\n    //REVISIT\n    this.mediaHandler.getDescription(\n      function(body){\n        if (mangle) {\n          body = mangle(body);\n        }\n\n        self.dialog.sendRequest(self, SIP.C.INVITE, {\n          extraHeaders: extraHeaders,\n          body: body\n        });\n      },\n      function() {\n        if (self.isReadyToReinvite()) {\n          self.onReadyToReinvite();\n        }\n        self.reinviteFailed();\n      },\n      self.mediaHint\n    );\n  },\n\n  receiveRequest: function (request) {\n    switch (request.method) {\n      case SIP.C.BYE:\n        request.reply(200);\n        if(this.status === C.STATUS_CONFIRMED) {\n          this.emit('bye', request);\n          this.terminated(request, SIP.C.causes.BYE);\n        }\n        break;\n      case SIP.C.INVITE:\n        if(this.status === C.STATUS_CONFIRMED) {\n          this.logger.log('re-INVITE received');\n          // Switch these two lines to try re-INVITEs:\n          //this.receiveReinvite(request);\n          request.reply(488, null, ['Warning: 399 sipjs \"Cannot update media description\"']);\n        }\n        break;\n      case SIP.C.INFO:\n        if(this.status === C.STATUS_CONFIRMED || this.status === C.STATUS_WAITING_FOR_ACK) {\n          var body, tone, duration,\n              contentType = request.getHeader('content-type'),\n              reg_tone = /^(Signal\\s*?=\\s*?)([0-9A-D#*]{1})(\\s)?.*/,\n              reg_duration = /^(Duration\\s?=\\s?)([0-9]{1,4})(\\s)?.*/;\n\n          if (contentType) {\n            if (contentType.match(/^application\\/dtmf-relay/i)) {\n              if (request.body) {\n                body = request.body.split('\\r\\n', 2);\n                if (body.length === 2) {\n                  if (reg_tone.test(body[0])) {\n                    tone = body[0].replace(reg_tone,\"$2\");\n                  }\n                  if (reg_duration.test(body[1])) {\n                    duration = parseInt(body[1].replace(reg_duration,\"$2\"), 10);\n                  }\n                }\n              }\n\n              new DTMF(this, tone, {duration: duration}).init_incoming(request);\n            } else {\n              request.reply(415, null, [\"Accept: application/dtmf-relay\"]);\n            }\n          }\n        }\n        break;\n      case SIP.C.REFER:\n        if(this.status ===  C.STATUS_CONFIRMED) {\n          this.logger.log('REFER received');\n          request.reply(202, 'Accepted');\n          var\n            hasReferListener = this.checkListener('refer'),\n            notifyBody = hasReferListener ?\n              'SIP/2.0 100 Trying' :\n              // RFC 3515.2.4.2: 'the UA MAY decline the request.'\n              'SIP/2.0 603 Declined'\n          ;\n\n          this.sendRequest(SIP.C.NOTIFY, {\n            extraHeaders:[\n              'Event: refer',\n              'Subscription-State: terminated',\n              'Content-Type: message/sipfrag'\n            ],\n            body: notifyBody,\n            receiveResponse: function() {}\n          });\n\n          if (hasReferListener) {\n            this.emit('refer', request);\n          }\n        }\n        break;\n    }\n  },\n\n  /**\n   * Reception of Response for in-dialog INVITE\n   * @private\n   */\n  receiveReinviteResponse: function(response) {\n    var self = this,\n        contentType = response.getHeader('Content-Type');\n\n    if (this.status === C.STATUS_TERMINATED) {\n      return;\n    }\n\n    switch(true) {\n      case /^1[0-9]{2}$/.test(response.status_code):\n        break;\n      case /^2[0-9]{2}$/.test(response.status_code):\n        this.status = C.STATUS_CONFIRMED;\n\n        this.sendRequest(SIP.C.ACK,{cseq:response.cseq});\n\n        if(!response.body) {\n          this.reinviteFailed();\n          break;\n        } else if (contentType !== 'application/sdp') {\n          this.reinviteFailed();\n          break;\n        }\n\n        //REVISIT\n        this.mediaHandler.setDescription(\n          response.body,\n          /*\n           * onSuccess\n           * SDP Answer fits with Offer.\n           */\n          function() {\n            self.reinviteSucceeded();\n          },\n          /*\n           * onFailure\n           * SDP Answer does not fit the Offer.\n           */\n          function() {\n            self.reinviteFailed();\n          }\n        );\n        break;\n      default:\n        this.reinviteFailed();\n    }\n  },\n\n  acceptAndTerminate: function(response, status_code, reason_phrase) {\n    var extraHeaders = [];\n\n    if (status_code) {\n      reason_phrase = reason_phrase || SIP.C.REASON_PHRASE[status_code] || '';\n      extraHeaders.push('Reason: SIP ;cause=' + status_code + '; text=\"' + reason_phrase + '\"');\n    }\n\n    // An error on dialog creation will fire 'failed' event\n    if (this.dialog || this.createDialog(response, 'UAC')) {\n      this.sendRequest(SIP.C.ACK,{cseq: response.cseq});\n      this.sendRequest(SIP.C.BYE, {\n        extraHeaders: extraHeaders\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * RFC3261 13.3.1.4\n   * Response retransmissions cannot be accomplished by transaction layer\n   *  since it is destroyed when receiving the first 2xx answer\n   */\n  setInvite2xxTimer: function(request, body) {\n    var self = this,\n        timeout = SIP.Timers.T1;\n\n    this.timers.invite2xxTimer = SIP.Timers.setTimeout(function invite2xxRetransmission() {\n      if (self.status !== C.STATUS_WAITING_FOR_ACK) {\n        return;\n      }\n\n      self.logger.log('no ACK received, attempting to retransmit OK');\n\n      request.reply(200, null, ['Contact: ' + self.contact], body);\n\n      timeout = Math.min(timeout * 2, SIP.Timers.T2);\n\n      self.timers.invite2xxTimer = SIP.Timers.setTimeout(invite2xxRetransmission, timeout);\n    }, timeout);\n  },\n\n  /**\n   * RFC3261 14.2\n   * If a UAS generates a 2xx response and never receives an ACK,\n   *  it SHOULD generate a BYE to terminate the dialog.\n   */\n  setACKTimer: function() {\n    var self = this;\n\n    this.timers.ackTimer = SIP.Timers.setTimeout(function() {\n      if(self.status === C.STATUS_WAITING_FOR_ACK) {\n        self.logger.log('no ACK received for an extended period of time, terminating the call');\n        SIP.Timers.clearTimeout(self.timers.invite2xxTimer);\n        self.sendRequest(SIP.C.BYE);\n        self.terminated(null, SIP.C.causes.NO_ACK);\n      }\n    }, SIP.Timers.TIMER_H);\n  },\n\n  /*\n   * @private\n   */\n  onReadyToReinvite: function() {\n    var action = this.pending_actions.shift();\n\n    if (!action || !this[action.name]) {\n      return;\n    }\n\n    this[action.name]();\n  },\n\n  onTransportError: function() {\n    if (this.status === C.STATUS_CONFIRMED) {\n      this.terminated(null, SIP.C.causes.CONNECTION_ERROR);\n    } else if (this.status !== C.STATUS_TERMINATED) {\n      this.failed(null, SIP.C.causes.CONNECTION_ERROR);\n    }\n  },\n\n  onRequestTimeout: function() {\n    if (this.status === C.STATUS_CONFIRMED) {\n      this.terminated(null, SIP.C.causes.REQUEST_TIMEOUT);\n    } else if (this.status !== C.STATUS_TERMINATED) {\n      this.failed(null, SIP.C.causes.REQUEST_TIMEOUT);\n    }\n  },\n\n  onDialogError: function(response) {\n    if (this.status === C.STATUS_CONFIRMED) {\n      this.terminated(response, SIP.C.causes.DIALOG_ERROR);\n    } else if (this.status !== C.STATUS_TERMINATED) {\n      this.failed(response, SIP.C.causes.DIALOG_ERROR);\n    }\n  },\n\n  /**\n   * @private\n   */\n  onhold: function(originator) {\n    this[originator === 'local' ? 'local_hold' : 'remote_hold'] = true;\n    this.emit('hold', { originator: originator });\n  },\n\n  /**\n   * @private\n   */\n  onunhold: function(originator) {\n    this[originator === 'local' ? 'local_hold' : 'remote_hold'] = false;\n    this.emit('unhold', { originator: originator });\n  },\n\n  /*\n   * @private\n   */\n  onmute: function(options) {\n    this.emit('muted', {\n      audio: options.audio,\n      video: options.video\n    });\n  },\n\n  /*\n   * @private\n   */\n  onunmute: function(options) {\n    this.emit('unmuted', {\n      audio: options.audio,\n      video: options.video\n    });\n  },\n\n  failed: function(response, cause) {\n    this.close();\n    return this.emit('failed', response, cause);\n  },\n\n  rejected: function(response, cause) {\n    this.close();\n    return this.emit('rejected',\n      response || null,\n      cause\n    );\n  },\n\n  canceled: function() {\n    this.close();\n    return this.emit('cancel');\n  },\n\n  accepted: function(response, cause) {\n    cause = cause || (response && SIP.C.REASON_PHRASE[response.status_code]) || '';\n\n    this.startTime = new Date();\n\n    return this.emit('accepted', response, cause);\n  },\n\n  terminated: function(message, cause) {\n    this.endTime = new Date();\n\n    this.close();\n    return this.emit('terminated', {\n      message: message || null,\n      cause: cause || null\n    });\n  },\n\n  connecting: function(request) {\n    return this.emit('connecting', { request: request });\n  }\n};\n\nSession.C = C;\nSIP.Session = Session;\n\n\nInviteServerContext = function(ua, request) {\n  var expires,\n    self = this,\n    contentType = request.getHeader('Content-Type'),\n    contentDisp = request.parseHeader('Content-Disposition');\n\n  // Check body and content type\n  if ((!contentDisp && contentType !== 'application/sdp') || (contentDisp && contentDisp.type === 'render')) {\n    this.renderbody = request.body;\n    this.rendertype = contentType;\n  } else if (contentType !== 'application/sdp' && (contentDisp && contentDisp.type === 'session')) {\n    request.reply(415);\n    //TODO: instead of 415, pass off to the media handler, who can then decide if we can use it\n    return;\n  }\n\n  //TODO: move this into media handler\n  SIP.Hacks.Firefox.cannotHandleExtraWhitespace(request);\n  SIP.Hacks.AllBrowsers.maskDtls(request);\n\n  SIP.Utils.augment(this, SIP.ServerContext, [ua, request]);\n  SIP.Utils.augment(this, SIP.Session, [ua.configuration.mediaHandlerFactory]);\n\n  this.status = C.STATUS_INVITE_RECEIVED;\n  this.from_tag = request.from_tag;\n  this.id = request.call_id + this.from_tag;\n  this.request = request;\n  this.contact = this.ua.contact.toString();\n\n  this.receiveNonInviteResponse = function () {}; // intentional no-op\n\n  this.logger = ua.getLogger('sip.inviteservercontext', this.id);\n\n  //Save the session into the ua sessions collection.\n  this.ua.sessions[this.id] = this;\n\n  //Get the Expires header value if exists\n  if(request.hasHeader('expires')) {\n    expires = request.getHeader('expires') * 1000;\n  }\n\n  //Set 100rel if necessary\n  function set100rel(h,c) {\n    if (request.hasHeader(h) && request.getHeader(h).toLowerCase().indexOf('100rel') >= 0) {\n      self.rel100 = c;\n    }\n  }\n  set100rel('require', SIP.C.supported.REQUIRED);\n  set100rel('supported', SIP.C.supported.SUPPORTED);\n\n  /* Set the to_tag before\n   * replying a response code that will create a dialog.\n   */\n  request.to_tag = SIP.Utils.newTag();\n\n  // An error on dialog creation will fire 'failed' event\n  if(!this.createDialog(request, 'UAS', true)) {\n    request.reply(500, 'Missing Contact header field');\n    return;\n  }\n\n  //Initialize Media Session\n  this.mediaHandler = this.mediaHandlerFactory(this, {\n    RTCConstraints: {\"optional\": [{'DtlsSrtpKeyAgreement': 'true'}]}\n  });\n\n  if (this.mediaHandler && this.mediaHandler.getRemoteStreams) {\n    this.getRemoteStreams = this.mediaHandler.getRemoteStreams.bind(this.mediaHandler);\n    this.getLocalStreams = this.mediaHandler.getLocalStreams.bind(this.mediaHandler);\n  }\n\n  function fireNewSession() {\n    var options = {extraHeaders: ['Contact: ' + self.contact]};\n\n    if (self.rel100 !== SIP.C.supported.REQUIRED) {\n      self.progress(options);\n    }\n    self.status = C.STATUS_WAITING_FOR_ANSWER;\n\n    // Set userNoAnswerTimer\n    self.timers.userNoAnswerTimer = SIP.Timers.setTimeout(function() {\n      request.reply(408);\n      self.failed(request, SIP.C.causes.NO_ANSWER);\n    }, self.ua.configuration.noAnswerTimeout);\n\n    /* Set expiresTimer\n     * RFC3261 13.3.1\n     */\n    if (expires) {\n      self.timers.expiresTimer = SIP.Timers.setTimeout(function() {\n        if(self.status === C.STATUS_WAITING_FOR_ANSWER) {\n          request.reply(487);\n          self.failed(request, SIP.C.causes.EXPIRES);\n        }\n      }, expires);\n    }\n\n    self.emit('invite',request);\n  }\n\n  if (!request.body || this.renderbody) {\n    SIP.Timers.setTimeout(fireNewSession, 0);\n  } else {\n    this.hasOffer = true;\n    this.mediaHandler.setDescription(\n      request.body,\n      /*\n       * onSuccess\n       * SDP Offer is valid. Fire UA newRTCSession\n       */\n      fireNewSession,\n      /*\n       * onFailure\n       * Bad media description\n       */\n      function(e) {\n        self.logger.warn('invalid SDP');\n        self.logger.warn(e);\n        request.reply(488);\n      }\n    );\n  }\n};\n\nInviteServerContext.prototype = {\n  reject: function(options) {\n    // Check Session Status\n    if (this.status === C.STATUS_TERMINATED) {\n      throw new SIP.Exceptions.InvalidStateError(this.status);\n    }\n\n    this.logger.log('rejecting RTCSession');\n\n    SIP.ServerContext.prototype.reject.apply(this, [options]);\n    return this.terminated();\n  },\n\n  terminate: function(options) {\n    options = options || {};\n\n    var\n    extraHeaders = (options.extraHeaders || []).slice(),\n    body = options.body,\n    dialog,\n    self = this;\n\n    if (this.status === C.STATUS_WAITING_FOR_ACK &&\n       this.request.server_transaction.state !== SIP.Transactions.C.STATUS_TERMINATED) {\n      dialog = this.dialog;\n\n      this.receiveRequest = function(request) {\n        if (request.method === SIP.C.ACK) {\n          this.request(SIP.C.BYE, {\n            extraHeaders: extraHeaders,\n            body: body\n          });\n          dialog.terminate();\n        }\n      };\n\n      this.request.server_transaction.on('stateChanged', function(){\n        if (this.state === SIP.Transactions.C.STATUS_TERMINATED) {\n          this.request = new SIP.OutgoingRequest(\n            SIP.C.BYE,\n            this.dialog.remote_target,\n            this.ua,\n            {\n              'cseq': this.dialog.local_seqnum+=1,\n              'call_id': this.dialog.id.call_id,\n              'from_uri': this.dialog.local_uri,\n              'from_tag': this.dialog.id.local_tag,\n              'to_uri': this.dialog.remote_uri,\n              'to_tag': this.dialog.id.remote_tag,\n              'route_set': this.dialog.route_set\n            },\n            extraHeaders,\n            body\n          );\n\n          new SIP.RequestSender(\n            {\n              request: this.request,\n              onRequestTimeout: function() {\n                self.onRequestTimeout();\n              },\n              onTransportError: function() {\n                self.onTransportError();\n              },\n              receiveResponse: function() {\n                return;\n              }\n            },\n            this.ua\n          ).send();\n          dialog.terminate();\n        }\n      });\n\n      this.emit('bye', this.request);\n      this.terminated();\n\n      // Restore the dialog into 'this' in order to be able to send the in-dialog BYE :-)\n      this.dialog = dialog;\n\n      // Restore the dialog into 'ua' so the ACK can reach 'this' session\n      this.ua.dialogs[dialog.id.toString()] = dialog;\n\n    } else if (this.status === C.STATUS_CONFIRMED) {\n      this.bye(options);\n    } else {\n      this.reject(options);\n    }\n\n    return this;\n  },\n\n  /*\n   * @param {Object} [options.media] gets passed to SIP.MediaHandler.getDescription as mediaHint\n   */\n  progress: function (options) {\n    options = options || {};\n    var\n      statusCode = options.statusCode || 180,\n      reasonPhrase = options.reasonPhrase,\n      extraHeaders = (options.extraHeaders || []).slice(),\n      body = options.body,\n      response;\n\n    if (statusCode < 100 || statusCode > 199) {\n      throw new TypeError('Invalid statusCode: ' + statusCode);\n    }\n\n    if (this.isCanceled || this.status === C.STATUS_TERMINATED) {\n      return this;\n    }\n\n    function do100rel() {\n      statusCode = options.statusCode || 183;\n\n      // Set status and add extra headers\n      this.status = C.STATUS_WAITING_FOR_PRACK;\n      extraHeaders.push('Contact: '+ this.contact);\n      extraHeaders.push('Require: 100rel');\n      extraHeaders.push('RSeq: ' + Math.floor(Math.random() * 10000));\n\n      // Save media hint for later (referred sessions)\n      this.mediaHint = options.media;\n\n      // Get the session description to add to preaccept with\n      this.mediaHandler.getDescription(\n        // Success\n        function succ(body) {\n          if (this.isCanceled || this.status === C.STATUS_TERMINATED) {\n            return;\n          }\n\n          this.early_sdp = body;\n          this[this.hasOffer ? 'hasAnswer' : 'hasOffer'] = true;\n\n          // Retransmit until we get a response or we time out (see prackTimer below)\n          var timeout = SIP.Timers.T1;\n          this.timers.rel1xxTimer = SIP.Timers.setTimeout(function rel1xxRetransmission() {\n            this.request.reply(statusCode, null, extraHeaders, body);\n            timeout *= 2;\n            this.timers.rel1xxTimer = SIP.Timers.setTimeout(rel1xxRetransmission.bind(this), timeout);\n          }.bind(this), timeout);\n\n          // Timeout and reject INVITE if no response\n          this.timers.prackTimer = SIP.Timers.setTimeout(function () {\n            if (this.status !== C.STATUS_WAITING_FOR_PRACK) {\n              return;\n            }\n\n            this.logger.log('no PRACK received, rejecting the call');\n            SIP.Timers.clearTimeout(this.timers.rel1xxTimer);\n            this.request.reply(504);\n            this.terminated(null, SIP.C.causes.NO_PRACK);\n          }.bind(this), SIP.Timers.T1 * 64);\n\n          // Send the initial response\n          response = this.request.reply(statusCode, reasonPhrase, extraHeaders, body);\n          this.emit('progress', response, reasonPhrase);\n        }.bind(this),\n\n        // Failure\n        function fail() {\n          this.failed(null, SIP.C.causes.WEBRTC_ERROR);\n        }.bind(this),\n\n        // Media hint:\n        options.media);\n    } // end do100rel\n\n    function normalReply() {\n      response = this.request.reply(statusCode, reasonPhrase, extraHeaders, body);\n      this.emit('progress', response, reasonPhrase);\n    }\n\n    if (options.statusCode !== 100 &&\n        (this.rel100 === SIP.C.supported.REQUIRED ||\n         (this.rel100 === SIP.C.supported.SUPPORTED && options.rel100) ||\n         (this.rel100 === SIP.C.supported.SUPPORTED && (this.ua.configuration.rel100 === SIP.C.supported.REQUIRED)))) {\n      do100rel.apply(this);\n    } else {\n      normalReply.apply(this);\n    }\n    return this;\n  },\n\n  /*\n   * @param {Object} [options.media] gets passed to SIP.MediaHandler.getDescription as mediaHint\n   */\n  accept: function(options) {\n    options = options || {};\n    options = SIP.Utils.desugarSessionOptions(options);\n    SIP.Utils.optionsOverride(options, 'media', 'mediaConstraints', true, this.logger, this.ua.configuration.media);\n    this.mediaHint = options.media;\n\n    // commented out now-unused hold-related variables for jshint. See below. JMF 2014-1-21\n    var\n      //idx, length, hasAudio, hasVideo,\n      self = this,\n      request = this.request,\n      extraHeaders = (options.extraHeaders || []).slice(),\n    //mediaStream = options.mediaStream || null,\n      sdpCreationSucceeded = function(body) {\n        var\n          response,\n          // run for reply success callback\n          replySucceeded = function() {\n            self.status = C.STATUS_WAITING_FOR_ACK;\n\n            self.setInvite2xxTimer(request, body);\n            self.setACKTimer();\n          },\n\n          // run for reply failure callback\n          replyFailed = function() {\n            self.failed(null, SIP.C.causes.CONNECTION_ERROR);\n          };\n\n        // Chrome might call onaddstream before accept() is called, which means\n        // mediaHandler.render() was called without a renderHint, so we need to\n        // re-render now that mediaHint.render has been set.\n        //\n        // Chrome seems to be in the right regarding this, see\n        // http://dev.w3.org/2011/webrtc/editor/webrtc.html#widl-RTCPeerConnection-onaddstream\n        self.mediaHandler.render();\n\n        extraHeaders.push('Contact: ' + self.contact);\n\n        if(!self.hasOffer) {\n          self.hasOffer = true;\n        } else {\n          self.hasAnswer = true;\n        }\n        response = request.reply(200, null, extraHeaders,\n                      body,\n                      replySucceeded,\n                      replyFailed\n                     );\n        if (self.status !== C.STATUS_TERMINATED) { // Didn't fail\n          self.accepted(response, SIP.C.REASON_PHRASE[200]);\n        }\n      },\n\n      sdpCreationFailed = function() {\n        if (self.status === C.STATUS_TERMINATED) {\n          return;\n        }\n        // TODO - fail out on error\n        //response = request.reply(480);\n        //self.failed(response, SIP.C.causes.USER_DENIED_MEDIA_ACCESS);\n        self.failed(null, SIP.C.causes.WEBRTC_ERROR);\n      };\n\n    // Check Session Status\n    if (this.status === C.STATUS_WAITING_FOR_PRACK) {\n      this.status = C.STATUS_ANSWERED_WAITING_FOR_PRACK;\n      return this;\n    } else if (this.status === C.STATUS_WAITING_FOR_ANSWER) {\n      this.status = C.STATUS_ANSWERED;\n    } else if (this.status !== C.STATUS_EARLY_MEDIA) {\n      throw new SIP.Exceptions.InvalidStateError(this.status);\n    }\n\n    // An error on dialog creation will fire 'failed' event\n    if(!this.createDialog(request, 'UAS')) {\n      request.reply(500, 'Missing Contact header field');\n      return this;\n    }\n\n    SIP.Timers.clearTimeout(this.timers.userNoAnswerTimer);\n\n    // this hold-related code breaks FF accepting new calls - JMF 2014-1-21\n    /*\n    length = this.getRemoteStreams().length;\n\n    for (idx = 0; idx < length; idx++) {\n      if (this.mediaHandler.getRemoteStreams()[idx].getVideoTracks().length > 0) {\n        hasVideo = true;\n      }\n      if (this.mediaHandler.getRemoteStreams()[idx].getAudioTracks().length > 0) {\n        hasAudio = true;\n      }\n    }\n\n    if (!hasAudio && this.mediaConstraints.audio === true) {\n      this.mediaConstraints.audio = false;\n      if (mediaStream) {\n        length = mediaStream.getAudioTracks().length;\n        for (idx = 0; idx < length; idx++) {\n          mediaStream.removeTrack(mediaStream.getAudioTracks()[idx]);\n        }\n      }\n    }\n\n    if (!hasVideo && this.mediaConstraints.video === true) {\n      this.mediaConstraints.video = false;\n      if (mediaStream) {\n        length = mediaStream.getVideoTracks().length;\n        for (idx = 0; idx < length; idx++) {\n          mediaStream.removeTrack(mediaStream.getVideoTracks()[idx]);\n        }\n      }\n    }\n    */\n\n    if (this.status === C.STATUS_EARLY_MEDIA) {\n      sdpCreationSucceeded();\n    } else {\n      this.mediaHandler.getDescription(\n        sdpCreationSucceeded,\n        sdpCreationFailed,\n        self.mediaHint\n      );\n    }\n\n    return this;\n  },\n\n  receiveRequest: function(request) {\n\n    // ISC RECEIVE REQUEST\n\n    function confirmSession() {\n      var contentType;\n\n      SIP.Timers.clearTimeout(this.timers.ackTimer);\n      SIP.Timers.clearTimeout(this.timers.invite2xxTimer);\n      this.status = C.STATUS_CONFIRMED;\n      this.unmute();\n\n      // TODO - this logic assumes Content-Disposition defaults\n      contentType = request.getHeader('Content-Type');\n      if (contentType !== 'application/sdp') {\n        this.renderbody = request.body;\n        this.rendertype = contentType;\n      }\n    }\n\n    switch(request.method) {\n    case SIP.C.CANCEL:\n      /* RFC3261 15 States that a UAS may have accepted an invitation while a CANCEL\n       * was in progress and that the UAC MAY continue with the session established by\n       * any 2xx response, or MAY terminate with BYE. SIP does continue with the\n       * established session. So the CANCEL is processed only if the session is not yet\n       * established.\n       */\n\n      /*\n       * Terminate the whole session in case the user didn't accept (or yet to send the answer) nor reject the\n       *request opening the session.\n       */\n      if(this.status === C.STATUS_WAITING_FOR_ANSWER ||\n         this.status === C.STATUS_WAITING_FOR_PRACK ||\n         this.status === C.STATUS_ANSWERED_WAITING_FOR_PRACK ||\n         this.status === C.STATUS_EARLY_MEDIA ||\n         this.status === C.STATUS_ANSWERED) {\n\n        this.status = C.STATUS_CANCELED;\n        this.request.reply(487);\n        this.canceled(request);\n        this.rejected(request, SIP.C.causes.CANCELED);\n        this.failed(request, SIP.C.causes.CANCELED);\n      }\n      break;\n    case SIP.C.ACK:\n      if(this.status === C.STATUS_WAITING_FOR_ACK) {\n        if (!this.hasAnswer) {\n          if(request.body && request.getHeader('content-type') === 'application/sdp') {\n            // ACK contains answer to an INVITE w/o SDP negotiation\n            SIP.Hacks.Firefox.cannotHandleExtraWhitespace(request);\n            SIP.Hacks.AllBrowsers.maskDtls(request);\n\n            this.hasAnswer = true;\n            this.mediaHandler.setDescription(\n              request.body,\n              /*\n               * onSuccess\n               * SDP Answer fits with Offer. Media will start\n               */\n              confirmSession.bind(this),\n              /*\n               * onFailure\n               * SDP Answer does not fit the Offer.  Terminate the call.\n               */\n              function (e) {\n                this.logger.warn(e);\n                this.terminate({\n                  statusCode: '488',\n                  reasonPhrase: 'Bad Media Description'\n                });\n                this.failed(request, SIP.C.causes.BAD_MEDIA_DESCRIPTION);\n              }.bind(this)\n            );\n          } else if (this.early_sdp) {\n            confirmSession.apply(this);\n          } else {\n            //TODO: Pass to mediahandler\n            this.failed(request, SIP.C.causes.BAD_MEDIA_DESCRIPTION);\n          }\n        } else {\n          confirmSession.apply(this);\n        }\n      }\n      break;\n    case SIP.C.PRACK:\n      if (this.status === C.STATUS_WAITING_FOR_PRACK || this.status === C.STATUS_ANSWERED_WAITING_FOR_PRACK) {\n        //localMedia = session.mediaHandler.localMedia;\n        if(!this.hasAnswer) {\n          if(request.body && request.getHeader('content-type') === 'application/sdp') {\n            this.hasAnswer = true;\n            this.mediaHandler.setDescription(\n              request.body,\n              /*\n               * onSuccess\n               * SDP Answer fits with Offer. Media will start\n               */\n              function() {\n                SIP.Timers.clearTimeout(this.timers.rel1xxTimer);\n                SIP.Timers.clearTimeout(this.timers.prackTimer);\n                request.reply(200);\n                if (this.status === C.STATUS_ANSWERED_WAITING_FOR_PRACK) {\n                  this.status = C.STATUS_EARLY_MEDIA;\n                  this.accept();\n                }\n                this.status = C.STATUS_EARLY_MEDIA;\n                //REVISIT\n                this.mute();\n              }.bind(this),\n              function (e) {\n                //TODO: Send to media handler\n                this.logger.warn(e);\n                this.terminate({\n                  statusCode: '488',\n                  reasonPhrase: 'Bad Media Description'\n                });\n                this.failed(request, SIP.C.causes.BAD_MEDIA_DESCRIPTION);\n              }.bind(this)\n            );\n          } else {\n            this.terminate({\n              statusCode: '488',\n              reasonPhrase: 'Bad Media Description'\n            });\n            this.failed(request, SIP.C.causes.BAD_MEDIA_DESCRIPTION);\n          }\n        } else {\n          SIP.Timers.clearTimeout(this.timers.rel1xxTimer);\n          SIP.Timers.clearTimeout(this.timers.prackTimer);\n          request.reply(200);\n\n          if (this.status === C.STATUS_ANSWERED_WAITING_FOR_PRACK) {\n            this.status = C.STATUS_EARLY_MEDIA;\n            this.accept();\n          }\n          this.status = C.STATUS_EARLY_MEDIA;\n          //REVISIT\n          this.mute();\n        }\n      } else if(this.status === C.STATUS_EARLY_MEDIA) {\n        request.reply(200);\n      }\n      break;\n    default:\n      Session.prototype.receiveRequest.apply(this, [request]);\n      break;\n    }\n  }\n};\n\nSIP.InviteServerContext = InviteServerContext;\n\nInviteClientContext = function(ua, target, options) {\n  options = options || {};\n  var requestParams, iceServers,\n    extraHeaders = (options.extraHeaders || []).slice(),\n    stunServers = options.stunServers || null,\n    turnServers = options.turnServers || null,\n    isMediaSupported = ua.configuration.mediaHandlerFactory.isSupported;\n\n  // Check WebRTC support\n  if (isMediaSupported && !isMediaSupported()) {\n    throw new SIP.Exceptions.NotSupportedError('Media not supported');\n  }\n\n  this.RTCConstraints = options.RTCConstraints || {};\n  this.inviteWithoutSdp = options.inviteWithoutSdp || false;\n\n  // Set anonymous property\n  this.anonymous = options.anonymous || false;\n\n  // Custom data to be sent either in INVITE or in ACK\n  this.renderbody = options.renderbody || null;\n  this.rendertype = options.rendertype || 'text/plain';\n\n  requestParams = {from_tag: this.from_tag};\n\n  /* Do not add ;ob in initial forming dialog requests if the registration over\n   *  the current connection got a GRUU URI.\n   */\n  this.contact = ua.contact.toString({\n    anonymous: this.anonymous,\n    outbound: this.anonymous ? !ua.contact.temp_gruu : !ua.contact.pub_gruu\n  });\n\n  if (this.anonymous) {\n    requestParams.from_displayName = 'Anonymous';\n    requestParams.from_uri = 'sip:anonymous@anonymous.invalid';\n\n    extraHeaders.push('P-Preferred-Identity: '+ ua.configuration.uri.toString());\n    extraHeaders.push('Privacy: id');\n  }\n  extraHeaders.push('Contact: '+ this.contact);\n  extraHeaders.push('Allow: '+ SIP.Utils.getAllowedMethods(ua));\n  if (!this.inviteWithoutSdp) {\n    extraHeaders.push('Content-Type: application/sdp');\n  } else if (this.renderbody) {\n    extraHeaders.push('Content-Type: ' + this.rendertype);\n    extraHeaders.push('Content-Disposition: render;handling=optional');\n  }\n\n  if (ua.configuration.rel100 === SIP.C.supported.REQUIRED) {\n    extraHeaders.push('Require: 100rel');\n  }\n\n  options.extraHeaders = extraHeaders;\n  options.params = requestParams;\n\n  SIP.Utils.augment(this, SIP.ClientContext, [ua, SIP.C.INVITE, target, options]);\n  SIP.Utils.augment(this, SIP.Session, [ua.configuration.mediaHandlerFactory]);\n\n  // Check Session Status\n  if (this.status !== C.STATUS_NULL) {\n    throw new SIP.Exceptions.InvalidStateError(this.status);\n  }\n\n  // Session parameter initialization\n  this.from_tag = SIP.Utils.newTag();\n\n  // OutgoingSession specific parameters\n  this.isCanceled = false;\n  this.received_100 = false;\n\n  this.method = SIP.C.INVITE;\n\n  this.receiveNonInviteResponse = this.receiveResponse;\n  this.receiveResponse = this.receiveInviteResponse;\n\n  this.logger = ua.getLogger('sip.inviteclientcontext');\n\n  if (stunServers) {\n    iceServers = SIP.UA.configuration_check.optional['stunServers'](stunServers);\n    if (!iceServers) {\n      throw new TypeError('Invalid stunServers: '+ stunServers);\n    } else {\n      this.stunServers = iceServers;\n    }\n  }\n\n  if (turnServers) {\n    iceServers = SIP.UA.configuration_check.optional['turnServers'](turnServers);\n    if (!iceServers) {\n      throw new TypeError('Invalid turnServers: '+ turnServers);\n    } else {\n      this.turnServers = iceServers;\n    }\n  }\n\n  ua.applicants[this] = this;\n\n  this.id = this.request.call_id + this.from_tag;\n\n  //Initialize Media Session\n  this.mediaHandler = this.mediaHandlerFactory(this, {\n    RTCConstraints: this.RTCConstraints,\n    stunServers: this.stunServers,\n    turnServers: this.turnServers\n  });\n\n  if (this.mediaHandler && this.mediaHandler.getRemoteStreams) {\n    this.getRemoteStreams = this.mediaHandler.getRemoteStreams.bind(this.mediaHandler);\n    this.getLocalStreams = this.mediaHandler.getLocalStreams.bind(this.mediaHandler);\n  }\n};\n\nInviteClientContext.prototype = {\n  /*\n   * @param {Object} [options.media] gets passed to SIP.MediaHandler.getDescription as mediaHint\n   */\n  invite: function (options) {\n    var self = this;\n    options = options || {};\n\n    SIP.Utils.optionsOverride(options, 'media', 'mediaConstraints', true, this.logger, this.ua.configuration.media);\n    this.mediaHint = options.media;\n\n    //Save the session into the ua sessions collection.\n    //Note: placing in constructor breaks call to request.cancel on close... User does not need this anyway\n    this.ua.sessions[this.id] = this;\n\n    //Note: due to the way Firefox handles gUM calls, it is recommended to make the gUM call at the app level\n    // and hand sip.js a stream as the mediaHint\n    if (this.inviteWithoutSdp) {\n      //just send an invite with no sdp...\n      this.request.body = self.renderbody;\n      this.status = C.STATUS_INVITE_SENT;\n      this.send();\n    } else {\n      this.mediaHandler.getDescription(\n        function onSuccess(offer) {\n          if (self.isCanceled || self.status === C.STATUS_TERMINATED) {\n            return;\n          }\n          self.hasOffer = true;\n          self.request.body = offer;\n          self.status = C.STATUS_INVITE_SENT;\n          self.send();\n        },\n        function onFailure() {\n          if (self.status === C.STATUS_TERMINATED) {\n            return;\n          }\n          // TODO...fail out\n          //self.failed(null, SIP.C.causes.USER_DENIED_MEDIA_ACCESS);\n          //self.failed(null, SIP.C.causes.WEBRTC_ERROR);\n          self.failed(null, SIP.C.causes.WEBRTC_ERROR);\n        },\n        self.mediaHint\n      );\n    }\n\n    return this;\n  },\n\n  receiveInviteResponse: function(response) {\n    var cause, //localMedia,\n      session = this,\n      id = response.call_id + response.from_tag + response.to_tag,\n      extraHeaders = [],\n      options = {};\n\n    if (this.status === C.STATUS_TERMINATED || response.method !== SIP.C.INVITE) {\n      return;\n    }\n\n    if (this.dialog && (response.status_code >= 200 && response.status_code <= 299)) {\n      if (id !== this.dialog.id.toString() ) {\n        if (!this.createDialog(response, 'UAC', true)) {\n          return;\n        }\n        this.earlyDialogs[id].sendRequest(this, SIP.C.ACK,\n                                          {\n                                            body: SIP.Utils.generateFakeSDP(response.body)\n                                          });\n        this.earlyDialogs[id].sendRequest(this, SIP.C.BYE);\n\n        /* NOTE: This fails because the forking proxy does not recognize that an unanswerable\n         * leg (due to peerConnection limitations) has been answered first. If your forking\n         * proxy does not hang up all unanswered branches on the first branch answered, remove this.\n         */\n        if(this.status !== C.STATUS_CONFIRMED) {\n          this.failed(response, SIP.C.causes.WEBRTC_ERROR);\n        }\n        return;\n      } else if (this.status === C.STATUS_CONFIRMED) {\n        this.sendRequest(SIP.C.ACK,{cseq: response.cseq});\n        return;\n      } else if (!this.hasAnswer) {\n        // invite w/o sdp is waiting for callback\n        //an invite with sdp must go on, and hasAnswer is true\n        return;\n      }\n    }\n\n    if (this.dialog && response.status_code < 200) {\n      /*\n        Early media has been set up with at least one other different branch,\n        but a final 2xx response hasn't been received\n      */\n      if (!this.earlyDialogs[id] && !this.createDialog(response, 'UAC', true)) {\n        return;\n      }\n\n      extraHeaders.push('RAck: ' + response.getHeader('rseq') + ' ' + response.getHeader('cseq'));\n      this.earlyDialogs[id].pracked.push(response.getHeader('rseq'));\n\n      this.earlyDialogs[id].sendRequest(this, SIP.C.PRACK, {\n        extraHeaders: extraHeaders,\n        body: SIP.Utils.generateFakeSDP(response.body)\n      });\n      return;\n    }\n\n    // Proceed to cancellation if the user requested.\n    if(this.isCanceled) {\n      if(response.status_code >= 100 && response.status_code < 200) {\n        this.request.cancel(this.cancelReason);\n        this.canceled(null);\n      } else if(response.status_code >= 200 && response.status_code < 299) {\n        this.acceptAndTerminate(response);\n        this.emit('bye', this.request);\n      }\n      return;\n    }\n\n    switch(true) {\n      case /^100$/.test(response.status_code):\n        this.received_100 = true;\n        break;\n      case (/^1[0-9]{2}$/.test(response.status_code)):\n        // Do nothing with 1xx responses without To tag.\n        if(!response.to_tag) {\n          this.logger.warn('1xx response received without to tag');\n          break;\n        }\n\n        // Create Early Dialog if 1XX comes with contact\n        if(response.hasHeader('contact')) {\n          // An error on dialog creation will fire 'failed' event\n          if (!this.createDialog(response, 'UAC', true)) {\n            break;\n          }\n        }\n\n        this.status = C.STATUS_1XX_RECEIVED;\n\n        if(response.hasHeader('require') &&\n           response.getHeader('require').indexOf('100rel') !== -1) {\n\n          // Do nothing if this.dialog is already confirmed\n          if (this.dialog || !this.earlyDialogs[id]) {\n            break;\n          }\n\n          if (this.earlyDialogs[id].pracked.indexOf(response.getHeader('rseq')) !== -1 ||\n              (this.earlyDialogs[id].pracked[this.earlyDialogs[id].pracked.length-1] >= response.getHeader('rseq') && this.earlyDialogs[id].pracked.length > 0)) {\n            return;\n          }\n\n          SIP.Hacks.Firefox.cannotHandleExtraWhitespace(response);\n          SIP.Hacks.AllBrowsers.maskDtls(response);\n\n          if (!response.body) {\n            extraHeaders.push('RAck: ' + response.getHeader('rseq') + ' ' + response.getHeader('cseq'));\n            this.earlyDialogs[id].pracked.push(response.getHeader('rseq'));\n            this.earlyDialogs[id].sendRequest(this, SIP.C.PRACK, {\n              extraHeaders: extraHeaders\n            });\n            this.emit('progress', response);\n\n          } else if (this.hasOffer) {\n            if (!this.createDialog(response, 'UAC')) {\n              break;\n            }\n            this.hasAnswer = true;\n            this.mediaHandler.setDescription(\n              response.body,\n              /*\n               * onSuccess\n               * SDP Answer fits with Offer. Media will start\n               */\n              function () {\n                extraHeaders.push('RAck: ' + response.getHeader('rseq') + ' ' + response.getHeader('cseq'));\n                session.dialog.pracked.push(response.getHeader('rseq'));\n\n                session.sendRequest(SIP.C.PRACK, {\n                  extraHeaders: extraHeaders,\n                  receiveResponse: function() {}\n                });\n                session.status = C.STATUS_EARLY_MEDIA;\n                session.mute();\n                session.emit('progress', response);\n                /*\n                if (session.status === C.STATUS_EARLY_MEDIA) {\n                  localMedia = session.mediaHandler.localMedia;\n                  if (localMedia.getAudioTracks().length > 0) {\n                    localMedia.getAudioTracks()[0].enabled = false;\n                  }\n                  if (localMedia.getVideoTracks().length > 0) {\n                    localMedia.getVideoTracks()[0].enabled = false;\n                  }\n                }*/\n              },\n              /*\n               * onFailure\n               * SDP Answer does not fit the Offer. Accept the call and Terminate.\n               */\n              function(e) {\n                session.logger.warn(e);\n                session.acceptAndTerminate(response, 488, 'Not Acceptable Here');\n                session.failed(response, SIP.C.causes.BAD_MEDIA_DESCRIPTION);\n              }\n            );\n          } else {\n            this.earlyDialogs[id].pracked.push(response.getHeader('rseq'));\n            this.earlyDialogs[id].mediaHandler.setDescription(\n              response.body,\n              function onSuccess() {\n                session.earlyDialogs[id].mediaHandler.getDescription(\n                  function onSuccess(sdp) {\n                    extraHeaders.push('Content-Type: application/sdp');\n                    extraHeaders.push('RAck: ' + response.getHeader('rseq') + ' ' + response.getHeader('cseq'));\n                    session.earlyDialogs[id].sendRequest(session, SIP.C.PRACK, {\n                      extraHeaders: extraHeaders,\n                      body: sdp\n                    });\n                    session.status = C.STATUS_EARLY_MEDIA;\n                    session.emit('progress', response);\n                  },\n                  function onFailure() {\n                    session.earlyDialogs[id].pracked.push(response.getHeader('rseq'));\n                    if (session.status === C.STATUS_TERMINATED) {\n                      return;\n                    }\n                    // TODO - fail out on error\n                    // session.failed(gum error);\n                    session.failed(null, SIP.C.causes.WEBRTC_ERROR);\n                  },\n                  session.mediaHint\n                );\n              },\n              function onFailure(e) {\n                session.earlyDialogs[id].pracked.splice(session.earlyDialogs[id].pracked.indexOf(response.getHeader('rseq')), 1);\n                // Could not set remote description\n                session.logger.warn('invalid SDP');\n                session.logger.warn(e);\n              }\n            );\n          }\n        } else {\n          this.emit('progress', response);\n        }\n        break;\n      case /^2[0-9]{2}$/.test(response.status_code):\n        var cseq = this.request.cseq + ' ' + this.request.method;\n        if (cseq !== response.getHeader('cseq')) {\n          break;\n        }\n\n        if (this.status === C.STATUS_EARLY_MEDIA && this.dialog) {\n          this.status = C.STATUS_CONFIRMED;\n          this.unmute();\n          /*localMedia = this.mediaHandler.localMedia;\n          if (localMedia.getAudioTracks().length > 0) {\n            localMedia.getAudioTracks()[0].enabled = true;\n          }\n          if (localMedia.getVideoTracks().length > 0) {\n            localMedia.getVideoTracks()[0].enabled = true;\n          }*/\n          options = {};\n          if (this.renderbody) {\n            extraHeaders.push('Content-Type: ' + this.rendertype);\n            options.extraHeaders = extraHeaders;\n            options.body = this.renderbody;\n          }\n          options.cseq = response.cseq;\n          this.sendRequest(SIP.C.ACK, options);\n          this.accepted(response);\n          break;\n        }\n        // Do nothing if this.dialog is already confirmed\n        if (this.dialog) {\n          break;\n        }\n\n        SIP.Hacks.Firefox.cannotHandleExtraWhitespace(response);\n        SIP.Hacks.AllBrowsers.maskDtls(response);\n\n        // This is an invite without sdp\n        if (!this.hasOffer) {\n          if (this.earlyDialogs[id] && this.earlyDialogs[id].mediaHandler.localMedia) {\n            //REVISIT\n            this.hasOffer = true;\n            this.hasAnswer = true;\n            this.mediaHandler = this.earlyDialogs[id].mediaHandler;\n            if (!this.createDialog(response, 'UAC')) {\n              break;\n            }\n            this.status = C.STATUS_CONFIRMED;\n            this.sendRequest(SIP.C.ACK, {cseq:response.cseq});\n\n            this.unmute();\n            /*\n            localMedia = session.mediaHandler.localMedia;\n            if (localMedia.getAudioTracks().length > 0) {\n              localMedia.getAudioTracks()[0].enabled = true;\n            }\n            if (localMedia.getVideoTracks().length > 0) {\n              localMedia.getVideoTracks()[0].enabled = true;\n            }*/\n            this.accepted(response);\n          } else {\n            if(!response.body) {\n              this.acceptAndTerminate(response, 400, 'Missing session description');\n              this.failed(response, SIP.C.causes.BAD_MEDIA_DESCRIPTION);\n              break;\n            }\n            if (!this.createDialog(response, 'UAC')) {\n              break;\n            }\n            this.hasOffer = true;\n            this.mediaHandler.setDescription(\n              response.body,\n              function onSuccess() {\n                session.mediaHandler.getDescription(\n                  function onSuccess(sdp) {\n                    //var localMedia;\n                    if(session.isCanceled || session.status === C.STATUS_TERMINATED) {\n                      return;\n                    }\n\n                    sdp = SIP.Hacks.Firefox.hasMissingCLineInSDP(sdp);\n\n                    session.status = C.STATUS_CONFIRMED;\n                    session.hasAnswer = true;\n\n                    session.unmute();\n                    /*localMedia = session.mediaHandler.localMedia;\n                    if (localMedia.getAudioTracks().length > 0) {\n                      localMedia.getAudioTracks()[0].enabled = true;\n                    }\n                    if (localMedia.getVideoTracks().length > 0) {\n                      localMedia.getVideoTracks()[0].enabled = true;\n                    }*/\n                    session.sendRequest(SIP.C.ACK,{\n                      body: sdp,\n                      extraHeaders:['Content-Type: application/sdp'],\n                      cseq:response.cseq\n                    });\n                    session.accepted(response);\n                  },\n                  function onFailure() {\n                    // TODO do something here\n                    session.logger.warn(\"there was a problem\");\n                  },\n                  session.mediaHint\n                );\n              },\n              function onFailure(e) {\n                session.logger.warn('invalid SDP');\n                session.logger.warn(e);\n                response.reply(488);\n              }\n            );\n          }\n        } else if (this.hasAnswer){\n          if (this.renderbody) {\n            extraHeaders.push('Content-Type: ' + session.rendertype);\n            options.extraHeaders = extraHeaders;\n            options.body = this.renderbody;\n          }\n          this.sendRequest(SIP.C.ACK, options);\n        } else {\n          if(!response.body) {\n            this.acceptAndTerminate(response, 400, 'Missing session description');\n            this.failed(response, SIP.C.causes.BAD_MEDIA_DESCRIPTION);\n            break;\n          }\n          if (!this.createDialog(response, 'UAC')) {\n            break;\n          }\n          this.hasAnswer = true;\n          this.mediaHandler.setDescription(\n            response.body,\n            /*\n             * onSuccess\n             * SDP Answer fits with Offer. Media will start\n             */\n            function() {\n              var options = {};//,localMedia;\n              session.status = C.STATUS_CONFIRMED;\n              session.unmute();\n              /*localMedia = session.mediaHandler.localMedia;\n              if (localMedia.getAudioTracks().length > 0) {\n                localMedia.getAudioTracks()[0].enabled = true;\n              }\n              if (localMedia.getVideoTracks().length > 0) {\n                localMedia.getVideoTracks()[0].enabled = true;\n              }*/\n              if (session.renderbody) {\n                extraHeaders.push('Content-Type: ' + session.rendertype);\n                options.extraHeaders = extraHeaders;\n                options.body = session.renderbody;\n              }\n              options.cseq = response.cseq;\n              session.sendRequest(SIP.C.ACK, options);\n              session.accepted(response);\n            },\n            /*\n             * onFailure\n             * SDP Answer does not fit the Offer. Accept the call and Terminate.\n             */\n            function(e) {\n              session.logger.warn(e);\n              session.acceptAndTerminate(response, 488, 'Not Acceptable Here');\n              session.failed(response, SIP.C.causes.BAD_MEDIA_DESCRIPTION);\n            }\n          );\n        }\n        break;\n      default:\n        cause = SIP.Utils.sipErrorCause(response.status_code);\n        this.failed(response, cause);\n        this.rejected(response, cause);\n    }\n  },\n\n  cancel: function(options) {\n    options = options || {};\n\n    var\n    statusCode = options.status_code,\n    reasonPhrase = options.reasonPhrase,\n    cancel_reason;\n\n    // Check Session Status\n    if (this.status === C.STATUS_TERMINATED) {\n      throw new SIP.Exceptions.InvalidStateError(this.status);\n    }\n\n    this.logger.log('canceling RTCSession');\n\n    if (statusCode && (statusCode < 200 || statusCode >= 700)) {\n      throw new TypeError('Invalid status_code: '+ statusCode);\n    } else if (statusCode) {\n      reasonPhrase = reasonPhrase || SIP.C.REASON_PHRASE[statusCode] || '';\n      cancel_reason = 'SIP ;cause=' + statusCode + ' ;text=\"' + reasonPhrase + '\"';\n    }\n\n    // Check Session Status\n    if (this.status === C.STATUS_NULL ||\n        (this.status === C.STATUS_INVITE_SENT && !this.received_100)) {\n      this.isCanceled = true;\n      this.cancelReason = cancel_reason;\n    } else if (this.status === C.STATUS_INVITE_SENT ||\n               this.status === C.STATUS_1XX_RECEIVED ||\n               this.status === C.STATUS_EARLY_MEDIA) {\n      this.request.cancel(cancel_reason);\n    }\n\n    return this.canceled();\n  },\n\n  terminate: function(options) {\n    if (this.status === C.STATUS_TERMINATED) {\n      return this;\n    }\n\n    if (this.status === C.STATUS_WAITING_FOR_ACK || this.status === C.STATUS_CONFIRMED) {\n      this.bye(options);\n    } else {\n      this.cancel(options);\n    }\n\n    return this.terminated();\n  },\n\n  receiveRequest: function(request) {\n    // ICC RECEIVE REQUEST\n\n    // Reject CANCELs\n    if (request.method === SIP.C.CANCEL) {\n      // TODO; make this a switch when it gets added\n    }\n\n    if (request.method === SIP.C.ACK && this.status === C.STATUS_WAITING_FOR_ACK) {\n      SIP.Timers.clearTimeout(this.timers.ackTimer);\n      SIP.Timers.clearTimeout(this.timers.invite2xxTimer);\n      this.status = C.STATUS_CONFIRMED;\n      this.unmute();\n\n      this.accepted();\n    }\n\n    return Session.prototype.receiveRequest.apply(this, [request]);\n  }\n};\n\nSIP.InviteClientContext = InviteClientContext;\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/Session.js\n ** module id = 25\n ** module chunks = 0\n **/","\n/**\n * @fileoverview SIP Subscriber (SIP-Specific Event Notifications RFC6665)\n */\n\n/**\n * @augments SIP\n * @class Class creating a SIP Subscription.\n */\nmodule.exports = function (SIP) {\nSIP.Subscription = function (ua, target, event, options) {\n  var events;\n\n  options = options || {};\n  options.extraHeaders = (options.extraHeaders || []).slice();\n\n  events = ['notify'];\n  this.id = null;\n  this.state = 'init';\n\n  if (!event) {\n    throw new TypeError('Event necessary to create a subscription.');\n  } else {\n    //TODO: check for valid events here probably make a list in SIP.C; or leave it up to app to check?\n    //The check may need to/should probably occur on the other side,\n    this.event = event;\n  }\n\n  if(typeof options.expires !== 'number'){\n    ua.logger.warn('expires must be a number. Using default of 3600.');\n    this.expires = 3600;\n  } else {\n    this.expires = options.expires;\n  }\n\n  options.extraHeaders.push('Event: ' + this.event);\n  options.extraHeaders.push('Expires: ' + this.expires);\n\n  if (options.body) {\n    this.body = options.body;\n  }\n\n  this.contact = ua.contact.toString();\n\n  options.extraHeaders.push('Contact: '+ this.contact);\n  options.extraHeaders.push('Allow: '+ SIP.Utils.getAllowedMethods(ua));\n\n  SIP.Utils.augment(this, SIP.ClientContext, [ua, SIP.C.SUBSCRIBE, target, options]);\n\n  this.logger = ua.getLogger('sip.subscription');\n\n  this.dialog = null;\n  this.timers = {N: null, sub_duration: null};\n  this.errorCodes  = [404,405,410,416,480,481,482,483,484,485,489,501,604];\n\n  this.initMoreEvents(events);\n};\n\nSIP.Subscription.prototype = {\n  subscribe: function() {\n    var sub = this;\n\n    SIP.Timers.clearTimeout(this.timers.sub_duration);\n    SIP.Timers.clearTimeout(this.timers.N);\n    this.timers.N = SIP.Timers.setTimeout(sub.timer_fire.bind(sub), SIP.Timers.TIMER_N);\n\n    this.send();\n\n    this.state = 'notify_wait';\n\n    return this;\n  },\n\n  receiveResponse: function(response) {\n    var expires, sub = this,\n        cause = SIP.C.REASON_PHRASE[response.status_code] || '';\n\n    if (this.errorCodes.indexOf(response.status_code) !== -1) {\n      this.failed(response, null);\n    } else if (/^2[0-9]{2}$/.test(response.status_code)){\n      expires = response.getHeader('Expires');\n      SIP.Timers.clearTimeout(this.timers.N);\n\n      if (this.createConfirmedDialog(response,'UAC')) {\n        this.id = this.dialog.id.toString();\n        this.ua.subscriptions[this.id] = this;\n        this.emit('accepted', response, cause);\n        // UPDATE ROUTE SET TO BE BACKWARDS COMPATIBLE?\n      }\n\n      if (expires && expires <= this.expires) {\n        this.timers.sub_duration = SIP.Timers.setTimeout(sub.subscribe.bind(sub), expires * 1000);\n      } else {\n        if (!expires) {\n          this.logger.warn('Expires header missing in a 200-class response to SUBSCRIBE');\n          this.failed(response, SIP.C.EXPIRES_HEADER_MISSING);\n        } else {\n          this.logger.warn('Expires header in a 200-class response to SUBSCRIBE with a higher value than the one in the request');\n          this.failed(response, SIP.C.INVALID_EXPIRES_HEADER);\n        }\n      }\n    } //Used to just ignore provisional responses; now ignores everything except errorCodes and 2xx\n  },\n\n  unsubscribe: function() {\n    var extraHeaders = [], sub = this;\n\n    this.state = 'terminated';\n\n    extraHeaders.push('Event: ' + this.event);\n    extraHeaders.push('Expires: 0');\n\n    extraHeaders.push('Contact: '+ this.contact);\n    extraHeaders.push('Allow: '+ SIP.Utils.getAllowedMethods(this.ua));\n\n    this.request = new SIP.OutgoingRequest(this.method, this.request.to.uri.toString(), this.ua, null, extraHeaders);\n\n    //MAYBE, may want to see state\n    this.receiveResponse = function(){};\n\n    SIP.Timers.clearTimeout(this.timers.sub_duration);\n    SIP.Timers.clearTimeout(this.timers.N);\n    this.timers.N = SIP.Timers.setTimeout(sub.timer_fire.bind(sub), SIP.Timers.TIMER_N);\n\n    this.send();\n  },\n\n  /**\n  * @private\n  */\n  timer_fire: function(){\n    if (this.state === 'terminated') {\n      this.close();\n    } else if (this.state === 'pending' || this.state === 'notify_wait') {\n      this.state = 'terminated';\n      this.close();\n    } else {\n      this.subscribe();\n    }\n  },\n\n  /**\n  * @private\n  */\n  close: function() {\n    if(this.state !== 'terminated') {\n      this.unsubscribe();\n    }\n\n    this.terminateDialog();\n    SIP.Timers.clearTimeout(this.timers.N);\n    SIP.Timers.clearTimeout(this.timers.sub_duration);\n\n    delete this.ua.subscriptions[this.id];\n  },\n\n  /**\n  * @private\n  */\n  createConfirmedDialog: function(message, type) {\n    var dialog;\n\n    this.terminateDialog();\n    dialog = new SIP.Dialog(this, message, type);\n\n    if(!dialog.error) {\n      this.dialog = dialog;\n      return true;\n    }\n    // Dialog not created due to an error\n    else {\n      return false;\n    }\n  },\n\n  /**\n  * @private\n  */\n  terminateDialog: function() {\n    if(this.dialog) {\n      delete this.ua.subscriptions[this.id];\n      this.dialog.terminate();\n      delete this.dialog;\n    }\n  },\n\n  /**\n  * @private\n  */\n  receiveRequest: function(request) {\n    var sub_state, sub = this;\n\n    function setExpiresTimeout() {\n      if (sub_state.expires) {\n        sub_state.expires = Math.min(sub.expires,\n                                     Math.max(sub_state.expires, 0));\n        sub.timers.sub_duration = SIP.Timers.setTimeout(sub.subscribe.bind(sub),\n                                                    sub_state.expires * 1000);\n      }\n    }\n\n    if (!this.matchEvent(request)) { //checks event and subscription_state headers\n      request.reply(489);\n      return;\n    }\n\n    sub_state = request.parseHeader('Subscription-State');\n\n    request.reply(200, SIP.C.REASON_200);\n\n    SIP.Timers.clearTimeout(this.timers.N);\n    SIP.Timers.clearTimeout(this.timers.sub_duration);\n\n    this.emit('notify', {request: request});\n\n    switch (sub_state.state) {\n      case 'active':\n        this.state = 'active';\n        setExpiresTimeout();\n        break;\n      case 'pending':\n        if (this.state === 'notify_wait') {\n          setExpiresTimeout();\n        }\n        this.state = 'pending';\n        break;\n      case 'terminated':\n        if (sub_state.reason) {\n          this.logger.log('terminating subscription with reason '+ sub_state.reason);\n          switch (sub_state.reason) {\n            case 'deactivated':\n            case 'timeout':\n              this.subscribe();\n              return;\n            case 'probation':\n            case 'giveup':\n              if(sub_state.params && sub_state.params['retry-after']) {\n                this.timers.sub_duration = SIP.Timers.setTimeout(sub.subscribe.bind(sub), sub_state.params['retry-after']);\n              } else {\n                this.subscribe();\n              }\n              return;\n            case 'rejected':\n            case 'noresource':\n            case 'invariant':\n              break;\n          }\n        }\n        this.close();\n        break;\n    }\n  },\n\n  failed: function(response, cause) {\n    this.close();\n    return this.emit('failed', response, cause);\n  },\n\n  /**\n  * @private\n  */\n  matchEvent: function(request) {\n    var event;\n\n    // Check mandatory header Event\n    if (!request.hasHeader('Event')) {\n      this.logger.warn('missing Event header');\n      return false;\n    }\n    // Check mandatory header Subscription-State\n    if (!request.hasHeader('Subscription-State')) {\n      this.logger.warn('missing Subscription-State header');\n      return false;\n    }\n\n    // Check whether the event in NOTIFY matches the event in SUBSCRIBE\n    event = request.parseHeader('event').event;\n\n    if (this.event !== event) {\n      this.logger.warn('event match failed');\n      request.reply(481, 'Event Match Failed');\n      return false;\n    } else {\n      return true;\n    }\n  }\n};\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/Subscription.js\n ** module id = 26\n ** module chunks = 0\n **/","/**\n * @fileoverview MediaHandler\n */\n\n/* MediaHandler\n * @class PeerConnection helper Class.\n * @param {SIP.Session} session\n * @param {Object} [options]\n * @param {SIP.WebRTC.MediaStreamManager} [options.mediaStreamManager]\n *        The MediaStreamManager to acquire/release streams from/to.\n *        If not provided, a default MediaStreamManager will be used.\n */\nmodule.exports = function (SIP) {\n\nvar MediaHandler = function(session, options) {\n  var events = [\n    'userMediaRequest',\n    'userMedia',\n    'userMediaFailed',\n    'iceGathering',\n    'iceCandidate',\n    'iceComplete',\n    'iceFailed',\n    'getDescription',\n    'setDescription',\n    'dataChannel',\n    'addStream'\n  ];\n  options = options || {};\n\n  this.logger = session.ua.getLogger('sip.invitecontext.mediahandler', session.id);\n  this.session = session;\n  this.localMedia = null;\n  this.ready = true;\n  this.mediaStreamManager = options.mediaStreamManager || new SIP.WebRTC.MediaStreamManager(this.logger);\n  this.audioMuted = false;\n  this.videoMuted = false;\n\n  // old init() from here on\n  var idx, length, server,\n    self = this,\n    servers = [],\n    stunServers = options.stunServers || null,\n    turnServers = options.turnServers || null,\n    config = this.session.ua.configuration;\n  this.RTCConstraints = options.RTCConstraints || {};\n\n  if (!stunServers) {\n    stunServers = config.stunServers;\n  }\n\n  if(!turnServers) {\n    turnServers = config.turnServers;\n  }\n\n  /* Change 'url' to 'urls' whenever this issue is solved:\n   * https://code.google.com/p/webrtc/issues/detail?id=2096\n   */\n  [].concat(stunServers).forEach(function (server) {\n    servers.push({'url': server});\n  });\n\n  length = turnServers.length;\n  for (idx = 0; idx < length; idx++) {\n    server = turnServers[idx];\n    servers.push({\n      'url': server.urls,\n      'username': server.username,\n      'credential': server.password\n    });\n  }\n\n  this.peerConnection = new SIP.WebRTC.RTCPeerConnection({'iceServers': servers}, this.RTCConstraints);\n\n  this.peerConnection.onaddstream = function(e) {\n    self.logger.log('stream added: '+ e.stream.id);\n    self.render();\n    self.emit('addStream', e);\n  };\n\n  this.peerConnection.onremovestream = function(e) {\n    self.logger.log('stream removed: '+ e.stream.id);\n  };\n\n  this.peerConnection.onicecandidate = function(e) {\n    self.emit('iceCandidate', e);\n    if (e.candidate) {\n      self.logger.log('ICE candidate received: '+ (e.candidate.candidate === null ? null : e.candidate.candidate.trim()));\n    } else if (self.onIceCompleted !== undefined) {\n      self.onIceCompleted(this);\n    } else {\n      self.callOnIceCompleted = true;\n    }\n  };\n\n  this.peerConnection.onicegatheringstatechange = function () {\n    self.logger.log('RTCIceGatheringState changed: ' + this.iceGatheringState);\n    if (this.iceGatheringState === 'gathering') {\n      self.emit('iceGathering', this);\n    }\n    if (this.iceGatheringState === 'complete') {\n      if (self.onIceCompleted !== undefined) {\n        self.onIceCompleted(this);\n      } else {\n        self.callOnIceCompleted = true;\n      }\n    }\n  };\n\n  this.peerConnection.oniceconnectionstatechange = function() {  //need e for commented out case\n    self.logger.log('ICE connection state changed to \"'+ this.iceConnectionState +'\"');\n\n    if (this.iceConnectionState === 'failed') {\n      self.emit('iceFailed', this);\n    }\n\n    //Bria state changes are always connected -> disconnected -> connected on accept, so session gets terminated\n    //normal calls switch from failed to connected in some cases, so checking for failed and terminated\n    /*if (this.iceConnectionState === 'failed') {\n      self.session.terminate({\n        cause: SIP.C.causes.RTP_TIMEOUT,\n        status_code: 200,\n        reason_phrase: SIP.C.causes.RTP_TIMEOUT\n      });\n    } else if (e.currentTarget.iceGatheringState === 'complete' && this.iceConnectionState !== 'closed') {\n      self.onIceCompleted(this);\n    }*/\n  };\n\n  this.peerConnection.onstatechange = function() {\n    self.logger.log('PeerConnection state changed to \"'+ this.readyState +'\"');\n  };\n\n  this.initEvents(events);\n\n  function selfEmit(mh, event) {\n    if (mh.mediaStreamManager.on &&\n        mh.mediaStreamManager.checkEvent &&\n        mh.mediaStreamManager.checkEvent(event)) {\n      mh.mediaStreamManager.on(event, function () {\n        mh.emit.apply(mh, [event].concat(Array.prototype.slice.call(arguments)));\n      });\n    }\n  }\n\n  selfEmit(this, 'userMediaRequest');\n  selfEmit(this, 'userMedia');\n  selfEmit(this, 'userMediaFailed');\n};\n\nMediaHandler.defaultFactory = function defaultFactory (session, options) {\n  return new MediaHandler(session, options);\n};\nMediaHandler.defaultFactory.isSupported = function () {\n  return SIP.WebRTC.isSupported();\n};\n\nMediaHandler.prototype = Object.create(SIP.MediaHandler.prototype, {\n// Functions the session can use\n  isReady: {writable: true, value: function isReady () {\n    return this.ready;\n  }},\n\n  close: {writable: true, value: function close () {\n    this.logger.log('closing PeerConnection');\n    // have to check signalingState since this.close() gets called multiple times\n    // TODO figure out why that happens\n    if(this.peerConnection && this.peerConnection.signalingState !== 'closed') {\n      this.peerConnection.close();\n\n      if(this.localMedia) {\n        this.mediaStreamManager.release(this.localMedia);\n      }\n    }\n  }},\n\n  /**\n   * @param {Function} onSuccess\n   * @param {Function} onFailure\n   * @param {SIP.WebRTC.MediaStream | (getUserMedia constraints)} [mediaHint]\n   *        the MediaStream (or the constraints describing it) to be used for the session\n   */\n  getDescription: {writable: true, value: function getDescription (onSuccess, onFailure, mediaHint) {\n    var self = this;\n    mediaHint = mediaHint || {};\n    if (mediaHint.dataChannel === true) {\n      mediaHint.dataChannel = {};\n    }\n    this.mediaHint = mediaHint;\n\n    /*\n     * 1. acquire stream (skip if MediaStream passed in)\n     * 2. addStream\n     * 3. createOffer/createAnswer\n     * 4. call onSuccess()\n     */\n\n    /* Last functions first, to quiet JSLint */\n    function streamAdditionSucceeded() {\n      if (self.hasOffer('remote')) {\n        self.peerConnection.ondatachannel = function (evt) {\n          self.dataChannel = evt.channel;\n          self.emit('dataChannel', self.dataChannel);\n        };\n      } else if (mediaHint.dataChannel &&\n                 self.peerConnection.createDataChannel) {\n        self.dataChannel = self.peerConnection.createDataChannel(\n          'sipjs',\n          mediaHint.dataChannel\n        );\n        self.emit('dataChannel', self.dataChannel);\n      }\n\n      self.render();\n      self.createOfferOrAnswer(onSuccess, onFailure, self.RTCConstraints);\n    }\n\n    function acquireSucceeded(stream) {\n      self.logger.log('acquired local media stream');\n      self.localMedia = stream;\n      self.session.connecting();\n      self.addStream(\n        stream,\n        streamAdditionSucceeded,\n        onFailure\n      );\n    }\n\n    if (self.localMedia) {\n      self.logger.log('already have local media');\n      streamAdditionSucceeded();\n      return;\n    }\n\n    self.logger.log('acquiring local media');\n    self.mediaStreamManager.acquire(\n      acquireSucceeded,\n      function acquireFailed(err) {\n        self.logger.error('unable to acquire stream');\n        self.logger.error(err);\n        self.session.connecting();\n        onFailure(err);\n      },\n      mediaHint\n    );\n  }},\n\n  /**\n  * Message reception.\n  * @param {String} type\n  * @param {String} sdp\n  * @param {Function} onSuccess\n  * @param {Function} onFailure\n  */\n  setDescription: {writable: true, value: function setDescription (sdp, onSuccess, onFailure) {\n    var rawDescription = {\n      type: this.hasOffer('local') ? 'answer' : 'offer',\n      sdp: sdp\n    };\n\n    this.emit('setDescription', rawDescription);\n\n    var description = new SIP.WebRTC.RTCSessionDescription(rawDescription);\n    this.peerConnection.setRemoteDescription(description, onSuccess, onFailure);\n  }},\n\n// Functions the session can use, but only because it's convenient for the application\n  isMuted: {writable: true, value: function isMuted () {\n    return {\n      audio: this.audioMuted,\n      video: this.videoMuted\n    };\n  }},\n\n  mute: {writable: true, value: function mute (options) {\n    if (this.getLocalStreams().length === 0) {\n      return;\n    }\n\n    options = options || {\n      audio: this.getLocalStreams()[0].getAudioTracks().length > 0,\n      video: this.getLocalStreams()[0].getVideoTracks().length > 0\n    };\n\n    var audioMuted = false,\n        videoMuted = false;\n\n    if (options.audio && !this.audioMuted) {\n      audioMuted = true;\n      this.audioMuted = true;\n      this.toggleMuteAudio(true);\n    }\n\n    if (options.video && !this.videoMuted) {\n      videoMuted = true;\n      this.videoMuted = true;\n      this.toggleMuteVideo(true);\n    }\n\n    //REVISIT\n    if (audioMuted || videoMuted) {\n      return {\n        audio: audioMuted,\n        video: videoMuted\n      };\n      /*this.session.onmute({\n        audio: audioMuted,\n        video: videoMuted\n      });*/\n    }\n  }},\n\n  unmute: {writable: true, value: function unmute (options) {\n    if (this.getLocalStreams().length === 0) {\n      return;\n    }\n\n    options = options || {\n      audio: this.getLocalStreams()[0].getAudioTracks().length > 0,\n      video: this.getLocalStreams()[0].getVideoTracks().length > 0\n    };\n\n    var audioUnMuted = false,\n        videoUnMuted = false;\n\n    if (options.audio && this.audioMuted) {\n      audioUnMuted = true;\n      this.audioMuted = false;\n      this.toggleMuteAudio(false);\n    }\n\n    if (options.video && this.videoMuted) {\n      videoUnMuted = true;\n      this.videoMuted = false;\n      this.toggleMuteVideo(false);\n    }\n\n    //REVISIT\n    if (audioUnMuted || videoUnMuted) {\n      return {\n        audio: audioUnMuted,\n        video: videoUnMuted\n      };\n      /*this.session.onunmute({\n        audio: audioUnMuted,\n        video: videoUnMuted\n      });*/\n    }\n  }},\n\n  hold: {writable: true, value: function hold () {\n    this.toggleMuteAudio(true);\n    this.toggleMuteVideo(true);\n  }},\n\n  unhold: {writable: true, value: function unhold () {\n    if (!this.audioMuted) {\n      this.toggleMuteAudio(false);\n    }\n\n    if (!this.videoMuted) {\n      this.toggleMuteVideo(false);\n    }\n  }},\n\n// Functions the application can use, but not the session\n  getLocalStreams: {writable: true, value: function getLocalStreams () {\n    var pc = this.peerConnection;\n    if (pc && pc.signalingState === 'closed') {\n      this.logger.warn('peerConnection is closed, getLocalStreams returning []');\n      return [];\n    }\n    return (pc.getLocalStreams && pc.getLocalStreams()) ||\n      pc.localStreams || [];\n  }},\n\n  getRemoteStreams: {writable: true, value: function getRemoteStreams () {\n    var pc = this.peerConnection;\n    if (pc && pc.signalingState === 'closed') {\n      this.logger.warn('peerConnection is closed, getRemoteStreams returning []');\n      return [];\n    }\n    return(pc.getRemoteStreams && pc.getRemoteStreams()) ||\n      pc.remoteStreams || [];\n  }},\n\n  render: {writable: true, value: function render (renderHint) {\n    renderHint = renderHint || (this.mediaHint && this.mediaHint.render);\n    if (!renderHint) {\n      return false;\n    }\n    var streamGetters = {\n      local: 'getLocalStreams',\n      remote: 'getRemoteStreams'\n    };\n    Object.keys(streamGetters).forEach(function (loc) {\n      var streamGetter = streamGetters[loc];\n      var streams = this[streamGetter]();\n      if (streams.length) {\n        SIP.WebRTC.MediaStreamManager.render(streams[0], renderHint[loc]);\n      }\n    }.bind(this));\n  }},\n\n// Internal functions\n  hasOffer: {writable: true, value: function hasOffer (where) {\n    var offerState = 'have-' + where + '-offer';\n    return this.peerConnection.signalingState === offerState;\n    // TODO consider signalingStates with 'pranswer'?\n  }},\n\n  createOfferOrAnswer: {writable: true, value: function createOfferOrAnswer (onSuccess, onFailure, constraints) {\n    var self = this;\n    var methodName;\n\n    function readySuccess () {\n      var sdp = self.peerConnection.localDescription.sdp;\n\n      sdp = SIP.Hacks.Chrome.needsExplicitlyInactiveSDP(sdp);\n      sdp = SIP.Hacks.AllBrowsers.unmaskDtls(sdp);\n      sdp = SIP.Hacks.Firefox.hasIncompatibleCLineWithSomeSIPEndpoints(sdp);\n\n      var sdpWrapper = {\n        type: methodName === 'createOffer' ? 'offer' : 'answer',\n        sdp: sdp\n      };\n\n      self.emit('getDescription', sdpWrapper);\n\n      self.ready = true;\n      onSuccess(sdpWrapper.sdp);\n    }\n\n    function onSetLocalDescriptionSuccess() {\n      if (self.peerConnection.iceGatheringState === 'complete' && (self.peerConnection.iceConnectionState === 'connected' || self.peerConnection.iceConnectionState === 'completed')) {\n        readySuccess();\n      } else {\n        self.onIceCompleted = function(pc) {\n          self.logger.log('ICE Gathering Completed');\n          self.onIceCompleted = undefined;\n          self.emit('iceComplete', pc);\n          readySuccess();\n        };\n        if (self.callOnIceCompleted) {\n          self.onIceCompleted();\n        }\n      }\n    }\n\n    function methodFailed (methodName, e) {\n      self.logger.error('peerConnection.' + methodName + ' failed');\n      self.logger.error(e);\n      self.ready = true;\n      onFailure(e);\n    }\n\n    self.ready = false;\n\n    methodName = self.hasOffer('remote') ? 'createAnswer' : 'createOffer';\n\n    self.peerConnection[methodName](\n      function(sessionDescription){\n        self.peerConnection.setLocalDescription(\n          sessionDescription,\n          onSetLocalDescriptionSuccess,\n          methodFailed.bind(null, 'setLocalDescription')\n        );\n      },\n      methodFailed.bind(null, methodName),\n      constraints\n    );\n  }},\n\n  addStream: {writable: true, value: function addStream (stream, onSuccess, onFailure) {\n    try {\n      this.peerConnection.addStream(stream);\n    } catch(e) {\n      this.logger.error('error adding stream');\n      this.logger.error(e);\n      onFailure(e);\n      return;\n    }\n\n    onSuccess();\n  }},\n\n  toggleMuteHelper: {writable: true, value: function toggleMuteHelper (trackGetter, mute) {\n    this.getLocalStreams().forEach(function (stream) {\n      stream[trackGetter]().forEach(function (track) {\n        track.enabled = !mute;\n      });\n    });\n  }},\n\n  toggleMuteAudio: {writable: true, value: function toggleMuteAudio (mute) {\n    this.toggleMuteHelper('getAudioTracks', mute);\n  }},\n\n  toggleMuteVideo: {writable: true, value: function toggleMuteVideo (mute) {\n    this.toggleMuteHelper('getVideoTracks', mute);\n  }}\n});\n\n// Return since it will be assigned to a variable.\nreturn MediaHandler;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/WebRTC/MediaHandler.js\n ** module id = 27\n ** module chunks = 0\n **/","/**\n * @fileoverview MediaStreamManager\n */\n\n/* MediaStreamManager\n * @class Manages the acquisition and release of MediaStreams.\n * @param {mediaHint} [defaultMediaHint] The mediaHint to use if none is provided to acquire()\n */\nmodule.exports = function (SIP) {\n\n// Default MediaStreamManager provides single-use streams created with getUserMedia\nvar MediaStreamManager = function MediaStreamManager (logger, defaultMediaHint) {\n  if (!SIP.WebRTC.isSupported()) {\n    throw new SIP.Exceptions.NotSupportedError('Media not supported');\n  }\n\n  var events = [\n    'userMediaRequest',\n    'userMedia',\n    'userMediaFailed'\n  ];\n  this.mediaHint = defaultMediaHint || {\n    constraints: {audio: true, video: true}\n  };\n\n  this.logger = logger;\n  this.initEvents(events);\n\n  // map of streams to acquisition manner:\n  // true -> passed in as mediaHint.stream\n  // false -> getUserMedia\n  this.acquisitions = {};\n};\nMediaStreamManager.streamId = function (stream) {\n  return stream.getAudioTracks().concat(stream.getVideoTracks())\n    .map(function trackId (track) {\n      return track.id;\n    })\n    .join('');\n};\n\nMediaStreamManager.render = function render (stream, elements) {\n  if (!elements) {\n    return false;\n  }\n\n  function attachAndPlay (element, stream) {\n    (window.attachMediaStream || attachMediaStream)(element, stream);\n    ensureMediaPlaying(element);\n  }\n\n  function attachMediaStream(element, stream) {\n    if (typeof element.src !== 'undefined') {\n      URL.revokeObjectURL(element.src);\n      element.src = URL.createObjectURL(stream);\n    } else if (typeof (element.srcObject || element.mozSrcObject) !== 'undefined') {\n      element.srcObject = element.mozSrcObject = stream;\n    } else {\n      return false;\n    }\n\n    return true;\n  }\n\n  function ensureMediaPlaying (mediaElement) {\n    var interval = 100;\n    mediaElement.ensurePlayingIntervalId = SIP.Timers.setInterval(function () {\n      if (mediaElement.paused) {\n        mediaElement.play();\n      }\n      else {\n        SIP.Timers.clearInterval(mediaElement.ensurePlayingIntervalId);\n      }\n    }, interval);\n  }\n\n  if (elements.video) {\n    if (elements.audio) {\n      elements.video.volume = 0;\n    }\n    attachAndPlay(elements.video, stream);\n  }\n  if (elements.audio) {\n    attachAndPlay(elements.audio, stream);\n  }\n};\n\nMediaStreamManager.prototype = Object.create(SIP.EventEmitter.prototype, {\n  'acquire': {value: function acquire (onSuccess, onFailure, mediaHint) {\n    mediaHint = Object.keys(mediaHint || {}).length ? mediaHint : this.mediaHint;\n\n    var saveSuccess = function (onSuccess, stream, isHintStream) {\n      var streamId = MediaStreamManager.streamId(stream);\n      this.acquisitions[streamId] = !!isHintStream;\n      onSuccess(stream);\n    }.bind(this, onSuccess);\n\n    if (mediaHint.stream) {\n      saveSuccess(mediaHint.stream, true);\n    } else {\n      // Fallback to audio/video enabled if no mediaHint can be found.\n      var constraints = mediaHint.constraints ||\n        (this.mediaHint && this.mediaHint.constraints) ||\n        {audio: true, video: true};\n\n      /*\n       * Make the call asynchronous, so that ICCs have a chance\n       * to define callbacks to `userMediaRequest`\n       */\n      SIP.Timers.setTimeout(function () {\n        this.emit('userMediaRequest', constraints);\n\n        var emitThenCall = function (eventName, callback) {\n          var callbackArgs = Array.prototype.slice.call(arguments, 2);\n          // Emit with all of the arguments from the real callback.\n          var newArgs = [eventName].concat(callbackArgs);\n\n          this.emit.apply(this, newArgs);\n\n          callback.apply(null, callbackArgs);\n        }.bind(this);\n\n        SIP.WebRTC.getUserMedia(\n          constraints,\n          emitThenCall.bind(this, 'userMedia', saveSuccess),\n          emitThenCall.bind(this, 'userMediaFailed', onFailure)\n        );\n      }.bind(this), 0);\n    }\n  }},\n\n  'release': {value: function release (stream) {\n    var streamId = MediaStreamManager.streamId(stream);\n    if (this.acquisitions[streamId] === false) {\n      stream.stop();\n    }\n    delete this.acquisitions[streamId];\n  }},\n});\n\n// Return since it will be assigned to a variable.\nreturn MediaStreamManager;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/WebRTC/MediaStreamManager.js\n ** module id = 28\n ** module chunks = 0\n **/","/**\n * @fileoverview WebRTC\n */\n\nmodule.exports = function (Utils, window, MediaHandler, MediaStreamManager) {\nvar WebRTC;\n\nWebRTC = {};\n\nWebRTC.MediaHandler = MediaHandler;\nWebRTC.MediaStreamManager = MediaStreamManager;\n\nvar _isSupported;\n\nWebRTC.isSupported = function () {\n  if (_isSupported !== undefined) {\n    return _isSupported;\n  }\n\n  WebRTC.MediaStream = Utils.getPrefixedProperty(window, 'MediaStream');\n  WebRTC.getUserMedia = Utils.getPrefixedProperty(window.navigator, 'getUserMedia');\n  WebRTC.RTCPeerConnection = Utils.getPrefixedProperty(window, 'RTCPeerConnection');\n  WebRTC.RTCSessionDescription = Utils.getPrefixedProperty(window, 'RTCSessionDescription');\n\n  if (WebRTC.getUserMedia && WebRTC.RTCPeerConnection && WebRTC.RTCSessionDescription) {\n    WebRTC.getUserMedia = WebRTC.getUserMedia.bind(window.navigator);\n    _isSupported = true;\n  }\n  else {\n    _isSupported = false;\n  }\n  return _isSupported;\n};\n\nreturn WebRTC;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/WebRTC.js\n ** module id = 29\n ** module chunks = 0\n **/","/**\n * @augments SIP\n * @class Class creating a SIP User Agent.\n * @param {function returning SIP.MediaHandler} [configuration.mediaHandlerFactory]\n *        A function will be invoked by each of the UA's Sessions to build the MediaHandler for that Session.\n *        If no (or a falsy) value is provided, each Session will use a default (WebRTC) MediaHandler.\n *\n * @param {Object} [configuration.media] gets passed to SIP.MediaHandler.getDescription as mediaHint\n */\nmodule.exports = function (SIP) {\nvar UA,\n  C = {\n    // UA status codes\n    STATUS_INIT :                0,\n    STATUS_READY:                1,\n    STATUS_USER_CLOSED:          2,\n    STATUS_NOT_READY:            3,\n\n    // UA error codes\n    CONFIGURATION_ERROR:  1,\n    NETWORK_ERROR:        2,\n\n    /* UA events and corresponding SIP Methods.\n     * Dynamically added to 'Allow' header field if the\n     * corresponding event handler is set.\n     */\n    EVENT_METHODS: {\n      'invite': 'INVITE',\n      'message': 'MESSAGE'\n    },\n\n    ALLOWED_METHODS: [\n      'ACK',\n      'CANCEL',\n      'BYE',\n      'OPTIONS',\n      'INFO',\n      'NOTIFY'\n    ],\n\n    ACCEPTED_BODY_TYPES: [\n      'application/sdp',\n      'application/dtmf-relay'\n    ],\n\n    MAX_FORWARDS: 70,\n    TAG_LENGTH: 10\n  };\n\nUA = function(configuration) {\n  var self = this,\n  events = [\n    'connecting',\n    'connected',\n    'disconnected',\n    'newTransaction',\n    'transactionDestroyed',\n    'registered',\n    'unregistered',\n    'registrationFailed',\n    'invite',\n    'newSession',\n    'message'\n  ], i, len;\n\n  // Helper function for forwarding events\n  function selfEmit(type) {\n    //registrationFailed handler is invoked with two arguments. Allow event handlers to be invoked with a variable no. of arguments\n    return self.emit.bind(self, type);\n  }\n\n  for (i = 0, len = C.ALLOWED_METHODS.length; i < len; i++) {\n    events.push(C.ALLOWED_METHODS[i].toLowerCase());\n  }\n\n  // Set Accepted Body Types\n  C.ACCEPTED_BODY_TYPES = C.ACCEPTED_BODY_TYPES.toString();\n\n  this.log = new SIP.LoggerFactory();\n  this.logger = this.getLogger('sip.ua');\n\n  this.cache = {\n    credentials: {}\n  };\n\n  this.configuration = {};\n  this.dialogs = {};\n\n  //User actions outside any session/dialog (MESSAGE)\n  this.applicants = {};\n\n  this.data = {};\n  this.sessions = {};\n  this.subscriptions = {};\n  this.transport = null;\n  this.contact = null;\n  this.status = C.STATUS_INIT;\n  this.error = null;\n  this.transactions = {\n    nist: {},\n    nict: {},\n    ist: {},\n    ict: {}\n  };\n\n  this.transportRecoverAttempts = 0;\n  this.transportRecoveryTimer = null;\n\n  Object.defineProperties(this, {\n    transactionsCount: {\n      get: function() {\n        var type,\n          transactions = ['nist','nict','ist','ict'],\n          count = 0;\n\n        for (type in transactions) {\n          count += Object.keys(this.transactions[transactions[type]]).length;\n        }\n\n        return count;\n      }\n    },\n\n    nictTransactionsCount: {\n      get: function() {\n        return Object.keys(this.transactions['nict']).length;\n      }\n    },\n\n    nistTransactionsCount: {\n      get: function() {\n        return Object.keys(this.transactions['nist']).length;\n      }\n    },\n\n    ictTransactionsCount: {\n      get: function() {\n        return Object.keys(this.transactions['ict']).length;\n      }\n    },\n\n    istTransactionsCount: {\n      get: function() {\n        return Object.keys(this.transactions['ist']).length;\n      }\n    }\n  });\n\n  /**\n   * Load configuration\n   *\n   * @throws {SIP.Exceptions.ConfigurationError}\n   * @throws {TypeError}\n   */\n\n  if(configuration === undefined) {\n    configuration = {};\n  } else if (typeof configuration === 'string' || configuration instanceof String) {\n    configuration = {\n      uri: configuration\n    };\n  }\n\n  // Apply log configuration if present\n  if (configuration.log) {\n    if (configuration.log.hasOwnProperty('builtinEnabled')) {\n      this.log.builtinEnabled = configuration.log.builtinEnabled;\n    }\n\n    if (configuration.log.hasOwnProperty('level')) {\n      this.log.level = configuration.log.level;\n    }\n\n    if (configuration.log.hasOwnProperty('connector')) {\n      this.log.connector = configuration.log.connector;\n    }\n  }\n\n  try {\n    this.loadConfig(configuration);\n    this.initEvents(events);\n  } catch(e) {\n    this.status = C.STATUS_NOT_READY;\n    this.error = C.CONFIGURATION_ERROR;\n    throw e;\n  }\n\n  // Initialize registerContext\n  this.registerContext = new SIP.RegisterContext(this);\n  this.registerContext.on('failed', selfEmit('registrationFailed'));\n  this.registerContext.on('registered', selfEmit('registered'));\n  this.registerContext.on('unregistered', selfEmit('unregistered'));\n\n  if(this.configuration.autostart) {\n    this.start();\n  }\n\n  if (typeof global.addEventListener === 'function') {\n    global.addEventListener('unload', this.stop.bind(this));\n  }\n};\nUA.prototype = new SIP.EventEmitter();\n\n//=================\n//  High Level API\n//=================\n\nUA.prototype.register = function(options) {\n  this.configuration.register = true;\n  this.registerContext.register(options);\n\n  return this;\n};\n\n/**\n * Unregister.\n *\n * @param {Boolean} [all] unregister all user bindings.\n *\n */\nUA.prototype.unregister = function(options) {\n  this.configuration.register = false;\n  this.registerContext.unregister(options);\n\n  return this;\n};\n\nUA.prototype.isRegistered = function() {\n  return this.registerContext.registered;\n};\n\n/**\n * Connection state.\n * @param {Boolean}\n */\nUA.prototype.isConnected = function() {\n  return this.transport ? this.transport.connected : false;\n};\n\n/**\n * Make an outgoing call.\n *\n * @param {String} target\n * @param {Object} views\n * @param {Object} [options.media] gets passed to SIP.MediaHandler.getDescription as mediaHint\n *\n * @throws {TypeError}\n *\n */\nUA.prototype.invite = function(target, options) {\n  options = options || {};\n  options = SIP.Utils.desugarSessionOptions(options);\n  SIP.Utils.optionsOverride(options, 'media', 'mediaConstraints', true, this.logger);\n\n  var context = new SIP.InviteClientContext(this, target, options);\n\n  if (this.isConnected()) {\n    context.invite({media: options.media});\n  } else {\n    this.once('connected', function() {\n      context.invite({media: options.media});\n    });\n  }\n  return context;\n};\n\nUA.prototype.subscribe = function(target, event, options) {\n  var sub = new SIP.Subscription(this, target, event, options);\n\n  if (this.isConnected()) {\n    sub.subscribe();\n  } else {\n    this.once('connected', function() {\n      sub.subscribe();\n    });\n  }\n  return sub;\n};\n\n/**\n * Send a message.\n *\n * @param {String} target\n * @param {String} body\n * @param {Object} [options]\n *\n * @throws {TypeError}\n *\n */\nUA.prototype.message = function(target, body, options) {\n  if (body === undefined) {\n    throw new TypeError('Not enough arguments');\n  }\n\n  options = options || {};\n  options.contentType = options.contentType || 'text/plain';\n  options.body = body;\n\n  var mes = new SIP.ClientContext(this, SIP.C.MESSAGE, target, options);\n\n  if (this.isConnected()) {\n    mes.send();\n  } else {\n    this.once('connected', function() {\n      mes.send();\n    });\n  }\n\n  return mes;\n};\n\nUA.prototype.request = function (method, target, options) {\n  var req = new SIP.ClientContext(this, method, target, options);\n\n  if (this.isConnected()) {\n    req.send();\n  } else {\n    this.once('connected', function() {\n      req.send();\n    });\n  }\n\n  return req;\n};\n\n/**\n * Gracefully close.\n *\n */\nUA.prototype.stop = function() {\n  var session, subscription, applicant,\n    ua = this;\n\n  function transactionsListener() {\n    if (ua.nistTransactionsCount === 0 && ua.nictTransactionsCount === 0) {\n        ua.off('transactionDestroyed', transactionsListener);\n        ua.transport.disconnect();\n    }\n  }\n\n  this.logger.log('user requested closure...');\n\n  if(this.status === C.STATUS_USER_CLOSED) {\n    this.logger.warn('UA already closed');\n    return this;\n  }\n\n  // Clear transportRecoveryTimer\n  SIP.Timers.clearTimeout(this.transportRecoveryTimer);\n\n  // Close registerContext\n  this.logger.log('closing registerContext');\n  this.registerContext.close();\n\n  // Run  _terminate_ on every Session\n  for(session in this.sessions) {\n    this.logger.log('closing session ' + session);\n    this.sessions[session].terminate();\n  }\n\n  //Run _close_ on every Subscription\n  for(subscription in this.subscriptions) {\n    this.logger.log('unsubscribing from subscription ' + subscription);\n    this.subscriptions[subscription].close();\n  }\n\n  // Run  _close_ on every applicant\n  for(applicant in this.applicants) {\n    this.applicants[applicant].close();\n  }\n\n  this.status = C.STATUS_USER_CLOSED;\n\n  /*\n   * If the remaining transactions are all INVITE transactions, there is no need to\n   * wait anymore because every session has already been closed by this method.\n   * - locally originated sessions where terminated (CANCEL or BYE)\n   * - remotely originated sessions where rejected (4XX) or terminated (BYE)\n   * Remaining INVITE transactions belong tho sessions that where answered. This are in\n   * 'accepted' state due to timers 'L' and 'M' defined in [RFC 6026]\n   */\n  if (this.nistTransactionsCount === 0 && this.nictTransactionsCount === 0) {\n    this.transport.disconnect();\n  } else {\n    this.on('transactionDestroyed', transactionsListener);\n  }\n\n  return this;\n};\n\n/**\n * Connect to the WS server if status = STATUS_INIT.\n * Resume UA after being closed.\n *\n */\nUA.prototype.start = function() {\n  var server;\n\n  this.logger.log('user requested startup...');\n  if (this.status === C.STATUS_INIT) {\n    server = this.getNextWsServer();\n    new SIP.Transport(this, server);\n  } else if(this.status === C.STATUS_USER_CLOSED) {\n    this.logger.log('resuming');\n    this.status = C.STATUS_READY;\n    this.transport.connect();\n  } else if (this.status === C.STATUS_READY) {\n    this.logger.log('UA is in READY status, not resuming');\n  } else {\n    this.logger.error('Connection is down. Auto-Recovery system is trying to connect');\n  }\n\n  return this;\n};\n\n/**\n * Normalize a string into a valid SIP request URI\n *\n * @param {String} target\n *\n * @returns {SIP.URI|undefined}\n */\nUA.prototype.normalizeTarget = function(target) {\n  return SIP.Utils.normalizeTarget(target, this.configuration.hostportParams);\n};\n\n\n//===============================\n//  Private (For internal use)\n//===============================\n\nUA.prototype.saveCredentials = function(credentials) {\n  this.cache.credentials[credentials.realm] = this.cache.credentials[credentials.realm] || {};\n  this.cache.credentials[credentials.realm][credentials.uri] = credentials;\n\n  return this;\n};\n\nUA.prototype.getCredentials = function(request) {\n  var realm, credentials;\n\n  realm = request.ruri.host;\n\n  if (this.cache.credentials[realm] && this.cache.credentials[realm][request.ruri]) {\n    credentials = this.cache.credentials[realm][request.ruri];\n    credentials.method = request.method;\n  }\n\n  return credentials;\n};\n\nUA.prototype.getLogger = function(category, label) {\n  return this.log.getLogger(category, label);\n};\n\n\n//==============================\n// Event Handlers\n//==============================\n\n/**\n * Transport Close event\n * @private\n * @event\n * @param {SIP.Transport} transport.\n */\nUA.prototype.onTransportClosed = function(transport) {\n  // Run _onTransportError_ callback on every client transaction using _transport_\n  var type, idx, length,\n    client_transactions = ['nict', 'ict', 'nist', 'ist'];\n\n  transport.server.status = SIP.Transport.C.STATUS_DISCONNECTED;\n  this.logger.log('connection state set to '+ SIP.Transport.C.STATUS_DISCONNECTED);\n\n  length = client_transactions.length;\n  for (type = 0; type < length; type++) {\n    for(idx in this.transactions[client_transactions[type]]) {\n      this.transactions[client_transactions[type]][idx].onTransportError();\n    }\n  }\n\n  // Close sessions if GRUU is not being used\n  if (!this.contact.pub_gruu) {\n    this.closeSessionsOnTransportError();\n  }\n\n};\n\n/**\n * Unrecoverable transport event.\n * Connection reattempt logic has been done and didn't success.\n * @private\n * @event\n * @param {SIP.Transport} transport.\n */\nUA.prototype.onTransportError = function(transport) {\n  var server;\n\n  this.logger.log('transport ' + transport.server.ws_uri + ' failed | connection state set to '+ SIP.Transport.C.STATUS_ERROR);\n\n  // Close sessions.\n  //Mark this transport as 'down'\n  transport.server.status = SIP.Transport.C.STATUS_ERROR;\n\n  this.emit('disconnected', {\n    transport: transport\n  });\n\n  // try the next transport if the UA isn't closed\n  if(this.status === C.STATUS_USER_CLOSED) {\n    return;\n  }\n\n  server = this.getNextWsServer();\n\n  if(server) {\n    new SIP.Transport(this, server);\n  }else {\n    this.closeSessionsOnTransportError();\n    if (!this.error || this.error !== C.NETWORK_ERROR) {\n      this.status = C.STATUS_NOT_READY;\n      this.error = C.NETWORK_ERROR;\n    }\n    // Transport Recovery process\n    this.recoverTransport();\n  }\n};\n\n/**\n * Transport connection event.\n * @private\n * @event\n * @param {SIP.Transport} transport.\n */\nUA.prototype.onTransportConnected = function(transport) {\n  this.transport = transport;\n\n  // Reset transport recovery counter\n  this.transportRecoverAttempts = 0;\n\n  transport.server.status = SIP.Transport.C.STATUS_READY;\n  this.logger.log('connection state set to '+ SIP.Transport.C.STATUS_READY);\n\n  if(this.status === C.STATUS_USER_CLOSED) {\n    return;\n  }\n\n  this.status = C.STATUS_READY;\n  this.error = null;\n\n  if(this.configuration.register) {\n    this.registerContext.onTransportConnected();\n  }\n\n  this.emit('connected', {\n    transport: transport\n  });\n};\n\n\n/**\n * Transport connecting event\n * @private\n * @param {SIP.Transport} transport.\n * #param {Integer} attempts.\n */\n  UA.prototype.onTransportConnecting = function(transport, attempts) {\n    this.emit('connecting', {\n      transport: transport,\n      attempts: attempts\n    });\n  };\n\n\n/**\n * new Transaction\n * @private\n * @param {SIP.Transaction} transaction.\n */\nUA.prototype.newTransaction = function(transaction) {\n  this.transactions[transaction.type][transaction.id] = transaction;\n  this.emit('newTransaction', {transaction: transaction});\n};\n\n\n/**\n * destroy Transaction\n * @private\n * @param {SIP.Transaction} transaction.\n */\nUA.prototype.destroyTransaction = function(transaction) {\n  delete this.transactions[transaction.type][transaction.id];\n  this.emit('transactionDestroyed', {\n    transaction: transaction\n  });\n};\n\n\n//=========================\n// receiveRequest\n//=========================\n\n/**\n * Request reception\n * @private\n * @param {SIP.IncomingRequest} request.\n */\nUA.prototype.receiveRequest = function(request) {\n  var dialog, session, message,\n    method = request.method,\n    transaction,\n    methodLower = request.method.toLowerCase(),\n    self = this;\n\n  function ruriMatches (uri) {\n    return uri && uri.user === request.ruri.user;\n  }\n\n  // Check that request URI points to us\n  if(!(ruriMatches(this.configuration.uri) ||\n       ruriMatches(this.contact.uri) ||\n       ruriMatches(this.contact.pub_gruu) ||\n       ruriMatches(this.contact.temp_gruu))) {\n    this.logger.warn('Request-URI does not point to us');\n    if (request.method !== SIP.C.ACK) {\n      request.reply_sl(404);\n    }\n    return;\n  }\n\n  // Check request URI scheme\n  if(request.ruri.scheme === SIP.C.SIPS) {\n    request.reply_sl(416);\n    return;\n  }\n\n  // Check transaction\n  if(SIP.Transactions.checkTransaction(this, request)) {\n    return;\n  }\n\n  /* RFC3261 12.2.2\n   * Requests that do not change in any way the state of a dialog may be\n   * received within a dialog (for example, an OPTIONS request).\n   * They are processed as if they had been received outside the dialog.\n   */\n  if(method === SIP.C.OPTIONS) {\n    new SIP.Transactions.NonInviteServerTransaction(request, this);\n    request.reply(200, null, [\n      'Allow: '+ SIP.Utils.getAllowedMethods(this),\n      'Accept: '+ C.ACCEPTED_BODY_TYPES\n    ]);\n  } else if (method === SIP.C.MESSAGE) {\n    if (!this.checkListener(methodLower)) {\n      // UA is not listening for this.  Reject immediately.\n      new SIP.Transactions.NonInviteServerTransaction(request, this);\n      request.reply(405, null, ['Allow: '+ SIP.Utils.getAllowedMethods(this)]);\n      return;\n    }\n    message = new SIP.ServerContext(this, request);\n    message.body = request.body;\n    message.content_type = request.getHeader('Content-Type') || 'text/plain';\n\n    request.reply(200, null);\n    this.emit('message', message);\n  } else if (method !== SIP.C.INVITE &&\n             method !== SIP.C.ACK) {\n    // Let those methods pass through to normal processing for now.\n    transaction = new SIP.ServerContext(this, request);\n  }\n\n  // Initial Request\n  if(!request.to_tag) {\n    switch(method) {\n      case SIP.C.INVITE:\n        var isMediaSupported = this.configuration.mediaHandlerFactory.isSupported;\n        if(!isMediaSupported || isMediaSupported()) {\n          session = new SIP.InviteServerContext(this, request)\n            .on('invite', function() {\n              self.emit('invite', this);\n            });\n        } else {\n          this.logger.warn('INVITE received but WebRTC is not supported');\n          request.reply(488);\n        }\n        break;\n      case SIP.C.BYE:\n        // Out of dialog BYE received\n        request.reply(481);\n        break;\n      case SIP.C.CANCEL:\n        session = this.findSession(request);\n        if(session) {\n          session.receiveRequest(request);\n        } else {\n          this.logger.warn('received CANCEL request for a non existent session');\n        }\n        break;\n      case SIP.C.ACK:\n        /* Absorb it.\n         * ACK request without a corresponding Invite Transaction\n         * and without To tag.\n         */\n        break;\n      default:\n        request.reply(405);\n        break;\n    }\n  }\n  // In-dialog request\n  else {\n    dialog = this.findDialog(request);\n\n    if(dialog) {\n      if (method === SIP.C.INVITE) {\n        new SIP.Transactions.InviteServerTransaction(request, this);\n      }\n      dialog.receiveRequest(request);\n    } else if (method === SIP.C.NOTIFY) {\n      session = this.findSession(request);\n      if(session) {\n        session.receiveRequest(request);\n      } else {\n        this.logger.warn('received NOTIFY request for a non existent session');\n        request.reply(481, 'Subscription does not exist');\n      }\n    }\n    /* RFC3261 12.2.2\n     * Request with to tag, but no matching dialog found.\n     * Exception: ACK for an Invite request for which a dialog has not\n     * been created.\n     */\n    else {\n      if(method !== SIP.C.ACK) {\n        request.reply(481);\n      }\n    }\n  }\n};\n\n//=================\n// Utils\n//=================\n\n/**\n * Get the session to which the request belongs to, if any.\n * @private\n * @param {SIP.IncomingRequest} request.\n * @returns {SIP.OutgoingSession|SIP.IncomingSession|null}\n */\nUA.prototype.findSession = function(request) {\n  return this.sessions[request.call_id + request.from_tag] ||\n          this.sessions[request.call_id + request.to_tag] ||\n          null;\n};\n\n/**\n * Get the dialog to which the request belongs to, if any.\n * @private\n * @param {SIP.IncomingRequest}\n * @returns {SIP.Dialog|null}\n */\nUA.prototype.findDialog = function(request) {\n  return this.dialogs[request.call_id + request.from_tag + request.to_tag] ||\n          this.dialogs[request.call_id + request.to_tag + request.from_tag] ||\n          null;\n};\n\n/**\n * Retrieve the next server to which connect.\n * @private\n * @returns {Object} ws_server\n */\nUA.prototype.getNextWsServer = function() {\n  // Order servers by weight\n  var idx, length, ws_server,\n    candidates = [];\n\n  length = this.configuration.wsServers.length;\n  for (idx = 0; idx < length; idx++) {\n    ws_server = this.configuration.wsServers[idx];\n\n    if (ws_server.status === SIP.Transport.C.STATUS_ERROR) {\n      continue;\n    } else if (candidates.length === 0) {\n      candidates.push(ws_server);\n    } else if (ws_server.weight > candidates[0].weight) {\n      candidates = [ws_server];\n    } else if (ws_server.weight === candidates[0].weight) {\n      candidates.push(ws_server);\n    }\n  }\n\n  idx = Math.floor(Math.random() * candidates.length);\n\n  return candidates[idx];\n};\n\n/**\n * Close all sessions on transport error.\n * @private\n */\nUA.prototype.closeSessionsOnTransportError = function() {\n  var idx;\n\n  // Run _transportError_ for every Session\n  for(idx in this.sessions) {\n    this.sessions[idx].onTransportError();\n  }\n  // Call registerContext _onTransportClosed_\n  this.registerContext.onTransportClosed();\n};\n\nUA.prototype.recoverTransport = function(ua) {\n  var idx, length, k, nextRetry, count, server;\n\n  ua = ua || this;\n  count = ua.transportRecoverAttempts;\n\n  length = ua.configuration.wsServers.length;\n  for (idx = 0; idx < length; idx++) {\n    ua.configuration.wsServers[idx].status = 0;\n  }\n\n  server = ua.getNextWsServer();\n\n  k = Math.floor((Math.random() * Math.pow(2,count)) +1);\n  nextRetry = k * ua.configuration.connectionRecoveryMinInterval;\n\n  if (nextRetry > ua.configuration.connectionRecoveryMaxInterval) {\n    this.logger.log('time for next connection attempt exceeds connectionRecoveryMaxInterval, resetting counter');\n    nextRetry = ua.configuration.connectionRecoveryMinInterval;\n    count = 0;\n  }\n\n  this.logger.log('next connection attempt in '+ nextRetry +' seconds');\n\n  this.transportRecoveryTimer = SIP.Timers.setTimeout(\n    function(){\n      ua.transportRecoverAttempts = count + 1;\n      new SIP.Transport(ua, server);\n    }, nextRetry * 1000);\n};\n\n/**\n * Configuration load.\n * @private\n * returns {Boolean}\n */\nUA.prototype.loadConfig = function(configuration) {\n  // Settings and default values\n  var parameter, value, checked_value, hostportParams, registrarServer,\n    settings = {\n      /* Host address\n      * Value to be set in Via sent_by and host part of Contact FQDN\n      */\n      viaHost: SIP.Utils.createRandomToken(12) + '.invalid',\n\n      uri: new SIP.URI('sip', 'anonymous.' + SIP.Utils.createRandomToken(6), 'anonymous.invalid', null, null),\n      wsServers: [{\n        scheme: 'WSS',\n        sip_uri: '<sip:edge.sip.onsip.com;transport=ws;lr>',\n        status: 0,\n        weight: 0,\n        ws_uri: 'wss://edge.sip.onsip.com'\n      }],\n\n      // Password\n      password: null,\n\n      // Registration parameters\n      registerExpires: 600,\n      register: true,\n      registrarServer: null,\n\n      // Transport related parameters\n      wsServerMaxReconnection: 3,\n      wsServerReconnectionTimeout: 4,\n\n      connectionRecoveryMinInterval: 2,\n      connectionRecoveryMaxInterval: 30,\n\n      usePreloadedRoute: false,\n\n      //string to be inserted into User-Agent request header\n      userAgentString: SIP.C.USER_AGENT,\n\n      // Session parameters\n      noAnswerTimeout: 60,\n      stunServers: ['stun:stun.l.google.com:19302'],\n      turnServers: [],\n\n      // Logging parameters\n      traceSip: false,\n\n      // Hacks\n      hackViaTcp: false,\n      hackIpInContact: false,\n      hackWssInTransport: false,\n\n      //autostarting\n      autostart: true,\n\n      //Reliable Provisional Responses\n      rel100: SIP.C.supported.UNSUPPORTED,\n\n      mediaHandlerFactory: SIP.WebRTC.MediaHandler.defaultFactory\n    };\n\n  // Pre-Configuration\n  function aliasUnderscored (parameter, logger) {\n    var underscored = parameter.replace(/([a-z][A-Z])/g, function (m) {\n      return m[0] + '_' + m[1].toLowerCase();\n    });\n\n    if (parameter === underscored) {\n      return;\n    }\n\n    var hasParameter = configuration.hasOwnProperty(parameter);\n    if (configuration.hasOwnProperty(underscored)) {\n      logger.warn(underscored + ' is deprecated, please use ' + parameter);\n      if (hasParameter) {\n        logger.warn(parameter + ' overriding ' + underscored);\n      }\n    }\n\n    configuration[parameter] = hasParameter ? configuration[parameter] : configuration[underscored];\n  }\n\n  // Check Mandatory parameters\n  for(parameter in UA.configuration_check.mandatory) {\n    aliasUnderscored(parameter, this.logger);\n    if(!configuration.hasOwnProperty(parameter)) {\n      throw new SIP.Exceptions.ConfigurationError(parameter);\n    } else {\n      value = configuration[parameter];\n      checked_value = UA.configuration_check.mandatory[parameter](value);\n      if (checked_value !== undefined) {\n        settings[parameter] = checked_value;\n      } else {\n        throw new SIP.Exceptions.ConfigurationError(parameter, value);\n      }\n    }\n  }\n\n  SIP.Utils.optionsOverride(configuration, 'rel100', 'reliable', true, this.logger, SIP.C.supported.UNSUPPORTED);\n\n  var emptyArraysAllowed = ['stunServers', 'turnServers'];\n\n  // Check Optional parameters\n  for(parameter in UA.configuration_check.optional) {\n    aliasUnderscored(parameter, this.logger);\n    if(configuration.hasOwnProperty(parameter)) {\n      value = configuration[parameter];\n\n      // If the parameter value is an empty array, but shouldn't be, apply its default value.\n      if (value instanceof Array && value.length === 0 && emptyArraysAllowed.indexOf(parameter) < 0) { continue; }\n\n      // If the parameter value is null, empty string, or undefined then apply its default value.\n      if(value === null || value === \"\" || value === undefined) { continue; }\n      // If it's a number with NaN value then also apply its default value.\n      // NOTE: JS does not allow \"value === NaN\", the following does the work:\n      else if(typeof(value) === 'number' && isNaN(value)) { continue; }\n\n      checked_value = UA.configuration_check.optional[parameter](value);\n      if (checked_value !== undefined) {\n        settings[parameter] = checked_value;\n      } else {\n        throw new SIP.Exceptions.ConfigurationError(parameter, value);\n      }\n    }\n  }\n\n  // Sanity Checks\n\n  // Connection recovery intervals\n  if(settings.connectionRecoveryMaxInterval < settings.connectionRecoveryMinInterval) {\n    throw new SIP.Exceptions.ConfigurationError('connectionRecoveryMaxInterval', settings.connectionRecoveryMaxInterval);\n  }\n\n  // Post Configuration Process\n\n  // Allow passing 0 number as displayName.\n  if (settings.displayName === 0) {\n    settings.displayName = '0';\n  }\n\n  // Instance-id for GRUU\n  if (!settings.instanceId) {\n    settings.instanceId = SIP.Utils.newUUID();\n  }\n\n  // sipjsId instance parameter. Static random tag of length 5\n  settings.sipjsId = SIP.Utils.createRandomToken(5);\n\n  // String containing settings.uri without scheme and user.\n  hostportParams = settings.uri.clone();\n  hostportParams.user = null;\n  settings.hostportParams = hostportParams.toString().replace(/^sip:/i, '');\n\n  /* Check whether authorizationUser is explicitly defined.\n   * Take 'settings.uri.user' value if not.\n   */\n  if (!settings.authorizationUser) {\n    settings.authorizationUser = settings.uri.user;\n  }\n\n  /* If no 'registrarServer' is set use the 'uri' value without user portion. */\n  if (!settings.registrarServer) {\n    registrarServer = settings.uri.clone();\n    registrarServer.user = null;\n    settings.registrarServer = registrarServer;\n  }\n\n  // User noAnswerTimeout\n  settings.noAnswerTimeout = settings.noAnswerTimeout * 1000;\n\n  // Via Host\n  if (settings.hackIpInContact) {\n    settings.viaHost = SIP.Utils.getRandomTestNetIP();\n  }\n\n  this.contact = {\n    pub_gruu: null,\n    temp_gruu: null,\n    uri: new SIP.URI('sip', SIP.Utils.createRandomToken(8), settings.viaHost, null, {transport: ((settings.hackWssInTransport)?'wss':'ws')}),\n    toString: function(options){\n      options = options || {};\n\n      var\n        anonymous = options.anonymous || null,\n        outbound = options.outbound || null,\n        contact = '<';\n\n      if (anonymous) {\n        contact += (this.temp_gruu || ('sip:anonymous@anonymous.invalid;transport='+(settings.hackWssInTransport)?'wss':'ws')).toString();\n      } else {\n        contact += (this.pub_gruu || this.uri).toString();\n      }\n\n      if (outbound) {\n        contact += ';ob';\n      }\n\n      contact += '>';\n\n      return contact;\n    }\n  };\n\n  // media overrides mediaConstraints\n  SIP.Utils.optionsOverride(settings, 'media', 'mediaConstraints', true, this.logger);\n\n  // Fill the value of the configuration_skeleton\n  for(parameter in settings) {\n    UA.configuration_skeleton[parameter].value = settings[parameter];\n  }\n\n  Object.defineProperties(this.configuration, UA.configuration_skeleton);\n\n  // Clean UA.configuration_skeleton\n  for(parameter in settings) {\n    UA.configuration_skeleton[parameter].value = '';\n  }\n\n  this.logger.log('configuration parameters after validation:');\n  for(parameter in settings) {\n    switch(parameter) {\n      case 'uri':\n      case 'registrarServer':\n      case 'mediaHandlerFactory':\n        this.logger.log('· ' + parameter + ': ' + settings[parameter]);\n        break;\n      case 'password':\n        this.logger.log('· ' + parameter + ': ' + 'NOT SHOWN');\n        break;\n      default:\n        this.logger.log('· ' + parameter + ': ' + JSON.stringify(settings[parameter]));\n    }\n  }\n\n  return;\n};\n\n/**\n * Configuration Object skeleton.\n * @private\n */\nUA.configuration_skeleton = (function() {\n  var idx,  parameter,\n    skeleton = {},\n    parameters = [\n      // Internal parameters\n      \"sipjsId\",\n      \"hostportParams\",\n\n      // Optional user configurable parameters\n      \"uri\",\n      \"wsServers\",\n      \"authorizationUser\",\n      \"connectionRecoveryMaxInterval\",\n      \"connectionRecoveryMinInterval\",\n      \"displayName\",\n      \"hackViaTcp\", // false.\n      \"hackIpInContact\", //false\n      \"hackWssInTransport\", //false\n      \"instanceId\",\n      \"noAnswerTimeout\", // 30 seconds.\n      \"password\",\n      \"registerExpires\", // 600 seconds.\n      \"registrarServer\",\n      \"reliable\",\n      \"rel100\",\n      \"userAgentString\", //SIP.C.USER_AGENT\n      \"autostart\",\n      \"stunServers\",\n      \"traceSip\",\n      \"turnServers\",\n      \"usePreloadedRoute\",\n      \"wsServerMaxReconnection\",\n      \"wsServerReconnectionTimeout\",\n      \"mediaHandlerFactory\",\n      \"media\",\n      \"mediaConstraints\",\n\n      // Post-configuration generated parameters\n      \"via_core_value\",\n      \"viaHost\"\n    ];\n\n  for(idx in parameters) {\n    parameter = parameters[idx];\n    skeleton[parameter] = {\n      value: '',\n      writable: false,\n      configurable: false\n    };\n  }\n\n  skeleton['register'] = {\n    value: '',\n    writable: true,\n    configurable: false\n  };\n\n  return skeleton;\n}());\n\n/**\n * Configuration checker.\n * @private\n * @return {Boolean}\n */\nUA.configuration_check = {\n  mandatory: {\n  },\n\n  optional: {\n\n    uri: function(uri) {\n      var parsed;\n\n      if (!(/^sip:/i).test(uri)) {\n        uri = SIP.C.SIP + ':' + uri;\n      }\n      parsed = SIP.URI.parse(uri);\n\n      if(!parsed) {\n        return;\n      } else if(!parsed.user) {\n        return;\n      } else {\n        return parsed;\n      }\n    },\n\n    //Note: this function used to call 'this.logger.error' but calling 'this' with anything here is invalid\n    wsServers: function(wsServers) {\n      var idx, length, url;\n\n      /* Allow defining wsServers parameter as:\n       *  String: \"host\"\n       *  Array of Strings: [\"host1\", \"host2\"]\n       *  Array of Objects: [{ws_uri:\"host1\", weight:1}, {ws_uri:\"host2\", weight:0}]\n       *  Array of Objects and Strings: [{ws_uri:\"host1\"}, \"host2\"]\n       */\n      if (typeof wsServers === 'string') {\n        wsServers = [{ws_uri: wsServers}];\n      } else if (wsServers instanceof Array) {\n        length = wsServers.length;\n        for (idx = 0; idx < length; idx++) {\n          if (typeof wsServers[idx] === 'string'){\n            wsServers[idx] = {ws_uri: wsServers[idx]};\n          }\n        }\n      } else {\n        return;\n      }\n\n      if (wsServers.length === 0) {\n        return false;\n      }\n\n      length = wsServers.length;\n      for (idx = 0; idx < length; idx++) {\n        if (!wsServers[idx].ws_uri) {\n          return;\n        }\n        if (wsServers[idx].weight && !Number(wsServers[idx].weight)) {\n          return;\n        }\n\n        url = SIP.Grammar.parse(wsServers[idx].ws_uri, 'absoluteURI');\n\n        if(url === -1) {\n          return;\n        } else if(url.scheme !== 'wss' && url.scheme !== 'ws') {\n          return;\n        } else {\n          wsServers[idx].sip_uri = '<sip:' + url.host + (url.port ? ':' + url.port : '') + ';transport=ws;lr>';\n\n          if (!wsServers[idx].weight) {\n            wsServers[idx].weight = 0;\n          }\n\n          wsServers[idx].status = 0;\n          wsServers[idx].scheme = url.scheme.toUpperCase();\n        }\n      }\n      return wsServers;\n    },\n\n    authorizationUser: function(authorizationUser) {\n      if(SIP.Grammar.parse('\"'+ authorizationUser +'\"', 'quoted_string') === -1) {\n        return;\n      } else {\n        return authorizationUser;\n      }\n    },\n\n    connectionRecoveryMaxInterval: function(connectionRecoveryMaxInterval) {\n      var value;\n      if(SIP.Utils.isDecimal(connectionRecoveryMaxInterval)) {\n        value = Number(connectionRecoveryMaxInterval);\n        if(value > 0) {\n          return value;\n        }\n      }\n    },\n\n    connectionRecoveryMinInterval: function(connectionRecoveryMinInterval) {\n      var value;\n      if(SIP.Utils.isDecimal(connectionRecoveryMinInterval)) {\n        value = Number(connectionRecoveryMinInterval);\n        if(value > 0) {\n          return value;\n        }\n      }\n    },\n\n    displayName: function(displayName) {\n      if(SIP.Grammar.parse('\"' + displayName + '\"', 'displayName') === -1) {\n        return;\n      } else {\n        return displayName;\n      }\n    },\n\n    hackViaTcp: function(hackViaTcp) {\n      if (typeof hackViaTcp === 'boolean') {\n        return hackViaTcp;\n      }\n    },\n\n    hackIpInContact: function(hackIpInContact) {\n      if (typeof hackIpInContact === 'boolean') {\n        return hackIpInContact;\n      }\n    },\n\n    hackWssInTransport: function(hackWssInTransport) {\n      if (typeof hackWssInTransport === 'boolean') {\n        return hackWssInTransport;\n      }\n    },\n\n    instanceId: function(instanceId) {\n      if(typeof instanceId !== 'string') {\n        return;\n      }\n\n      if ((/^uuid:/i.test(instanceId))) {\n        instanceId = instanceId.substr(5);\n      }\n\n      if(SIP.Grammar.parse(instanceId, 'uuid') === -1) {\n        return;\n      } else {\n        return instanceId;\n      }\n    },\n\n    noAnswerTimeout: function(noAnswerTimeout) {\n      var value;\n      if (SIP.Utils.isDecimal(noAnswerTimeout)) {\n        value = Number(noAnswerTimeout);\n        if (value > 0) {\n          return value;\n        }\n      }\n    },\n\n    password: function(password) {\n      return String(password);\n    },\n\n    rel100: function(rel100) {\n      if(rel100 === SIP.C.supported.REQUIRED) {\n        return SIP.C.supported.REQUIRED;\n      } else if (rel100 === SIP.C.supported.SUPPORTED) {\n        return SIP.C.supported.SUPPORTED;\n      } else  {\n        return SIP.C.supported.UNSUPPORTED;\n      }\n    },\n\n    register: function(register) {\n      if (typeof register === 'boolean') {\n        return register;\n      }\n    },\n\n    registerExpires: function(registerExpires) {\n      var value;\n      if (SIP.Utils.isDecimal(registerExpires)) {\n        value = Number(registerExpires);\n        if (value > 0) {\n          return value;\n        }\n      }\n    },\n\n    registrarServer: function(registrarServer) {\n      var parsed;\n\n      if(typeof registrarServer !== 'string') {\n        return;\n      }\n\n      if (!/^sip:/i.test(registrarServer)) {\n        registrarServer = SIP.C.SIP + ':' + registrarServer;\n      }\n      parsed = SIP.URI.parse(registrarServer);\n\n      if(!parsed) {\n        return;\n      } else if(parsed.user) {\n        return;\n      } else {\n        return parsed;\n      }\n    },\n\n    stunServers: function(stunServers) {\n      var idx, length, stun_server;\n\n      if (typeof stunServers === 'string') {\n        stunServers = [stunServers];\n      } else if (!(stunServers instanceof Array)) {\n        return;\n      }\n\n      length = stunServers.length;\n      for (idx = 0; idx < length; idx++) {\n        stun_server = stunServers[idx];\n        if (!(/^stuns?:/.test(stun_server))) {\n          stun_server = 'stun:' + stun_server;\n        }\n\n        if(SIP.Grammar.parse(stun_server, 'stun_URI') === -1) {\n          return;\n        } else {\n          stunServers[idx] = stun_server;\n        }\n      }\n      return stunServers;\n    },\n\n    traceSip: function(traceSip) {\n      if (typeof traceSip === 'boolean') {\n        return traceSip;\n      }\n    },\n\n    turnServers: function(turnServers) {\n      var idx, length, turn_server, url;\n\n      if (turnServers instanceof Array) {\n        // Do nothing\n      } else {\n        turnServers = [turnServers];\n      }\n\n      length = turnServers.length;\n      for (idx = 0; idx < length; idx++) {\n        turn_server = turnServers[idx];\n        //Backwards compatibility: Allow defining the turn_server url with the 'server' property.\n        if (turn_server.server) {\n          turn_server.urls = [turn_server.server];\n        }\n\n        if (!turn_server.urls || !turn_server.username || !turn_server.password) {\n          return;\n        }\n\n        if (!(turn_server.urls instanceof Array)) {\n          turn_server.urls = [turn_server.urls];\n        }\n\n        length = turn_server.urls.length;\n        for (idx = 0; idx < length; idx++) {\n          url = turn_server.urls[idx];\n\n          if (!(/^turns?:/.test(url))) {\n            url = 'turn:' + url;\n          }\n\n          if(SIP.Grammar.parse(url, 'turn_URI') === -1) {\n            return;\n          }\n        }\n      }\n      return turnServers;\n    },\n\n    userAgentString: function(userAgentString) {\n      if (typeof userAgentString === 'string') {\n        return userAgentString;\n      }\n    },\n\n    usePreloadedRoute: function(usePreloadedRoute) {\n      if (typeof usePreloadedRoute === 'boolean') {\n        return usePreloadedRoute;\n      }\n    },\n\n    wsServerMaxReconnection: function(wsServerMaxReconnection) {\n      var value;\n      if (SIP.Utils.isDecimal(wsServerMaxReconnection)) {\n        value = Number(wsServerMaxReconnection);\n        if (value > 0) {\n          return value;\n        }\n      }\n    },\n\n    wsServerReconnectionTimeout: function(wsServerReconnectionTimeout) {\n      var value;\n      if (SIP.Utils.isDecimal(wsServerReconnectionTimeout)) {\n        value = Number(wsServerReconnectionTimeout);\n        if (value > 0) {\n          return value;\n        }\n      }\n    },\n\n    autostart: function(autostart) {\n      if (typeof autostart === 'boolean') {\n        return autostart;\n      }\n    },\n\n    mediaHandlerFactory: function(mediaHandlerFactory) {\n      if (mediaHandlerFactory instanceof Function) {\n        return mediaHandlerFactory;\n      }\n    }\n  }\n};\n\nUA.C = C;\nSIP.UA = UA;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/UA.js\n ** module id = 30\n ** module chunks = 0\n **/","/**\n * @fileoverview Hacks - This file contains all of the things we\n * wish we didn't have to do, just for interop.  It is similar to\n * Utils, which provides actually useful and relevant functions for\n * a SIP library. Methods in this file are grouped by vendor, so\n * as to most easily track when particular hacks may not be necessary anymore.\n */\n\nmodule.exports = function (SIP) {\nvar Hacks = {\n  AllBrowsers: {\n    maskDtls: function (message) {\n      if (message.body) {\n        message.body = message.body.replace(/ UDP\\/TLS\\/RTP\\/SAVP/gmi, \" RTP/SAVP\");\n      }\n    },\n    unmaskDtls: function (sdp) {\n      /**\n       * Chrome does not handle DTLS correctly (Canaray does, but not production)\n       * keeping Chrome as SDES until DTLS is fixed (comment out 'is_opera' condition)\n       *\n       * UPDATE: May 21, 2014\n       * Chrome 35 now properly defaults to DTLS.  Only Opera remains using SDES\n       *\n       * UPDATE: 2014-09-24\n       * Opera now supports DTLS by default as well.\n       *\n       **/\n      return sdp.replace(/ RTP\\/SAVP/gmi, \" UDP/TLS/RTP/SAVP\");\n    }\n  },\n  Firefox: {\n    /* Condition to detect if hacks are applicable */\n    isFirefox: function () {\n      return window.mozRTCPeerConnection !== undefined;\n    },\n\n    cannotHandleExtraWhitespace: function (message) {\n      if (this.isFirefox() && message.body) {\n        message.body = message.body.replace(/ \\r\\n/g, \"\\r\\n\");\n      }\n    },\n\n    hasMissingCLineInSDP: function (sdp) {\n      /*\n       * This is a Firefox hack to insert valid sdp when getDescription is\n       * called with the constraint offerToReceiveVideo = false.\n       * We search for either a c-line at the top of the sdp above all\n       * m-lines. If that does not exist then we search for a c-line\n       * beneath each m-line. If it is missing a c-line, we insert\n       * a fake c-line with the ip address 0.0.0.0. This is then valid\n       * sdp and no media will be sent for that m-line.\n       *\n       * Valid SDP is:\n       * m=\n       * i=\n       * c=\n       */\n      var insertAt, mlines;\n      if (sdp.indexOf('c=') > sdp.indexOf('m=')) {\n\n        // Find all m= lines\n        mlines = sdp.match(/m=.*\\r\\n.*/g);\n        for (var i=0; i<mlines.length; i++) {\n\n          // If it has an i= line, check if the next line is the c= line\n          if (mlines[i].toString().search(/i=.*/) >= 0) {\n            insertAt = sdp.indexOf(mlines[i].toString())+mlines[i].toString().length;\n            if (sdp.substr(insertAt,2)!=='c=') {\n              sdp = sdp.substr(0,insertAt) + '\\r\\nc=IN IP4 0.0.0.0' + sdp.substr(insertAt);\n            }\n\n          // else add the C line if it's missing\n          } else if (mlines[i].toString().search(/c=.*/) < 0) {\n            insertAt = sdp.indexOf(mlines[i].toString().match(/.*/))+mlines[i].toString().match(/.*/).toString().length;\n            sdp = sdp.substr(0,insertAt) + '\\r\\nc=IN IP4 0.0.0.0' + sdp.substr(insertAt);\n          }\n        }\n      }\n      return sdp;\n    },\n\n    hasIncompatibleCLineWithSomeSIPEndpoints: function(sdp) {\n      /*\n       * Firefox appears to be following https://tools.ietf.org/html/rfc5245#section-9.1.1.1\n       * and using a c line IP address of 0.0.0.0. This is completely valid, however it is\n       * causing some endpoints (such as FreeSWITCH) to interpret the SDP as being on hold\n       * https://freeswitch.org/jira/browse/FS-6955. To get around this issue we pull the\n       * replace the c line with 1.1.1.1 which SIP clients do not interpret as hold.\n       * This makes the other endpoint believe that the call is not on hold and audio flows\n       * because ICE determines the media pathway (not the c line).\n       */\n      return sdp.replace(/(0\\.0\\.0\\.0)/gmi, SIP.Utils.getRandomTestNetIP());\n    }\n  },\n\n  Chrome: {\n    needsExplicitlyInactiveSDP: function (sdp) {\n      var sub, index;\n\n      if (Hacks.Firefox.isFirefox()) { // Fix this in Firefox before sending\n        index = sdp.indexOf('m=video 0');\n        if (index !== -1) {\n          sub = sdp.substr(index);\n          sub = sub.replace(/\\r\\nc=IN IP4.*\\r\\n$/,\n                            '\\r\\nc=IN IP4 0.0.0.0\\r\\na=inactive\\r\\n');\n          return sdp.substr(0, index) + sub;\n        }\n      }\n      return sdp;\n    },\n\n    getsConfusedAboutGUM: function (session) {\n      if (session.mediaHandler) {\n        session.mediaHandler.close();\n      }\n    }\n  }\n};\n\nreturn Hacks;\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/Hacks.js\n ** module id = 31\n ** module chunks = 0\n **/","/**\n * @fileoverview Incoming SIP Message Sanity Check\n */\n\n/**\n * SIP message sanity check.\n * @augments SIP\n * @function\n * @param {SIP.IncomingMessage} message\n * @param {SIP.UA} ua\n * @param {SIP.Transport} transport\n * @returns {Boolean}\n */\nmodule.exports = function (SIP) {\nvar sanityCheck,\n logger,\n message, ua, transport,\n requests = [],\n responses = [],\n all = [];\n\n/*\n * Sanity Check for incoming Messages\n *\n * Requests:\n *  - _rfc3261_8_2_2_1_ Receive a Request with a non supported URI scheme\n *  - _rfc3261_16_3_4_ Receive a Request already sent by us\n *   Does not look at via sent-by but at sipjsId, which is inserted as\n *   a prefix in all initial requests generated by the ua\n *  - _rfc3261_18_3_request_ Body Content-Length\n *  - _rfc3261_8_2_2_2_ Merged Requests\n *\n * Responses:\n *  - _rfc3261_8_1_3_3_ Multiple Via headers\n *  - _rfc3261_18_1_2_ sent-by mismatch\n *  - _rfc3261_18_3_response_ Body Content-Length\n *\n * All:\n *  - Minimum headers in a SIP message\n */\n\n// Sanity Check functions for requests\nfunction rfc3261_8_2_2_1() {\n  if(!message.ruri || message.ruri.scheme !== 'sip') {\n    reply(416);\n    return false;\n  }\n}\n\nfunction rfc3261_16_3_4() {\n  if(!message.to_tag) {\n    if(message.call_id.substr(0, 5) === ua.configuration.sipjsId) {\n      reply(482);\n      return false;\n    }\n  }\n}\n\nfunction rfc3261_18_3_request() {\n  var len = SIP.Utils.str_utf8_length(message.body),\n  contentLength = message.getHeader('content-length');\n\n  if(len < contentLength) {\n    reply(400);\n    return false;\n  }\n}\n\nfunction rfc3261_8_2_2_2() {\n  var tr, idx,\n    fromTag = message.from_tag,\n    call_id = message.call_id,\n    cseq = message.cseq;\n\n  if(!message.to_tag) {\n    if(message.method === SIP.C.INVITE) {\n      tr = ua.transactions.ist[message.via_branch];\n      if(tr) {\n        return;\n      } else {\n        for(idx in ua.transactions.ist) {\n          tr = ua.transactions.ist[idx];\n          if(tr.request.from_tag === fromTag && tr.request.call_id === call_id && tr.request.cseq === cseq) {\n            reply(482);\n            return false;\n          }\n        }\n      }\n    } else {\n      tr = ua.transactions.nist[message.via_branch];\n      if(tr) {\n        return;\n      } else {\n        for(idx in ua.transactions.nist) {\n          tr = ua.transactions.nist[idx];\n          if(tr.request.from_tag === fromTag && tr.request.call_id === call_id && tr.request.cseq === cseq) {\n            reply(482);\n            return false;\n          }\n        }\n      }\n    }\n  }\n}\n\n// Sanity Check functions for responses\nfunction rfc3261_8_1_3_3() {\n  if(message.getHeaders('via').length > 1) {\n    logger.warn('More than one Via header field present in the response. Dropping the response');\n    return false;\n  }\n}\n\nfunction rfc3261_18_1_2() {\n  var viaHost = ua.configuration.viaHost;\n  if(message.via.host !== viaHost || message.via.port !== undefined) {\n    logger.warn('Via sent-by in the response does not match UA Via host value. Dropping the response');\n    return false;\n  }\n}\n\nfunction rfc3261_18_3_response() {\n  var\n    len = SIP.Utils.str_utf8_length(message.body),\n    contentLength = message.getHeader('content-length');\n\n    if(len < contentLength) {\n      logger.warn('Message body length is lower than the value in Content-Length header field. Dropping the response');\n      return false;\n    }\n}\n\n// Sanity Check functions for requests and responses\nfunction minimumHeaders() {\n  var\n    mandatoryHeaders = ['from', 'to', 'call_id', 'cseq', 'via'],\n    idx = mandatoryHeaders.length;\n\n  while(idx--) {\n    if(!message.hasHeader(mandatoryHeaders[idx])) {\n      logger.warn('Missing mandatory header field : '+ mandatoryHeaders[idx] +'. Dropping the response');\n      return false;\n    }\n  }\n}\n\n// Reply\nfunction reply(status_code) {\n  var to,\n    response = \"SIP/2.0 \" + status_code + \" \" + SIP.C.REASON_PHRASE[status_code] + \"\\r\\n\",\n    vias = message.getHeaders('via'),\n    length = vias.length,\n    idx = 0;\n\n  for(idx; idx < length; idx++) {\n    response += \"Via: \" + vias[idx] + \"\\r\\n\";\n  }\n\n  to = message.getHeader('To');\n\n  if(!message.to_tag) {\n    to += ';tag=' + SIP.Utils.newTag();\n  }\n\n  response += \"To: \" + to + \"\\r\\n\";\n  response += \"From: \" + message.getHeader('From') + \"\\r\\n\";\n  response += \"Call-ID: \" + message.call_id + \"\\r\\n\";\n  response += \"CSeq: \" + message.cseq + \" \" + message.method + \"\\r\\n\";\n  response += \"\\r\\n\";\n\n  transport.send(response);\n}\n\nrequests.push(rfc3261_8_2_2_1);\nrequests.push(rfc3261_16_3_4);\nrequests.push(rfc3261_18_3_request);\nrequests.push(rfc3261_8_2_2_2);\n\nresponses.push(rfc3261_8_1_3_3);\nresponses.push(rfc3261_18_1_2);\nresponses.push(rfc3261_18_3_response);\n\nall.push(minimumHeaders);\n\nsanityCheck = function(m, u, t) {\n  var len, pass;\n\n  message = m;\n  ua = u;\n  transport = t;\n\n  logger = ua.getLogger('sip.sanitycheck');\n\n  len = all.length;\n  while(len--) {\n    pass = all[len](message);\n    if(pass === false) {\n      return false;\n    }\n  }\n\n  if(message instanceof SIP.IncomingRequest) {\n    len = requests.length;\n    while(len--) {\n      pass = requests[len](message);\n      if(pass === false) {\n        return false;\n      }\n    }\n  }\n\n  else if(message instanceof SIP.IncomingResponse) {\n    len = responses.length;\n    while(len--) {\n      pass = responses[len](message);\n      if(pass === false) {\n        return false;\n      }\n    }\n  }\n\n  //Everything is OK\n  return true;\n};\n\nSIP.sanityCheck = sanityCheck;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/SanityCheck.js\n ** module id = 32\n ** module chunks = 0\n **/","\n/**\n * @fileoverview SIP Digest Authentication\n */\n\n/**\n * SIP Digest Authentication.\n * @augments SIP.\n * @function Digest Authentication\n * @param {SIP.UA} ua\n */\nmodule.exports = function (Utils) {\nvar DigestAuthentication;\n\nDigestAuthentication = function(ua) {\n  this.logger = ua.getLogger('sipjs.digestauthentication');\n  this.username = ua.configuration.authorizationUser;\n  this.password = ua.configuration.password;\n  this.cnonce = null;\n  this.nc = 0;\n  this.ncHex = '00000000';\n  this.response = null;\n};\n\n\n/**\n* Performs Digest authentication given a SIP request and the challenge\n* received in a response to that request.\n* Returns true if credentials were successfully generated, false otherwise.\n*\n* @param {SIP.OutgoingRequest} request\n* @param {Object} challenge\n*/\nDigestAuthentication.prototype.authenticate = function(request, challenge) {\n  // Inspect and validate the challenge.\n\n  this.algorithm = challenge.algorithm;\n  this.realm = challenge.realm;\n  this.nonce = challenge.nonce;\n  this.opaque = challenge.opaque;\n  this.stale = challenge.stale;\n\n  if (this.algorithm) {\n    if (this.algorithm !== 'MD5') {\n      this.logger.warn('challenge with Digest algorithm different than \"MD5\", authentication aborted');\n      return false;\n    }\n  } else {\n    this.algorithm = 'MD5';\n  }\n\n  if (! this.realm) {\n    this.logger.warn('challenge without Digest realm, authentication aborted');\n    return false;\n  }\n\n  if (! this.nonce) {\n    this.logger.warn('challenge without Digest nonce, authentication aborted');\n    return false;\n  }\n\n  // 'qop' can contain a list of values (Array). Let's choose just one.\n  if (challenge.qop) {\n    if (challenge.qop.indexOf('auth') > -1) {\n      this.qop = 'auth';\n    } else if (challenge.qop.indexOf('auth-int') > -1) {\n      this.qop = 'auth-int';\n    } else {\n      // Otherwise 'qop' is present but does not contain 'auth' or 'auth-int', so abort here.\n      this.logger.warn('challenge without Digest qop different than \"auth\" or \"auth-int\", authentication aborted');\n      return false;\n    }\n  } else {\n    this.qop = null;\n  }\n\n  // Fill other attributes.\n\n  this.method = request.method;\n  this.uri = request.ruri;\n  this.cnonce = Utils.createRandomToken(12);\n  this.nc += 1;\n  this.updateNcHex();\n\n  // nc-value = 8LHEX. Max value = 'FFFFFFFF'.\n  if (this.nc === 4294967296) {\n    this.nc = 1;\n    this.ncHex = '00000001';\n  }\n\n  // Calculate the Digest \"response\" value.\n  this.calculateResponse();\n\n  return true;\n};\n\n\n/**\n* Generate Digest 'response' value.\n* @private\n*/\nDigestAuthentication.prototype.calculateResponse = function() {\n  var ha1, ha2;\n\n  // HA1 = MD5(A1) = MD5(username:realm:password)\n  ha1 = Utils.calculateMD5(this.username + \":\" + this.realm + \":\" + this.password);\n\n  if (this.qop === 'auth') {\n    // HA2 = MD5(A2) = MD5(method:digestURI)\n    ha2 = Utils.calculateMD5(this.method + \":\" + this.uri);\n    // response = MD5(HA1:nonce:nonceCount:credentialsNonce:qop:HA2)\n    this.response = Utils.calculateMD5(ha1 + \":\" + this.nonce + \":\" + this.ncHex + \":\" + this.cnonce + \":auth:\" + ha2);\n\n  } else if (this.qop === 'auth-int') {\n    // HA2 = MD5(A2) = MD5(method:digestURI:MD5(entityBody))\n    ha2 = Utils.calculateMD5(this.method + \":\" + this.uri + \":\" + Utils.calculateMD5(this.body ? this.body : \"\"));\n    // response = MD5(HA1:nonce:nonceCount:credentialsNonce:qop:HA2)\n    this.response = Utils.calculateMD5(ha1 + \":\" + this.nonce + \":\" + this.ncHex + \":\" + this.cnonce + \":auth-int:\" + ha2);\n\n  } else if (this.qop === null) {\n    // HA2 = MD5(A2) = MD5(method:digestURI)\n    ha2 = Utils.calculateMD5(this.method + \":\" + this.uri);\n    // response = MD5(HA1:nonce:HA2)\n    this.response = Utils.calculateMD5(ha1 + \":\" + this.nonce + \":\" + ha2);\n  }\n};\n\n\n/**\n* Return the Proxy-Authorization or WWW-Authorization header value.\n*/\nDigestAuthentication.prototype.toString = function() {\n  var auth_params = [];\n\n  if (! this.response) {\n    throw new Error('response field does not exist, cannot generate Authorization header');\n  }\n\n  auth_params.push('algorithm=' + this.algorithm);\n  auth_params.push('username=\"' + this.username + '\"');\n  auth_params.push('realm=\"' + this.realm + '\"');\n  auth_params.push('nonce=\"' + this.nonce + '\"');\n  auth_params.push('uri=\"' + this.uri + '\"');\n  auth_params.push('response=\"' + this.response + '\"');\n  if (this.opaque) {\n    auth_params.push('opaque=\"' + this.opaque + '\"');\n  }\n  if (this.qop) {\n    auth_params.push('qop=' + this.qop);\n    auth_params.push('cnonce=\"' + this.cnonce + '\"');\n    auth_params.push('nc=' + this.ncHex);\n  }\n\n  return 'Digest ' + auth_params.join(', ');\n};\n\n\n/**\n* Generate the 'nc' value as required by Digest in this.ncHex by reading this.nc.\n* @private\n*/\nDigestAuthentication.prototype.updateNcHex = function() {\n  var hex = Number(this.nc).toString(16);\n  this.ncHex = '00000000'.substr(0, 8-hex.length) + hex;\n};\n\nreturn DigestAuthentication;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/DigestAuthentication.js\n ** module id = 33\n ** module chunks = 0\n **/","/* jshint ignore:start */\nmodule.exports = function(SIP) {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.offset   = offset;\n    this.line     = line;\n    this.column   = column;\n\n    this.name     = \"SyntaxError\";\n  }\n\n  peg$subclass(SyntaxError, Error);\n\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n\n        peg$FAILED = {},\n\n        peg$startRuleIndices = { Contact: 118, Name_Addr_Header: 155, Record_Route: 175, Request_Response: 81, SIP_URI: 45, Subscription_State: 182, Via: 190, absoluteURI: 84, Call_ID: 117, Content_Disposition: 129, Content_Length: 134, Content_Type: 135, CSeq: 145, displayName: 121, Event: 148, From: 150, host: 52, Max_Forwards: 153, Proxy_Authenticate: 156, quoted_string: 40, Refer_To: 177, stun_URI: 209, To: 188, turn_URI: 216, uuid: 219, WWW_Authenticate: 205, challenge: 157 },\n        peg$startRuleIndex   = 118,\n\n        peg$consts = [\n          \"\\r\\n\",\n          { type: \"literal\", value: \"\\r\\n\", description: \"\\\"\\\\r\\\\n\\\"\" },\n          /^[0-9]/,\n          { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n          /^[a-zA-Z]/,\n          { type: \"class\", value: \"[a-zA-Z]\", description: \"[a-zA-Z]\" },\n          /^[0-9a-fA-F]/,\n          { type: \"class\", value: \"[0-9a-fA-F]\", description: \"[0-9a-fA-F]\" },\n          /^[\\0-\\xFF]/,\n          { type: \"class\", value: \"[\\\\0-\\\\xFF]\", description: \"[\\\\0-\\\\xFF]\" },\n          /^[\"]/,\n          { type: \"class\", value: \"[\\\"]\", description: \"[\\\"]\" },\n          \" \",\n          { type: \"literal\", value: \" \", description: \"\\\" \\\"\" },\n          \"\\t\",\n          { type: \"literal\", value: \"\\t\", description: \"\\\"\\\\t\\\"\" },\n          /^[a-zA-Z0-9]/,\n          { type: \"class\", value: \"[a-zA-Z0-9]\", description: \"[a-zA-Z0-9]\" },\n          \";\",\n          { type: \"literal\", value: \";\", description: \"\\\";\\\"\" },\n          \"/\",\n          { type: \"literal\", value: \"/\", description: \"\\\"/\\\"\" },\n          \"?\",\n          { type: \"literal\", value: \"?\", description: \"\\\"?\\\"\" },\n          \":\",\n          { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n          \"@\",\n          { type: \"literal\", value: \"@\", description: \"\\\"@\\\"\" },\n          \"&\",\n          { type: \"literal\", value: \"&\", description: \"\\\"&\\\"\" },\n          \"=\",\n          { type: \"literal\", value: \"=\", description: \"\\\"=\\\"\" },\n          \"+\",\n          { type: \"literal\", value: \"+\", description: \"\\\"+\\\"\" },\n          \"$\",\n          { type: \"literal\", value: \"$\", description: \"\\\"$\\\"\" },\n          \",\",\n          { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n          \"-\",\n          { type: \"literal\", value: \"-\", description: \"\\\"-\\\"\" },\n          \"_\",\n          { type: \"literal\", value: \"_\", description: \"\\\"_\\\"\" },\n          \".\",\n          { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n          \"!\",\n          { type: \"literal\", value: \"!\", description: \"\\\"!\\\"\" },\n          \"~\",\n          { type: \"literal\", value: \"~\", description: \"\\\"~\\\"\" },\n          \"*\",\n          { type: \"literal\", value: \"*\", description: \"\\\"*\\\"\" },\n          \"'\",\n          { type: \"literal\", value: \"'\", description: \"\\\"'\\\"\" },\n          \"(\",\n          { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n          \")\",\n          { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n          peg$FAILED,\n          \"%\",\n          { type: \"literal\", value: \"%\", description: \"\\\"%\\\"\" },\n          function(escaped) {return escaped.join(''); },\n          null,\n          [],\n          function() {return \" \"; },\n          function() {return ':'; },\n          function() {\n                              return text(); },\n          /^[!-~]/,\n          { type: \"class\", value: \"[!-~]\", description: \"[!-~]\" },\n          /^[\\x80-\\uFFFF]/,\n          { type: \"class\", value: \"[\\\\x80-\\\\uFFFF]\", description: \"[\\\\x80-\\\\uFFFF]\" },\n          /^[\\x80-\\xBF]/,\n          { type: \"class\", value: \"[\\\\x80-\\\\xBF]\", description: \"[\\\\x80-\\\\xBF]\" },\n          /^[a-f]/,\n          { type: \"class\", value: \"[a-f]\", description: \"[a-f]\" },\n          \"`\",\n          { type: \"literal\", value: \"`\", description: \"\\\"`\\\"\" },\n          function() {\n                            return text(); },\n          \"<\",\n          { type: \"literal\", value: \"<\", description: \"\\\"<\\\"\" },\n          \">\",\n          { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n          \"\\\\\",\n          { type: \"literal\", value: \"\\\\\", description: \"\\\"\\\\\\\\\\\"\" },\n          \"[\",\n          { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n          \"]\",\n          { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n          \"{\",\n          { type: \"literal\", value: \"{\", description: \"\\\"{\\\"\" },\n          \"}\",\n          { type: \"literal\", value: \"}\", description: \"\\\"}\\\"\" },\n          function() {return \"*\"; },\n          function() {return \"/\"; },\n          function() {return \"=\"; },\n          function() {return \"(\"; },\n          function() {return \")\"; },\n          function() {return \">\"; },\n          function() {return \"<\"; },\n          function() {return \",\"; },\n          function() {return \";\"; },\n          function() {return \":\"; },\n          function() {return \"\\\"\"; },\n          /^[!-']/,\n          { type: \"class\", value: \"[!-']\", description: \"[!-']\" },\n          /^[*-[]/,\n          { type: \"class\", value: \"[*-[]\", description: \"[*-[]\" },\n          /^[\\]-~]/,\n          { type: \"class\", value: \"[\\\\]-~]\", description: \"[\\\\]-~]\" },\n          function(contents) {\n                                  return contents; },\n          /^[#-[]/,\n          { type: \"class\", value: \"[#-[]\", description: \"[#-[]\" },\n          /^[\\0-\\t]/,\n          { type: \"class\", value: \"[\\\\0-\\\\t]\", description: \"[\\\\0-\\\\t]\" },\n          /^[\\x0B-\\f]/,\n          { type: \"class\", value: \"[\\\\x0B-\\\\f]\", description: \"[\\\\x0B-\\\\f]\" },\n          /^[\\x0E-]/,\n          { type: \"class\", value: \"[\\\\x0E-]\", description: \"[\\\\x0E-]\" },\n          function() {\n                                  data.uri = new SIP.URI(data.scheme, data.user, data.host, data.port);\n                                  delete data.scheme;\n                                  delete data.user;\n                                  delete data.host;\n                                  delete data.host_type;\n                                  delete data.port;\n                                },\n          function() {\n                                  data.uri = new SIP.URI(data.scheme, data.user, data.host, data.port, data.uri_params, data.uri_headers);\n                                  delete data.scheme;\n                                  delete data.user;\n                                  delete data.host;\n                                  delete data.host_type;\n                                  delete data.port;\n                                  delete data.uri_params;\n\n                                  if (options.startRule === 'SIP_URI') { data = data.uri;}\n                                },\n          \"sips\",\n          { type: \"literal\", value: \"sips\", description: \"\\\"sips\\\"\" },\n          \"sip\",\n          { type: \"literal\", value: \"sip\", description: \"\\\"sip\\\"\" },\n          function(uri_scheme) {\n                              data.scheme = uri_scheme.toLowerCase(); },\n          function() {\n                              data.user = decodeURIComponent(text().slice(0, -1));},\n          function() {\n                              data.password = text(); },\n          function() {\n                              data.host = text().toLowerCase();\n                              return data.host; },\n          function() {\n                            data.host_type = 'domain';\n                            return text(); },\n          /^[a-zA-Z0-9_\\-]/,\n          { type: \"class\", value: \"[a-zA-Z0-9_\\\\-]\", description: \"[a-zA-Z0-9_\\\\-]\" },\n          /^[a-zA-Z0-9\\-]/,\n          { type: \"class\", value: \"[a-zA-Z0-9\\\\-]\", description: \"[a-zA-Z0-9\\\\-]\" },\n          function() {\n                              data.host_type = 'IPv6';\n                              return text(); },\n          \"::\",\n          { type: \"literal\", value: \"::\", description: \"\\\"::\\\"\" },\n          function() {\n                            data.host_type = 'IPv6';\n                            return text(); },\n          function() {\n                              data.host_type = 'IPv4';\n                              return text(); },\n          \"25\",\n          { type: \"literal\", value: \"25\", description: \"\\\"25\\\"\" },\n          /^[0-5]/,\n          { type: \"class\", value: \"[0-5]\", description: \"[0-5]\" },\n          \"2\",\n          { type: \"literal\", value: \"2\", description: \"\\\"2\\\"\" },\n          /^[0-4]/,\n          { type: \"class\", value: \"[0-4]\", description: \"[0-4]\" },\n          \"1\",\n          { type: \"literal\", value: \"1\", description: \"\\\"1\\\"\" },\n          /^[1-9]/,\n          { type: \"class\", value: \"[1-9]\", description: \"[1-9]\" },\n          function(port) {\n                              port = parseInt(port.join(''));\n                              data.port = port;\n                              return port; },\n          \"transport=\",\n          { type: \"literal\", value: \"transport=\", description: \"\\\"transport=\\\"\" },\n          \"udp\",\n          { type: \"literal\", value: \"udp\", description: \"\\\"udp\\\"\" },\n          \"tcp\",\n          { type: \"literal\", value: \"tcp\", description: \"\\\"tcp\\\"\" },\n          \"sctp\",\n          { type: \"literal\", value: \"sctp\", description: \"\\\"sctp\\\"\" },\n          \"tls\",\n          { type: \"literal\", value: \"tls\", description: \"\\\"tls\\\"\" },\n          function(transport) {\n                                if(!data.uri_params) data.uri_params={};\n                                data.uri_params['transport'] = transport.toLowerCase(); },\n          \"user=\",\n          { type: \"literal\", value: \"user=\", description: \"\\\"user=\\\"\" },\n          \"phone\",\n          { type: \"literal\", value: \"phone\", description: \"\\\"phone\\\"\" },\n          \"ip\",\n          { type: \"literal\", value: \"ip\", description: \"\\\"ip\\\"\" },\n          function(user) {\n                                if(!data.uri_params) data.uri_params={};\n                                data.uri_params['user'] = user.toLowerCase(); },\n          \"method=\",\n          { type: \"literal\", value: \"method=\", description: \"\\\"method=\\\"\" },\n          function(method) {\n                                if(!data.uri_params) data.uri_params={};\n                                data.uri_params['method'] = method; },\n          \"ttl=\",\n          { type: \"literal\", value: \"ttl=\", description: \"\\\"ttl=\\\"\" },\n          function(ttl) {\n                                if(!data.params) data.params={};\n                                data.params['ttl'] = ttl; },\n          \"maddr=\",\n          { type: \"literal\", value: \"maddr=\", description: \"\\\"maddr=\\\"\" },\n          function(maddr) {\n                                if(!data.uri_params) data.uri_params={};\n                                data.uri_params['maddr'] = maddr; },\n          \"lr\",\n          { type: \"literal\", value: \"lr\", description: \"\\\"lr\\\"\" },\n          function() {\n                                if(!data.uri_params) data.uri_params={};\n                                data.uri_params['lr'] = undefined; },\n          function(param, value) {\n                                if(!data.uri_params) data.uri_params = {};\n                                if (value === null){\n                                  value = undefined;\n                                }\n                                else {\n                                  value = value[1];\n                                }\n                                data.uri_params[param.toLowerCase()] = value && value.toLowerCase();},\n          function(pname) {return pname.join(''); },\n          function(pvalue) {return pvalue.join(''); },\n          function(hname, hvalue) {\n                                hname = hname.join('').toLowerCase();\n                                hvalue = hvalue.join('');\n                                if(!data.uri_headers) data.uri_headers = {};\n                                if (!data.uri_headers[hname]) {\n                                  data.uri_headers[hname] = [hvalue];\n                                } else {\n                                  data.uri_headers[hname].push(hvalue);\n                                }},\n          function() {\n                                // lots of tests fail if this isn't guarded...\n                                if (options.startRule === 'Refer_To') {\n                                  data.uri = new SIP.URI(data.scheme, data.user, data.host, data.port, data.uri_params, data.uri_headers);\n                                  delete data.scheme;\n                                  delete data.user;\n                                  delete data.host;\n                                  delete data.host_type;\n                                  delete data.port;\n                                  delete data.uri_params;\n                                }\n                              },\n          \"//\",\n          { type: \"literal\", value: \"//\", description: \"\\\"//\\\"\" },\n          function() {\n                              data.scheme= text(); },\n          { type: \"literal\", value: \"SIP\", description: \"\\\"SIP\\\"\" },\n          function() {\n                              data.sip_version = text(); },\n          \"INVITE\",\n          { type: \"literal\", value: \"INVITE\", description: \"\\\"INVITE\\\"\" },\n          \"ACK\",\n          { type: \"literal\", value: \"ACK\", description: \"\\\"ACK\\\"\" },\n          \"VXACH\",\n          { type: \"literal\", value: \"VXACH\", description: \"\\\"VXACH\\\"\" },\n          \"OPTIONS\",\n          { type: \"literal\", value: \"OPTIONS\", description: \"\\\"OPTIONS\\\"\" },\n          \"BYE\",\n          { type: \"literal\", value: \"BYE\", description: \"\\\"BYE\\\"\" },\n          \"CANCEL\",\n          { type: \"literal\", value: \"CANCEL\", description: \"\\\"CANCEL\\\"\" },\n          \"REGISTER\",\n          { type: \"literal\", value: \"REGISTER\", description: \"\\\"REGISTER\\\"\" },\n          \"SUBSCRIBE\",\n          { type: \"literal\", value: \"SUBSCRIBE\", description: \"\\\"SUBSCRIBE\\\"\" },\n          \"NOTIFY\",\n          { type: \"literal\", value: \"NOTIFY\", description: \"\\\"NOTIFY\\\"\" },\n          \"REFER\",\n          { type: \"literal\", value: \"REFER\", description: \"\\\"REFER\\\"\" },\n          function() {\n\n                              data.method = text();\n                              return data.method; },\n          function(status_code) {\n                            data.status_code = parseInt(status_code.join('')); },\n          function() {\n                            data.reason_phrase = text(); },\n          function() {\n                        data = text(); },\n          function() {\n                                  var idx, length;\n                                  length = data.multi_header.length;\n                                  for (idx = 0; idx < length; idx++) {\n                                    if (data.multi_header[idx].parsed === null) {\n                                      data = null;\n                                      break;\n                                    }\n                                  }\n                                  if (data !== null) {\n                                    data = data.multi_header;\n                                  } else {\n                                    data = -1;\n                                  }},\n          function() {\n                                  var header;\n                                  if(!data.multi_header) data.multi_header = [];\n                                  try {\n                                    header = new SIP.NameAddrHeader(data.uri, data.displayName, data.params);\n                                    delete data.uri;\n                                    delete data.displayName;\n                                    delete data.params;\n                                  } catch(e) {\n                                    header = null;\n                                  }\n                                  data.multi_header.push( { 'position': peg$currPos,\n                                                            'offset': offset(),\n                                                            'parsed': header\n                                                          });},\n          function(displayName) {\n                                  displayName = text().trim();\n                                  if (displayName[0] === '\\\"') {\n                                    displayName = displayName.substring(1, displayName.length-1);\n                                  }\n                                  data.displayName = displayName; },\n          \"q\",\n          { type: \"literal\", value: \"q\", description: \"\\\"q\\\"\" },\n          function(q) {\n                                  if(!data.params) data.params = {};\n                                  data.params['q'] = q; },\n          \"expires\",\n          { type: \"literal\", value: \"expires\", description: \"\\\"expires\\\"\" },\n          function(expires) {\n                                  if(!data.params) data.params = {};\n                                  data.params['expires'] = expires; },\n          function(delta_seconds) {\n                                  return parseInt(delta_seconds.join('')); },\n          \"0\",\n          { type: \"literal\", value: \"0\", description: \"\\\"0\\\"\" },\n          function() {\n                                  return parseFloat(text()); },\n          function(param, value) {\n                                  if(!data.params) data.params = {};\n                                  if (value === null){\n                                    value = undefined;\n                                  }\n                                  else {\n                                    value = value[1];\n                                  }\n                                  data.params[param.toLowerCase()] = value;},\n          \"render\",\n          { type: \"literal\", value: \"render\", description: \"\\\"render\\\"\" },\n          \"session\",\n          { type: \"literal\", value: \"session\", description: \"\\\"session\\\"\" },\n          \"icon\",\n          { type: \"literal\", value: \"icon\", description: \"\\\"icon\\\"\" },\n          \"alert\",\n          { type: \"literal\", value: \"alert\", description: \"\\\"alert\\\"\" },\n          function() {\n                                      if (options.startRule === 'Content_Disposition') {\n                                        data.type = text().toLowerCase();\n                                      }\n                                    },\n          \"handling\",\n          { type: \"literal\", value: \"handling\", description: \"\\\"handling\\\"\" },\n          \"optional\",\n          { type: \"literal\", value: \"optional\", description: \"\\\"optional\\\"\" },\n          \"required\",\n          { type: \"literal\", value: \"required\", description: \"\\\"required\\\"\" },\n          function(length) {\n                                  data = parseInt(length.join('')); },\n          function() {\n                                  data = text(); },\n          \"text\",\n          { type: \"literal\", value: \"text\", description: \"\\\"text\\\"\" },\n          \"image\",\n          { type: \"literal\", value: \"image\", description: \"\\\"image\\\"\" },\n          \"audio\",\n          { type: \"literal\", value: \"audio\", description: \"\\\"audio\\\"\" },\n          \"video\",\n          { type: \"literal\", value: \"video\", description: \"\\\"video\\\"\" },\n          \"application\",\n          { type: \"literal\", value: \"application\", description: \"\\\"application\\\"\" },\n          \"message\",\n          { type: \"literal\", value: \"message\", description: \"\\\"message\\\"\" },\n          \"multipart\",\n          { type: \"literal\", value: \"multipart\", description: \"\\\"multipart\\\"\" },\n          \"x-\",\n          { type: \"literal\", value: \"x-\", description: \"\\\"x-\\\"\" },\n          function(cseq_value) {\n                            data.value=parseInt(cseq_value.join('')); },\n          function(expires) {data = expires; },\n          function(event_type) {\n                                 data.event = event_type.toLowerCase(); },\n          function() {\n                          var tag = data.tag;\n                            data = new SIP.NameAddrHeader(data.uri, data.displayName, data.params);\n                            if (tag) {data.setParam('tag',tag)}\n                          },\n          \"tag\",\n          { type: \"literal\", value: \"tag\", description: \"\\\"tag\\\"\" },\n          function(tag) {data.tag = tag; },\n          function(forwards) {\n                            data = parseInt(forwards.join('')); },\n          function(min_expires) {data = min_expires; },\n          function() {\n                                  data = new SIP.NameAddrHeader(data.uri, data.displayName, data.params);\n                                },\n          \"digest\",\n          { type: \"literal\", value: \"Digest\", description: \"\\\"Digest\\\"\" },\n          \"realm\",\n          { type: \"literal\", value: \"realm\", description: \"\\\"realm\\\"\" },\n          function(realm) { data.realm = realm; },\n          \"domain\",\n          { type: \"literal\", value: \"domain\", description: \"\\\"domain\\\"\" },\n          \"nonce\",\n          { type: \"literal\", value: \"nonce\", description: \"\\\"nonce\\\"\" },\n          function(nonce) { data.nonce=nonce; },\n          \"opaque\",\n          { type: \"literal\", value: \"opaque\", description: \"\\\"opaque\\\"\" },\n          function(opaque) { data.opaque=opaque; },\n          \"stale\",\n          { type: \"literal\", value: \"stale\", description: \"\\\"stale\\\"\" },\n          \"true\",\n          { type: \"literal\", value: \"true\", description: \"\\\"true\\\"\" },\n          function() { data.stale=true; },\n          \"false\",\n          { type: \"literal\", value: \"false\", description: \"\\\"false\\\"\" },\n          function() { data.stale=false; },\n          \"algorithm\",\n          { type: \"literal\", value: \"algorithm\", description: \"\\\"algorithm\\\"\" },\n          \"md5\",\n          { type: \"literal\", value: \"MD5\", description: \"\\\"MD5\\\"\" },\n          \"md5-sess\",\n          { type: \"literal\", value: \"MD5-sess\", description: \"\\\"MD5-sess\\\"\" },\n          function(algorithm) {\n                                data.algorithm=algorithm.toUpperCase(); },\n          \"qop\",\n          { type: \"literal\", value: \"qop\", description: \"\\\"qop\\\"\" },\n          \"auth-int\",\n          { type: \"literal\", value: \"auth-int\", description: \"\\\"auth-int\\\"\" },\n          \"auth\",\n          { type: \"literal\", value: \"auth\", description: \"\\\"auth\\\"\" },\n          function(qop_value) {\n                                  data.qop || (data.qop=[]);\n                                  data.qop.push(qop_value.toLowerCase()); },\n          function(rack_value) {\n                            data.value=parseInt(rack_value.join('')); },\n          function() {\n                            var idx, length;\n                            length = data.multi_header.length;\n                            for (idx = 0; idx < length; idx++) {\n                              if (data.multi_header[idx].parsed === null) {\n                                data = null;\n                                break;\n                              }\n                            }\n                            if (data !== null) {\n                              data = data.multi_header;\n                            } else {\n                              data = -1;\n                            }},\n          function() {\n                            var header;\n                            if(!data.multi_header) data.multi_header = [];\n                            try {\n                              header = new SIP.NameAddrHeader(data.uri, data.displayName, data.params);\n                              delete data.uri;\n                              delete data.displayName;\n                              delete data.params;\n                            } catch(e) {\n                              header = null;\n                            }\n                            data.multi_header.push( { 'position': peg$currPos,\n                                                      'offset': offset(),\n                                                      'parsed': header\n                                                    });},\n          function() {\n                        data = new SIP.NameAddrHeader(data.uri, data.displayName, data.params);\n                      },\n          function(rseq_value) {\n                            data.value=parseInt(rseq_value.join('')); },\n          \"active\",\n          { type: \"literal\", value: \"active\", description: \"\\\"active\\\"\" },\n          \"pending\",\n          { type: \"literal\", value: \"pending\", description: \"\\\"pending\\\"\" },\n          \"terminated\",\n          { type: \"literal\", value: \"terminated\", description: \"\\\"terminated\\\"\" },\n          function() {\n                                  data.state = text(); },\n          \"reason\",\n          { type: \"literal\", value: \"reason\", description: \"\\\"reason\\\"\" },\n          function(reason) {\n                                  if (typeof reason !== 'undefined') data.reason = reason; },\n          function(expires) {\n                                  if (typeof expires !== 'undefined') data.expires = expires; },\n          \"retry_after\",\n          { type: \"literal\", value: \"retry_after\", description: \"\\\"retry_after\\\"\" },\n          function(retry_after) {\n                                  if (typeof retry_after !== 'undefined') data.retry_after = retry_after; },\n          \"deactivated\",\n          { type: \"literal\", value: \"deactivated\", description: \"\\\"deactivated\\\"\" },\n          \"probation\",\n          { type: \"literal\", value: \"probation\", description: \"\\\"probation\\\"\" },\n          \"rejected\",\n          { type: \"literal\", value: \"rejected\", description: \"\\\"rejected\\\"\" },\n          \"timeout\",\n          { type: \"literal\", value: \"timeout\", description: \"\\\"timeout\\\"\" },\n          \"giveup\",\n          { type: \"literal\", value: \"giveup\", description: \"\\\"giveup\\\"\" },\n          \"noresource\",\n          { type: \"literal\", value: \"noresource\", description: \"\\\"noresource\\\"\" },\n          \"invariant\",\n          { type: \"literal\", value: \"invariant\", description: \"\\\"invariant\\\"\" },\n          function() {\n                        var tag = data.tag;\n                          data = new SIP.NameAddrHeader(data.uri, data.displayName, data.params);\n                          if (tag) {data.setParam('tag',tag)}\n                        },\n          \"ttl\",\n          { type: \"literal\", value: \"ttl\", description: \"\\\"ttl\\\"\" },\n          function(via_ttl_value) {\n                                data.ttl = via_ttl_value; },\n          \"maddr\",\n          { type: \"literal\", value: \"maddr\", description: \"\\\"maddr\\\"\" },\n          function(via_maddr) {\n                                data.maddr = via_maddr; },\n          \"received\",\n          { type: \"literal\", value: \"received\", description: \"\\\"received\\\"\" },\n          function(via_received) {\n                                data.received = via_received; },\n          \"branch\",\n          { type: \"literal\", value: \"branch\", description: \"\\\"branch\\\"\" },\n          function(via_branch) {\n                                data.branch = via_branch; },\n          \"rport\",\n          { type: \"literal\", value: \"rport\", description: \"\\\"rport\\\"\" },\n          function() {\n                                if(typeof response_port !== 'undefined')\n                                  data.rport = response_port.join(''); },\n          function(via_protocol) {\n                                data.protocol = via_protocol; },\n          { type: \"literal\", value: \"UDP\", description: \"\\\"UDP\\\"\" },\n          { type: \"literal\", value: \"TCP\", description: \"\\\"TCP\\\"\" },\n          { type: \"literal\", value: \"TLS\", description: \"\\\"TLS\\\"\" },\n          { type: \"literal\", value: \"SCTP\", description: \"\\\"SCTP\\\"\" },\n          function(via_transport) {\n                                data.transport = via_transport; },\n          function() {\n                                data.host = text(); },\n          function(via_sent_by_port) {\n                                data.port = parseInt(via_sent_by_port.join('')); },\n          function(ttl) {\n                                return parseInt(ttl.join('')); },\n          \"stuns\",\n          { type: \"literal\", value: \"stuns\", description: \"\\\"stuns\\\"\" },\n          \"stun\",\n          { type: \"literal\", value: \"stun\", description: \"\\\"stun\\\"\" },\n          function(scheme) {\n                                data.scheme = scheme; },\n          function(host) {\n                                data.host = host; },\n          function() {\n                                return text(); },\n          \"?transport=\",\n          { type: \"literal\", value: \"?transport=\", description: \"\\\"?transport=\\\"\" },\n          \"turns\",\n          { type: \"literal\", value: \"turns\", description: \"\\\"turns\\\"\" },\n          \"turn\",\n          { type: \"literal\", value: \"turn\", description: \"\\\"turn\\\"\" },\n          function() {\n                                data.transport = transport; },\n          function() {\n                            data = text(); }\n        ],\n\n        peg$bytecode = [\n          peg$decode(\". \\\"\\\"2 3!\"),\n          peg$decode(\"0\\\"\\\"\\\"1!3#\"),\n          peg$decode(\"0$\\\"\\\"1!3%\"),\n          peg$decode(\"0&\\\"\\\"1!3'\"),\n          peg$decode(\"7'*# \\\"7(\"),\n          peg$decode(\"0(\\\"\\\"1!3)\"),\n          peg$decode(\"0*\\\"\\\"1!3+\"),\n          peg$decode(\".,\\\"\\\"2,3-\"),\n          peg$decode(\"..\\\"\\\"2.3/\"),\n          peg$decode(\"00\\\"\\\"1!31\"),\n          peg$decode(\".2\\\"\\\"2233*\\x89 \\\".4\\\"\\\"2435*} \\\".6\\\"\\\"2637*q \\\".8\\\"\\\"2839*e \\\".:\\\"\\\"2:3;*Y \\\".<\\\"\\\"2<3=*M \\\".>\\\"\\\"2>3?*A \\\".@\\\"\\\"2@3A*5 \\\".B\\\"\\\"2B3C*) \\\".D\\\"\\\"2D3E\"),\n          peg$decode(\"7)*# \\\"7,\"),\n          peg$decode(\".F\\\"\\\"2F3G*} \\\".H\\\"\\\"2H3I*q \\\".J\\\"\\\"2J3K*e \\\".L\\\"\\\"2L3M*Y \\\".N\\\"\\\"2N3O*M \\\".P\\\"\\\"2P3Q*A \\\".R\\\"\\\"2R3S*5 \\\".T\\\"\\\"2T3U*) \\\".V\\\"\\\"2V3W\"),\n          peg$decode(\"!!.Y\\\"\\\"2Y3Z+7$7#+-%7#+#%'#%$## X$\\\"# X\\\"# X+' 4!6[!! %\"),\n          peg$decode(\"!! ]7$,#&7$\\\"+-$7 +#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+@$ ]7$+&$,#&7$\\\"\\\"\\\" X+'%4\\\"6^\\\" %$\\\"# X\\\"# X\"),\n          peg$decode(\"7.*# \\\" \\\\\"),\n          peg$decode(\"! ]7'*# \\\"7(,)&7'*# \\\"7(\\\"+A$.8\\\"\\\"2839+1%7/+'%4#6_# %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"! ]72+&$,#&72\\\"\\\"\\\" X+s$ ]! ]7.,#&7.\\\"+-$72+#%'\\\"%$\\\"# X\\\"# X,@&! ]7.,#&7.\\\"+-$72+#%'\\\"%$\\\"# X\\\"# X\\\"+'%4\\\"6`\\\" %$\\\"# X\\\"# X\"),\n          peg$decode(\"0a\\\"\\\"1!3b*# \\\"73\"),\n          peg$decode(\"0c\\\"\\\"1!3d\"),\n          peg$decode(\"0e\\\"\\\"1!3f\"),\n          peg$decode(\"7!*) \\\"0g\\\"\\\"1!3h\"),\n          peg$decode(\"! ]7)*\\x95 \\\".F\\\"\\\"2F3G*\\x89 \\\".J\\\"\\\"2J3K*} \\\".L\\\"\\\"2L3M*q \\\".Y\\\"\\\"2Y3Z*e \\\".P\\\"\\\"2P3Q*Y \\\".H\\\"\\\"2H3I*M \\\".@\\\"\\\"2@3A*A \\\".i\\\"\\\"2i3j*5 \\\".R\\\"\\\"2R3S*) \\\".N\\\"\\\"2N3O+\\x9E$,\\x9B&7)*\\x95 \\\".F\\\"\\\"2F3G*\\x89 \\\".J\\\"\\\"2J3K*} \\\".L\\\"\\\"2L3M*q \\\".Y\\\"\\\"2Y3Z*e \\\".P\\\"\\\"2P3Q*Y \\\".H\\\"\\\"2H3I*M \\\".@\\\"\\\"2@3A*A \\\".i\\\"\\\"2i3j*5 \\\".R\\\"\\\"2R3S*) \\\".N\\\"\\\"2N3O\\\"\\\"\\\" X+& 4!6k! %\"),\n          peg$decode(\"! ]7)*\\x89 \\\".F\\\"\\\"2F3G*} \\\".L\\\"\\\"2L3M*q \\\".Y\\\"\\\"2Y3Z*e \\\".P\\\"\\\"2P3Q*Y \\\".H\\\"\\\"2H3I*M \\\".@\\\"\\\"2@3A*A \\\".i\\\"\\\"2i3j*5 \\\".R\\\"\\\"2R3S*) \\\".N\\\"\\\"2N3O+\\x92$,\\x8F&7)*\\x89 \\\".F\\\"\\\"2F3G*} \\\".L\\\"\\\"2L3M*q \\\".Y\\\"\\\"2Y3Z*e \\\".P\\\"\\\"2P3Q*Y \\\".H\\\"\\\"2H3I*M \\\".@\\\"\\\"2@3A*A \\\".i\\\"\\\"2i3j*5 \\\".R\\\"\\\"2R3S*) \\\".N\\\"\\\"2N3O\\\"\\\"\\\" X+& 4!6k! %\"),\n          peg$decode(\".T\\\"\\\"2T3U*\\xE3 \\\".V\\\"\\\"2V3W*\\xD7 \\\".l\\\"\\\"2l3m*\\xCB \\\".n\\\"\\\"2n3o*\\xBF \\\".:\\\"\\\"2:3;*\\xB3 \\\".D\\\"\\\"2D3E*\\xA7 \\\".2\\\"\\\"2233*\\x9B \\\".8\\\"\\\"2839*\\x8F \\\".p\\\"\\\"2p3q*\\x83 \\\"7&*} \\\".4\\\"\\\"2435*q \\\".r\\\"\\\"2r3s*e \\\".t\\\"\\\"2t3u*Y \\\".6\\\"\\\"2637*M \\\".>\\\"\\\"2>3?*A \\\".v\\\"\\\"2v3w*5 \\\".x\\\"\\\"2x3y*) \\\"7'*# \\\"7(\"),\n          peg$decode(\"! ]7)*\\u012B \\\".F\\\"\\\"2F3G*\\u011F \\\".J\\\"\\\"2J3K*\\u0113 \\\".L\\\"\\\"2L3M*\\u0107 \\\".Y\\\"\\\"2Y3Z*\\xFB \\\".P\\\"\\\"2P3Q*\\xEF \\\".H\\\"\\\"2H3I*\\xE3 \\\".@\\\"\\\"2@3A*\\xD7 \\\".i\\\"\\\"2i3j*\\xCB \\\".R\\\"\\\"2R3S*\\xBF \\\".N\\\"\\\"2N3O*\\xB3 \\\".T\\\"\\\"2T3U*\\xA7 \\\".V\\\"\\\"2V3W*\\x9B \\\".l\\\"\\\"2l3m*\\x8F \\\".n\\\"\\\"2n3o*\\x83 \\\".8\\\"\\\"2839*w \\\".p\\\"\\\"2p3q*k \\\"7&*e \\\".4\\\"\\\"2435*Y \\\".r\\\"\\\"2r3s*M \\\".t\\\"\\\"2t3u*A \\\".6\\\"\\\"2637*5 \\\".v\\\"\\\"2v3w*) \\\".x\\\"\\\"2x3y+\\u0134$,\\u0131&7)*\\u012B \\\".F\\\"\\\"2F3G*\\u011F \\\".J\\\"\\\"2J3K*\\u0113 \\\".L\\\"\\\"2L3M*\\u0107 \\\".Y\\\"\\\"2Y3Z*\\xFB \\\".P\\\"\\\"2P3Q*\\xEF \\\".H\\\"\\\"2H3I*\\xE3 \\\".@\\\"\\\"2@3A*\\xD7 \\\".i\\\"\\\"2i3j*\\xCB \\\".R\\\"\\\"2R3S*\\xBF \\\".N\\\"\\\"2N3O*\\xB3 \\\".T\\\"\\\"2T3U*\\xA7 \\\".V\\\"\\\"2V3W*\\x9B \\\".l\\\"\\\"2l3m*\\x8F \\\".n\\\"\\\"2n3o*\\x83 \\\".8\\\"\\\"2839*w \\\".p\\\"\\\"2p3q*k \\\"7&*e \\\".4\\\"\\\"2435*Y \\\".r\\\"\\\"2r3s*M \\\".t\\\"\\\"2t3u*A \\\".6\\\"\\\"2637*5 \\\".v\\\"\\\"2v3w*) \\\".x\\\"\\\"2x3y\\\"\\\"\\\" X+& 4!6k! %\"),\n          peg$decode(\"!7/+A$.P\\\"\\\"2P3Q+1%7/+'%4#6z# %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!7/+A$.4\\\"\\\"2435+1%7/+'%4#6{# %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!7/+A$.>\\\"\\\"2>3?+1%7/+'%4#6|# %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!7/+A$.T\\\"\\\"2T3U+1%7/+'%4#6}# %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!7/+A$.V\\\"\\\"2V3W+1%7/+'%4#6~# %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!.n\\\"\\\"2n3o+1$7/+'%4\\\"6\\\" %$\\\"# X\\\"# X\"),\n          peg$decode(\"!7/+7$.l\\\"\\\"2l3m+'%4\\\"6\\x80\\\" %$\\\"# X\\\"# X\"),\n          peg$decode(\"!7/+A$.D\\\"\\\"2D3E+1%7/+'%4#6\\x81# %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!7/+A$.2\\\"\\\"2233+1%7/+'%4#6\\x82# %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!7/+A$.8\\\"\\\"2839+1%7/+'%4#6\\x83# %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!7/+1$7&+'%4\\\"6\\x84\\\" %$\\\"# X\\\"# X\"),\n          peg$decode(\"!7&+1$7/+'%4\\\"6\\x84\\\" %$\\\"# X\\\"# X\"),\n          peg$decode(\"!7=+W$ ]7G*) \\\"7K*# \\\"7F,/&7G*) \\\"7K*# \\\"7F\\\"+-%7>+#%'#%$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"0\\x85\\\"\\\"1!3\\x86*A \\\"0\\x87\\\"\\\"1!3\\x88*5 \\\"0\\x89\\\"\\\"1!3\\x8A*) \\\"73*# \\\"7.\"),\n          peg$decode(\"!7/+Y$7&+O% ]7J*# \\\"7K,)&7J*# \\\"7K\\\"+1%7&+'%4$6k$ %$$# X$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!7/+`$7&+V%! ]7J*# \\\"7K,)&7J*# \\\"7K\\\"+! (%+2%7&+(%4$6\\x8B$!!%$$# X$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"7.*G \\\".L\\\"\\\"2L3M*; \\\"0\\x8C\\\"\\\"1!3\\x8D*/ \\\"0\\x89\\\"\\\"1!3\\x8A*# \\\"73\"),\n          peg$decode(\"!.p\\\"\\\"2p3q+K$0\\x8E\\\"\\\"1!3\\x8F*5 \\\"0\\x90\\\"\\\"1!3\\x91*) \\\"0\\x92\\\"\\\"1!3\\x93+#%'\\\"%$\\\"# X\\\"# X\"),\n          peg$decode(\"!7N+Q$.8\\\"\\\"2839+A%7O*# \\\" \\\\+1%7S+'%4$6\\x94$ %$$# X$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!7N+k$.8\\\"\\\"2839+[%7O*# \\\" \\\\+K%7S+A%7_+7%7l*# \\\" \\\\+'%4&6\\x95& %$&# X$%# X$$# X$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!/\\x96\\\"\\\"1$3\\x97*) \\\"/\\x98\\\"\\\"1#3\\x99+' 4!6\\x9A!! %\"),\n          peg$decode(\"!7P+b$!.8\\\"\\\"2839+-$7R+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+7%.:\\\"\\\"2:3;+'%4#6\\x9B# %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\" ]7+*) \\\"7-*# \\\"7Q+2$,/&7+*) \\\"7-*# \\\"7Q\\\"\\\"\\\" X\"),\n          peg$decode(\".<\\\"\\\"2<3=*q \\\".>\\\"\\\"2>3?*e \\\".@\\\"\\\"2@3A*Y \\\".B\\\"\\\"2B3C*M \\\".D\\\"\\\"2D3E*A \\\".2\\\"\\\"2233*5 \\\".6\\\"\\\"2637*) \\\".4\\\"\\\"2435\"),\n          peg$decode(\"! ]7+*_ \\\"7-*Y \\\".<\\\"\\\"2<3=*M \\\".>\\\"\\\"2>3?*A \\\".@\\\"\\\"2@3A*5 \\\".B\\\"\\\"2B3C*) \\\".D\\\"\\\"2D3E,e&7+*_ \\\"7-*Y \\\".<\\\"\\\"2<3=*M \\\".>\\\"\\\"2>3?*A \\\".@\\\"\\\"2@3A*5 \\\".B\\\"\\\"2B3C*) \\\".D\\\"\\\"2D3E\\\"+& 4!6\\x9C! %\"),\n          peg$decode(\"!7T+N$!.8\\\"\\\"2839+-$7^+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+#%'\\\"%$\\\"# X\\\"# X\"),\n          peg$decode(\"!7U*) \\\"7\\\\*# \\\"7X+& 4!6\\x9D! %\"),\n          peg$decode(\"! ]!7V+3$.J\\\"\\\"2J3K+#%'\\\"%$\\\"# X\\\"# X,>&!7V+3$.J\\\"\\\"2J3K+#%'\\\"%$\\\"# X\\\"# X\\\"+G$7W+=%.J\\\"\\\"2J3K*# \\\" \\\\+'%4#6\\x9E# %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\" ]0\\x9F\\\"\\\"1!3\\xA0+,$,)&0\\x9F\\\"\\\"1!3\\xA0\\\"\\\"\\\" X\"),\n          peg$decode(\"!0$\\\"\\\"1!3%+A$ ]0\\xA1\\\"\\\"1!3\\xA2,)&0\\xA1\\\"\\\"1!3\\xA2\\\"+#%'\\\"%$\\\"# X\\\"# X\"),\n          peg$decode(\"!.r\\\"\\\"2r3s+A$7Y+7%.t\\\"\\\"2t3u+'%4#6\\xA3# %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!!7Z+\\xBF$.8\\\"\\\"2839+\\xAF%7Z+\\xA5%.8\\\"\\\"2839+\\x95%7Z+\\x8B%.8\\\"\\\"2839+{%7Z+q%.8\\\"\\\"2839+a%7Z+W%.8\\\"\\\"2839+G%7Z+=%.8\\\"\\\"2839+-%7[+#%'-%$-# X$,# X$+# X$*# X$)# X$(# X$'# X$&# X$%# X$$# X$## X$\\\"# X\\\"# X*\\u0838 \\\"!.\\xA4\\\"\\\"2\\xA43\\xA5+\\xAF$7Z+\\xA5%.8\\\"\\\"2839+\\x95%7Z+\\x8B%.8\\\"\\\"2839+{%7Z+q%.8\\\"\\\"2839+a%7Z+W%.8\\\"\\\"2839+G%7Z+=%.8\\\"\\\"2839+-%7[+#%',%$,# X$+# X$*# X$)# X$(# X$'# X$&# X$%# X$$# X$## X$\\\"# X\\\"# X*\\u0795 \\\"!.\\xA4\\\"\\\"2\\xA43\\xA5+\\x95$7Z+\\x8B%.8\\\"\\\"2839+{%7Z+q%.8\\\"\\\"2839+a%7Z+W%.8\\\"\\\"2839+G%7Z+=%.8\\\"\\\"2839+-%7[+#%'*%$*# X$)# X$(# X$'# X$&# X$%# X$$# X$## X$\\\"# X\\\"# X*\\u070C \\\"!.\\xA4\\\"\\\"2\\xA43\\xA5+{$7Z+q%.8\\\"\\\"2839+a%7Z+W%.8\\\"\\\"2839+G%7Z+=%.8\\\"\\\"2839+-%7[+#%'(%$(# X$'# X$&# X$%# X$$# X$## X$\\\"# X\\\"# X*\\u069D \\\"!.\\xA4\\\"\\\"2\\xA43\\xA5+a$7Z+W%.8\\\"\\\"2839+G%7Z+=%.8\\\"\\\"2839+-%7[+#%'&%$&# X$%# X$$# X$## X$\\\"# X\\\"# X*\\u0648 \\\"!.\\xA4\\\"\\\"2\\xA43\\xA5+G$7Z+=%.8\\\"\\\"2839+-%7[+#%'$%$$# X$## X$\\\"# X\\\"# X*\\u060D \\\"!.\\xA4\\\"\\\"2\\xA43\\xA5+-$7[+#%'\\\"%$\\\"# X\\\"# X*\\u05EC \\\"!.\\xA4\\\"\\\"2\\xA43\\xA5+-$7Z+#%'\\\"%$\\\"# X\\\"# X*\\u05CB \\\"!7Z+\\xA5$.\\xA4\\\"\\\"2\\xA43\\xA5+\\x95%7Z+\\x8B%.8\\\"\\\"2839+{%7Z+q%.8\\\"\\\"2839+a%7Z+W%.8\\\"\\\"2839+G%7Z+=%.8\\\"\\\"2839+-%7[+#%'+%$+# X$*# X$)# X$(# X$'# X$&# X$%# X$$# X$## X$\\\"# X\\\"# X*\\u0538 \\\"!7Z+\\xB6$!.8\\\"\\\"2839+-$7Z+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+\\x8B%.\\xA4\\\"\\\"2\\xA43\\xA5+{%7Z+q%.8\\\"\\\"2839+a%7Z+W%.8\\\"\\\"2839+G%7Z+=%.8\\\"\\\"2839+-%7[+#%'*%$*# X$)# X$(# X$'# X$&# X$%# X$$# X$## X$\\\"# X\\\"# X*\\u0494 \\\"!7Z+\\xC7$!.8\\\"\\\"2839+-$7Z+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+\\x9C%!.8\\\"\\\"2839+-$7Z+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+q%.\\xA4\\\"\\\"2\\xA43\\xA5+a%7Z+W%.8\\\"\\\"2839+G%7Z+=%.8\\\"\\\"2839+-%7[+#%')%$)# X$(# X$'# X$&# X$%# X$$# X$## X$\\\"# X\\\"# X*\\u03DF \\\"!7Z+\\xD8$!.8\\\"\\\"2839+-$7Z+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+\\xAD%!.8\\\"\\\"2839+-$7Z+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+\\x82%!.8\\\"\\\"2839+-$7Z+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+W%.\\xA4\\\"\\\"2\\xA43\\xA5+G%7Z+=%.8\\\"\\\"2839+-%7[+#%'(%$(# X$'# X$&# X$%# X$$# X$## X$\\\"# X\\\"# X*\\u0319 \\\"!7Z+\\xE9$!.8\\\"\\\"2839+-$7Z+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+\\xBE%!.8\\\"\\\"2839+-$7Z+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+\\x93%!.8\\\"\\\"2839+-$7Z+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+h%!.8\\\"\\\"2839+-$7Z+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+=%.\\xA4\\\"\\\"2\\xA43\\xA5+-%7[+#%''%$'# X$&# X$%# X$$# X$## X$\\\"# X\\\"# X*\\u0242 \\\"!7Z+\\u0114$!.8\\\"\\\"2839+-$7Z+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+\\xE9%!.8\\\"\\\"2839+-$7Z+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+\\xBE%!.8\\\"\\\"2839+-$7Z+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+\\x93%!.8\\\"\\\"2839+-$7Z+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+h%!.8\\\"\\\"2839+-$7Z+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+=%.\\xA4\\\"\\\"2\\xA43\\xA5+-%7Z+#%'(%$(# X$'# X$&# X$%# X$$# X$## X$\\\"# X\\\"# X*\\u0140 \\\"!7Z+\\u0135$!.8\\\"\\\"2839+-$7Z+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+\\u010A%!.8\\\"\\\"2839+-$7Z+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+\\xDF%!.8\\\"\\\"2839+-$7Z+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+\\xB4%!.8\\\"\\\"2839+-$7Z+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+\\x89%!.8\\\"\\\"2839+-$7Z+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+^%!.8\\\"\\\"2839+-$7Z+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+3%.\\xA4\\\"\\\"2\\xA43\\xA5+#%'(%$(# X$'# X$&# X$%# X$$# X$## X$\\\"# X\\\"# X+& 4!6\\xA6! %\"),\n          peg$decode(\"!7#+S$7#*# \\\" \\\\+C%7#*# \\\" \\\\+3%7#*# \\\" \\\\+#%'$%$$# X$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!7Z+=$.8\\\"\\\"2839+-%7Z+#%'#%$## X$\\\"# X\\\"# X*# \\\"7\\\\\"),\n          peg$decode(\"!7]+u$.J\\\"\\\"2J3K+e%7]+[%.J\\\"\\\"2J3K+K%7]+A%.J\\\"\\\"2J3K+1%7]+'%4'6\\xA7' %$'# X$&# X$%# X$$# X$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!.\\xA8\\\"\\\"2\\xA83\\xA9+3$0\\xAA\\\"\\\"1!3\\xAB+#%'\\\"%$\\\"# X\\\"# X*\\xA0 \\\"!.\\xAC\\\"\\\"2\\xAC3\\xAD+=$0\\xAE\\\"\\\"1!3\\xAF+-%7!+#%'#%$## X$\\\"# X\\\"# X*o \\\"!.\\xB0\\\"\\\"2\\xB03\\xB1+7$7!+-%7!+#%'#%$## X$\\\"# X\\\"# X*D \\\"!0\\xB2\\\"\\\"1!3\\xB3+-$7!+#%'\\\"%$\\\"# X\\\"# X*# \\\"7!\"),\n          peg$decode(\"!!7!*# \\\" \\\\+c$7!*# \\\" \\\\+S%7!*# \\\" \\\\+C%7!*# \\\" \\\\+3%7!*# \\\" \\\\+#%'%%$%# X$$# X$## X$\\\"# X\\\"# X+' 4!6\\xB4!! %\"),\n          peg$decode(\" ]!.2\\\"\\\"2233+-$7`+#%'\\\"%$\\\"# X\\\"# X,>&!.2\\\"\\\"2233+-$7`+#%'\\\"%$\\\"# X\\\"# X\\\"\"),\n          peg$decode(\"7a*A \\\"7b*; \\\"7c*5 \\\"7d*/ \\\"7e*) \\\"7f*# \\\"7g\"),\n          peg$decode(\"!/\\xB5\\\"\\\"1*3\\xB6+b$/\\xB7\\\"\\\"1#3\\xB8*G \\\"/\\xB9\\\"\\\"1#3\\xBA*; \\\"/\\xBB\\\"\\\"1$3\\xBC*/ \\\"/\\xBD\\\"\\\"1#3\\xBE*# \\\"76+(%4\\\"6\\xBF\\\"! %$\\\"# X\\\"# X\"),\n          peg$decode(\"!/\\xC0\\\"\\\"1%3\\xC1+J$/\\xC2\\\"\\\"1%3\\xC3*/ \\\"/\\xC4\\\"\\\"1\\\"3\\xC5*# \\\"76+(%4\\\"6\\xC6\\\"! %$\\\"# X\\\"# X\"),\n          peg$decode(\"!/\\xC7\\\"\\\"1'3\\xC8+2$7\\x8F+(%4\\\"6\\xC9\\\"! %$\\\"# X\\\"# X\"),\n          peg$decode(\"!/\\xCA\\\"\\\"1$3\\xCB+2$7\\xEC+(%4\\\"6\\xCC\\\"! %$\\\"# X\\\"# X\"),\n          peg$decode(\"!/\\xCD\\\"\\\"1&3\\xCE+2$7T+(%4\\\"6\\xCF\\\"! %$\\\"# X\\\"# X\"),\n          peg$decode(\"!/\\xD0\\\"\\\"1\\\"3\\xD1+R$!.>\\\"\\\"2>3?+-$76+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+'%4\\\"6\\xD2\\\" %$\\\"# X\\\"# X\"),\n          peg$decode(\"!7h+T$!.>\\\"\\\"2>3?+-$7i+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+)%4\\\"6\\xD3\\\"\\\"! %$\\\"# X\\\"# X\"),\n          peg$decode(\"! ]7j+&$,#&7j\\\"\\\"\\\" X+' 4!6\\xD4!! %\"),\n          peg$decode(\"! ]7j+&$,#&7j\\\"\\\"\\\" X+' 4!6\\xD5!! %\"),\n          peg$decode(\"7k*) \\\"7+*# \\\"7-\"),\n          peg$decode(\".r\\\"\\\"2r3s*e \\\".t\\\"\\\"2t3u*Y \\\".4\\\"\\\"2435*M \\\".8\\\"\\\"2839*A \\\".<\\\"\\\"2<3=*5 \\\".@\\\"\\\"2@3A*) \\\".B\\\"\\\"2B3C\"),\n          peg$decode(\"!.6\\\"\\\"2637+u$7m+k% ]!.<\\\"\\\"2<3=+-$7m+#%'\\\"%$\\\"# X\\\"# X,>&!.<\\\"\\\"2<3=+-$7m+#%'\\\"%$\\\"# X\\\"# X\\\"+#%'#%$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!7n+C$.>\\\"\\\"2>3?+3%7o+)%4#6\\xD6#\\\"\\\" %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\" ]7p*) \\\"7+*# \\\"7-+2$,/&7p*) \\\"7+*# \\\"7-\\\"\\\"\\\" X\"),\n          peg$decode(\" ]7p*) \\\"7+*# \\\"7-,/&7p*) \\\"7+*# \\\"7-\\\"\"),\n          peg$decode(\".r\\\"\\\"2r3s*e \\\".t\\\"\\\"2t3u*Y \\\".4\\\"\\\"2435*M \\\".6\\\"\\\"2637*A \\\".8\\\"\\\"2839*5 \\\".@\\\"\\\"2@3A*) \\\".B\\\"\\\"2B3C\"),\n          peg$decode(\"7\\x90*# \\\"7r\"),\n          peg$decode(\"!7\\x8F+K$7'+A%7s+7%7'+-%7\\x84+#%'%%$%# X$$# X$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"7M*# \\\"7t\"),\n          peg$decode(\"!7+G$.8\\\"\\\"2839+7%7u*# \\\"7x+'%4#6\\xD7# %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!7v*# \\\"7w+N$!.6\\\"\\\"2637+-$7\\x83+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+#%'\\\"%$\\\"# X\\\"# X\"),\n          peg$decode(\"!.\\xD8\\\"\\\"2\\xD83\\xD9+=$7\\x80+3%7w*# \\\" \\\\+#%'#%$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!.4\\\"\\\"2435+-$7{+#%'\\\"%$\\\"# X\\\"# X\"),\n          peg$decode(\"!7z+5$ ]7y,#&7y\\\"+#%'\\\"%$\\\"# X\\\"# X\"),\n          peg$decode(\"7**) \\\"7+*# \\\"7-\"),\n          peg$decode(\"7+*\\x8F \\\"7-*\\x89 \\\".2\\\"\\\"2233*} \\\".6\\\"\\\"2637*q \\\".8\\\"\\\"2839*e \\\".:\\\"\\\"2:3;*Y \\\".<\\\"\\\"2<3=*M \\\".>\\\"\\\"2>3?*A \\\".@\\\"\\\"2@3A*5 \\\".B\\\"\\\"2B3C*) \\\".D\\\"\\\"2D3E\"),\n          peg$decode(\"!7|+k$ ]!.4\\\"\\\"2435+-$7|+#%'\\\"%$\\\"# X\\\"# X,>&!.4\\\"\\\"2435+-$7|+#%'\\\"%$\\\"# X\\\"# X\\\"+#%'\\\"%$\\\"# X\\\"# X\"),\n          peg$decode(\"! ]7~,#&7~\\\"+k$ ]!.2\\\"\\\"2233+-$7}+#%'\\\"%$\\\"# X\\\"# X,>&!.2\\\"\\\"2233+-$7}+#%'\\\"%$\\\"# X\\\"# X\\\"+#%'\\\"%$\\\"# X\\\"# X\"),\n          peg$decode(\" ]7~,#&7~\\\"\"),\n          peg$decode(\"7+*w \\\"7-*q \\\".8\\\"\\\"2839*e \\\".:\\\"\\\"2:3;*Y \\\".<\\\"\\\"2<3=*M \\\".>\\\"\\\"2>3?*A \\\".@\\\"\\\"2@3A*5 \\\".B\\\"\\\"2B3C*) \\\".D\\\"\\\"2D3E\"),\n          peg$decode(\"!7\\\"+\\x8D$ ]7\\\"*G \\\"7!*A \\\".@\\\"\\\"2@3A*5 \\\".F\\\"\\\"2F3G*) \\\".J\\\"\\\"2J3K,M&7\\\"*G \\\"7!*A \\\".@\\\"\\\"2@3A*5 \\\".F\\\"\\\"2F3G*) \\\".J\\\"\\\"2J3K\\\"+'%4\\\"6\\xDA\\\" %$\\\"# X\\\"# X\"),\n          peg$decode(\"7\\x81*# \\\"7\\x82\"),\n          peg$decode(\"!!7O+3$.:\\\"\\\"2:3;+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+-$7S+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\\"),\n          peg$decode(\" ]7+*\\x83 \\\"7-*} \\\".B\\\"\\\"2B3C*q \\\".D\\\"\\\"2D3E*e \\\".2\\\"\\\"2233*Y \\\".8\\\"\\\"2839*M \\\".:\\\"\\\"2:3;*A \\\".<\\\"\\\"2<3=*5 \\\".>\\\"\\\"2>3?*) \\\".@\\\"\\\"2@3A+\\x8C$,\\x89&7+*\\x83 \\\"7-*} \\\".B\\\"\\\"2B3C*q \\\".D\\\"\\\"2D3E*e \\\".2\\\"\\\"2233*Y \\\".8\\\"\\\"2839*M \\\".:\\\"\\\"2:3;*A \\\".<\\\"\\\"2<3=*5 \\\".>\\\"\\\"2>3?*) \\\".@\\\"\\\"2@3A\\\"\\\"\\\" X\"),\n          peg$decode(\" ]7y,#&7y\\\"\"),\n          peg$decode(\"!/\\x98\\\"\\\"1#3\\xDB+y$.4\\\"\\\"2435+i% ]7!+&$,#&7!\\\"\\\"\\\" X+P%.J\\\"\\\"2J3K+@% ]7!+&$,#&7!\\\"\\\"\\\" X+'%4%6\\xDC% %$%# X$$# X$## X$\\\"# X\\\"# X\"),\n          peg$decode(\".\\xDD\\\"\\\"2\\xDD3\\xDE\"),\n          peg$decode(\".\\xDF\\\"\\\"2\\xDF3\\xE0\"),\n          peg$decode(\".\\xE1\\\"\\\"2\\xE13\\xE2\"),\n          peg$decode(\".\\xE3\\\"\\\"2\\xE33\\xE4\"),\n          peg$decode(\".\\xE5\\\"\\\"2\\xE53\\xE6\"),\n          peg$decode(\".\\xE7\\\"\\\"2\\xE73\\xE8\"),\n          peg$decode(\".\\xE9\\\"\\\"2\\xE93\\xEA\"),\n          peg$decode(\".\\xEB\\\"\\\"2\\xEB3\\xEC\"),\n          peg$decode(\".\\xED\\\"\\\"2\\xED3\\xEE\"),\n          peg$decode(\".\\xEF\\\"\\\"2\\xEF3\\xF0\"),\n          peg$decode(\"!7\\x85*S \\\"7\\x86*M \\\"7\\x88*G \\\"7\\x89*A \\\"7\\x8A*; \\\"7\\x8B*5 \\\"7\\x8C*/ \\\"7\\x8D*) \\\"7\\x8E*# \\\"76+& 4!6\\xF1! %\"),\n          peg$decode(\"!7\\x84+K$7'+A%7\\x91+7%7'+-%7\\x93+#%'%%$%# X$$# X$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!7\\x92+' 4!6\\xF2!! %\"),\n          peg$decode(\"!7!+7$7!+-%7!+#%'#%$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"! ]7**A \\\"7+*; \\\"7-*5 \\\"73*/ \\\"74*) \\\"7'*# \\\"7(,G&7**A \\\"7+*; \\\"7-*5 \\\"73*/ \\\"74*) \\\"7'*# \\\"7(\\\"+& 4!6\\xF3! %\"),\n          peg$decode(\"!7\\xB5+_$ ]!7A+-$7\\xB5+#%'\\\"%$\\\"# X\\\"# X,8&!7A+-$7\\xB5+#%'\\\"%$\\\"# X\\\"# X\\\"+#%'\\\"%$\\\"# X\\\"# X\"),\n          peg$decode(\"!79+R$!.:\\\"\\\"2:3;+-$79+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+'%4\\\"6\\xF4\\\" %$\\\"# X\\\"# X\"),\n          peg$decode(\"!7:*j \\\"!7\\x97+_$ ]!7A+-$7\\x97+#%'\\\"%$\\\"# X\\\"# X,8&!7A+-$7\\x97+#%'\\\"%$\\\"# X\\\"# X\\\"+#%'\\\"%$\\\"# X\\\"# X+& 4!6\\xF5! %\"),\n          peg$decode(\"!7L*# \\\"7\\x98+c$ ]!7B+-$7\\x9A+#%'\\\"%$\\\"# X\\\"# X,8&!7B+-$7\\x9A+#%'\\\"%$\\\"# X\\\"# X\\\"+'%4\\\"6\\xF6\\\" %$\\\"# X\\\"# X\"),\n          peg$decode(\"!7\\x99*# \\\" \\\\+A$7@+7%7M+-%7?+#%'$%$$# X$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!!76+_$ ]!7.+-$76+#%'\\\"%$\\\"# X\\\"# X,8&!7.+-$76+#%'\\\"%$\\\"# X\\\"# X\\\"+#%'\\\"%$\\\"# X\\\"# X*# \\\"7H+' 4!6\\xF7!! %\"),\n          peg$decode(\"7\\x9B*) \\\"7\\x9C*# \\\"7\\x9F\"),\n          peg$decode(\"!/\\xF8\\\"\\\"1!3\\xF9+<$7<+2%7\\x9E+(%4#6\\xFA#! %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!/\\xFB\\\"\\\"1'3\\xFC+<$7<+2%7\\x9D+(%4#6\\xFD#! %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"! ]7!+&$,#&7!\\\"\\\"\\\" X+' 4!6\\xFE!! %\"),\n          peg$decode(\"!.\\xFF\\\"\\\"2\\xFF3\\u0100+x$!.J\\\"\\\"2J3K+S$7!*# \\\" \\\\+C%7!*# \\\" \\\\+3%7!*# \\\" \\\\+#%'$%$$# X$## X$\\\"# X\\\"# X*# \\\" \\\\+'%4\\\"6\\u0101\\\" %$\\\"# X\\\"# X\"),\n          peg$decode(\"!76+N$!7<+-$7\\xA0+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+)%4\\\"6\\u0102\\\"\\\"! %$\\\"# X\\\"# X\"),\n          peg$decode(\"76*) \\\"7T*# \\\"7H\"),\n          peg$decode(\"!7\\xA2+_$ ]!7B+-$7\\xA3+#%'\\\"%$\\\"# X\\\"# X,8&!7B+-$7\\xA3+#%'\\\"%$\\\"# X\\\"# X\\\"+#%'\\\"%$\\\"# X\\\"# X\"),\n          peg$decode(\"!/\\u0103\\\"\\\"1&3\\u0104*G \\\"/\\u0105\\\"\\\"1'3\\u0106*; \\\"/\\u0107\\\"\\\"1$3\\u0108*/ \\\"/\\u0109\\\"\\\"1%3\\u010A*# \\\"76+& 4!6\\u010B! %\"),\n          peg$decode(\"7\\xA4*# \\\"7\\x9F\"),\n          peg$decode(\"!/\\u010C\\\"\\\"1(3\\u010D+O$7<+E%/\\u010E\\\"\\\"1(3\\u010F*/ \\\"/\\u0110\\\"\\\"1(3\\u0111*# \\\"76+#%'#%$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!76+_$ ]!7A+-$76+#%'\\\"%$\\\"# X\\\"# X,8&!7A+-$76+#%'\\\"%$\\\"# X\\\"# X\\\"+#%'\\\"%$\\\"# X\\\"# X\"),\n          peg$decode(\"! ]7!+&$,#&7!\\\"\\\"\\\" X+' 4!6\\u0112!! %\"),\n          peg$decode(\"!7\\xA8+& 4!6\\u0113! %\"),\n          peg$decode(\"!7\\xA9+s$7;+i%7\\xAE+_% ]!7B+-$7\\xAF+#%'\\\"%$\\\"# X\\\"# X,8&!7B+-$7\\xAF+#%'\\\"%$\\\"# X\\\"# X\\\"+#%'$%$$# X$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"7\\xAA*# \\\"7\\xAB\"),\n          peg$decode(\"/\\u0114\\\"\\\"1$3\\u0115*S \\\"/\\u0116\\\"\\\"1%3\\u0117*G \\\"/\\u0118\\\"\\\"1%3\\u0119*; \\\"/\\u011A\\\"\\\"1%3\\u011B*/ \\\"/\\u011C\\\"\\\"1+3\\u011D*# \\\"7\\xAC\"),\n          peg$decode(\"/\\u011E\\\"\\\"1'3\\u011F*/ \\\"/\\u0120\\\"\\\"1)3\\u0121*# \\\"7\\xAC\"),\n          peg$decode(\"76*# \\\"7\\xAD\"),\n          peg$decode(\"!/\\u0122\\\"\\\"1\\\"3\\u0123+-$76+#%'\\\"%$\\\"# X\\\"# X\"),\n          peg$decode(\"7\\xAC*# \\\"76\"),\n          peg$decode(\"!76+7$7<+-%7\\xB0+#%'#%$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"76*# \\\"7H\"),\n          peg$decode(\"!7\\xB2+7$7.+-%7\\x8F+#%'#%$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"! ]7!+&$,#&7!\\\"\\\"\\\" X+' 4!6\\u0124!! %\"),\n          peg$decode(\"!7\\x9D+' 4!6\\u0125!! %\"),\n          peg$decode(\"!7\\xB5+d$ ]!7B+-$7\\x9F+#%'\\\"%$\\\"# X\\\"# X,8&!7B+-$7\\x9F+#%'\\\"%$\\\"# X\\\"# X\\\"+(%4\\\"6\\u0126\\\"!!%$\\\"# X\\\"# X\"),\n          peg$decode(\"!!77+k$ ]!.J\\\"\\\"2J3K+-$77+#%'\\\"%$\\\"# X\\\"# X,>&!.J\\\"\\\"2J3K+-$77+#%'\\\"%$\\\"# X\\\"# X\\\"+#%'\\\"%$\\\"# X\\\"# X+! (%\"),\n          peg$decode(\"!7L*# \\\"7\\x98+c$ ]!7B+-$7\\xB7+#%'\\\"%$\\\"# X\\\"# X,8&!7B+-$7\\xB7+#%'\\\"%$\\\"# X\\\"# X\\\"+'%4\\\"6\\u0127\\\" %$\\\"# X\\\"# X\"),\n          peg$decode(\"7\\xB8*# \\\"7\\x9F\"),\n          peg$decode(\"!/\\u0128\\\"\\\"1#3\\u0129+<$7<+2%76+(%4#6\\u012A#! %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"! ]7!+&$,#&7!\\\"\\\"\\\" X+' 4!6\\u012B!! %\"),\n          peg$decode(\"!7\\x9D+' 4!6\\u012C!! %\"),\n          peg$decode(\"! ]7\\x99,#&7\\x99\\\"+\\x81$7@+w%7M+m%7?+c% ]!7B+-$7\\x9F+#%'\\\"%$\\\"# X\\\"# X,8&!7B+-$7\\x9F+#%'\\\"%$\\\"# X\\\"# X\\\"+'%4%6\\u012D% %$%# X$$# X$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"7\\xBD\"),\n          peg$decode(\"!/\\u012E\\\"\\\"1&3\\u012F+s$7.+i%7\\xC0+_% ]!7A+-$7\\xC0+#%'\\\"%$\\\"# X\\\"# X,8&!7A+-$7\\xC0+#%'\\\"%$\\\"# X\\\"# X\\\"+#%'$%$$# X$## X$\\\"# X\\\"# X*# \\\"7\\xBE\"),\n          peg$decode(\"!76+s$7.+i%7\\xBF+_% ]!7A+-$7\\xBF+#%'\\\"%$\\\"# X\\\"# X,8&!7A+-$7\\xBF+#%'\\\"%$\\\"# X\\\"# X\\\"+#%'$%$$# X$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!76+=$7<+3%76*# \\\"7H+#%'#%$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"7\\xC1*G \\\"7\\xC3*A \\\"7\\xC5*; \\\"7\\xC7*5 \\\"7\\xC8*/ \\\"7\\xC9*) \\\"7\\xCA*# \\\"7\\xBF\"),\n          peg$decode(\"!/\\u0130\\\"\\\"1%3\\u0131+7$7<+-%7\\xC2+#%'#%$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!7I+' 4!6\\u0132!! %\"),\n          peg$decode(\"!/\\u0133\\\"\\\"1&3\\u0134+\\xA5$7<+\\x9B%7D+\\x91%7\\xC4+\\x87% ]! ]7'+&$,#&7'\\\"\\\"\\\" X+-$7\\xC4+#%'\\\"%$\\\"# X\\\"# X,G&! ]7'+&$,#&7'\\\"\\\"\\\" X+-$7\\xC4+#%'\\\"%$\\\"# X\\\"# X\\\"+-%7E+#%'&%$&# X$%# X$$# X$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"7t*# \\\"7w\"),\n          peg$decode(\"!/\\u0135\\\"\\\"1%3\\u0136+7$7<+-%7\\xC6+#%'#%$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!7I+' 4!6\\u0137!! %\"),\n          peg$decode(\"!/\\u0138\\\"\\\"1&3\\u0139+<$7<+2%7I+(%4#6\\u013A#! %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!/\\u013B\\\"\\\"1%3\\u013C+_$7<+U%!/\\u013D\\\"\\\"1$3\\u013E+& 4!6\\u013F! %*4 \\\"!/\\u0140\\\"\\\"1%3\\u0141+& 4!6\\u0142! %+#%'#%$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!/\\u0143\\\"\\\"1)3\\u0144+T$7<+J%/\\u0145\\\"\\\"1#3\\u0146*/ \\\"/\\u0147\\\"\\\"1(3\\u0148*# \\\"76+(%4#6\\u0149#! %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!/\\u014A\\\"\\\"1#3\\u014B+\\x9E$7<+\\x94%7D+\\x8A%!7\\xCB+k$ ]!.D\\\"\\\"2D3E+-$7\\xCB+#%'\\\"%$\\\"# X\\\"# X,>&!.D\\\"\\\"2D3E+-$7\\xCB+#%'\\\"%$\\\"# X\\\"# X\\\"+#%'\\\"%$\\\"# X\\\"# X+-%7E+#%'%%$%# X$$# X$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!/\\u014C\\\"\\\"1(3\\u014D*/ \\\"/\\u014E\\\"\\\"1$3\\u014F*# \\\"76+' 4!6\\u0150!! %\"),\n          peg$decode(\"!76+_$ ]!7A+-$76+#%'\\\"%$\\\"# X\\\"# X,8&!7A+-$76+#%'\\\"%$\\\"# X\\\"# X\\\"+#%'\\\"%$\\\"# X\\\"# X\"),\n          peg$decode(\"!7\\xCE+K$7.+A%7\\xCE+7%7.+-%7\\x8F+#%'%%$%# X$$# X$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"! ]7!+&$,#&7!\\\"\\\"\\\" X+' 4!6\\u0151!! %\"),\n          peg$decode(\"!7\\xD0+c$ ]!7A+-$7\\xD0+#%'\\\"%$\\\"# X\\\"# X,8&!7A+-$7\\xD0+#%'\\\"%$\\\"# X\\\"# X\\\"+'%4\\\"6\\u0152\\\" %$\\\"# X\\\"# X\"),\n          peg$decode(\"!7\\x98+c$ ]!7B+-$7\\x9F+#%'\\\"%$\\\"# X\\\"# X,8&!7B+-$7\\x9F+#%'\\\"%$\\\"# X\\\"# X\\\"+'%4\\\"6\\u0153\\\" %$\\\"# X\\\"# X\"),\n          peg$decode(\"!7L*) \\\"7\\x98*# \\\"7t+c$ ]!7B+-$7\\x9F+#%'\\\"%$\\\"# X\\\"# X,8&!7B+-$7\\x9F+#%'\\\"%$\\\"# X\\\"# X\\\"+'%4\\\"6\\u0154\\\" %$\\\"# X\\\"# X\"),\n          peg$decode(\"!76+_$ ]!7A+-$76+#%'\\\"%$\\\"# X\\\"# X,8&!7A+-$76+#%'\\\"%$\\\"# X\\\"# X\\\"+#%'\\\"%$\\\"# X\\\"# X\"),\n          peg$decode(\"!7\\xD4+_$ ]!7A+-$7\\xD4+#%'\\\"%$\\\"# X\\\"# X,8&!7A+-$7\\xD4+#%'\\\"%$\\\"# X\\\"# X\\\"+#%'\\\"%$\\\"# X\\\"# X\"),\n          peg$decode(\"!7\\x98+_$ ]!7B+-$7\\x9F+#%'\\\"%$\\\"# X\\\"# X,8&!7B+-$7\\x9F+#%'\\\"%$\\\"# X\\\"# X\\\"+#%'\\\"%$\\\"# X\\\"# X\"),\n          peg$decode(\"! ]7!+&$,#&7!\\\"\\\"\\\" X+' 4!6\\u0155!! %\"),\n          peg$decode(\"!7\\xD7+_$ ]!7B+-$7\\xD8+#%'\\\"%$\\\"# X\\\"# X,8&!7B+-$7\\xD8+#%'\\\"%$\\\"# X\\\"# X\\\"+#%'\\\"%$\\\"# X\\\"# X\"),\n          peg$decode(\"!/\\u0156\\\"\\\"1&3\\u0157*; \\\"/\\u0158\\\"\\\"1'3\\u0159*/ \\\"/\\u015A\\\"\\\"1*3\\u015B*# \\\"76+& 4!6\\u015C! %\"),\n          peg$decode(\"!/\\u015D\\\"\\\"1&3\\u015E+<$7<+2%7\\xD9+(%4#6\\u015F#! %$## X$\\\"# X\\\"# X*\\x83 \\\"!/\\xFB\\\"\\\"1'3\\xFC+<$7<+2%7\\x9D+(%4#6\\u0160#! %$## X$\\\"# X\\\"# X*S \\\"!/\\u0161\\\"\\\"1+3\\u0162+<$7<+2%7\\x9D+(%4#6\\u0163#! %$## X$\\\"# X\\\"# X*# \\\"7\\x9F\"),\n          peg$decode(\"/\\u0164\\\"\\\"1+3\\u0165*k \\\"/\\u0166\\\"\\\"1)3\\u0167*_ \\\"/\\u0168\\\"\\\"1(3\\u0169*S \\\"/\\u016A\\\"\\\"1'3\\u016B*G \\\"/\\u016C\\\"\\\"1&3\\u016D*; \\\"/\\u016E\\\"\\\"1*3\\u016F*/ \\\"/\\u0170\\\"\\\"1)3\\u0171*# \\\"76\"),\n          peg$decode(\"71*# \\\" \\\\\"),\n          peg$decode(\"!76+_$ ]!7A+-$76+#%'\\\"%$\\\"# X\\\"# X,8&!7A+-$76+#%'\\\"%$\\\"# X\\\"# X\\\"+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\\"),\n          peg$decode(\"!7L*# \\\"7\\x98+c$ ]!7B+-$7\\xDD+#%'\\\"%$\\\"# X\\\"# X,8&!7B+-$7\\xDD+#%'\\\"%$\\\"# X\\\"# X\\\"+'%4\\\"6\\u0172\\\" %$\\\"# X\\\"# X\"),\n          peg$decode(\"7\\xB8*# \\\"7\\x9F\"),\n          peg$decode(\"!7\\xDF+_$ ]!7A+-$7\\xDF+#%'\\\"%$\\\"# X\\\"# X,8&!7A+-$7\\xDF+#%'\\\"%$\\\"# X\\\"# X\\\"+#%'\\\"%$\\\"# X\\\"# X\"),\n          peg$decode(\"!7\\xE6+s$7.+i%7\\xE9+_% ]!7B+-$7\\xE0+#%'\\\"%$\\\"# X\\\"# X,8&!7B+-$7\\xE0+#%'\\\"%$\\\"# X\\\"# X\\\"+#%'$%$$# X$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"7\\xE1*; \\\"7\\xE2*5 \\\"7\\xE3*/ \\\"7\\xE4*) \\\"7\\xE5*# \\\"7\\x9F\"),\n          peg$decode(\"!/\\u0173\\\"\\\"1#3\\u0174+<$7<+2%7\\xEC+(%4#6\\u0175#! %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!/\\u0176\\\"\\\"1%3\\u0177+<$7<+2%7T+(%4#6\\u0178#! %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!/\\u0179\\\"\\\"1(3\\u017A+B$7<+8%7\\\\*# \\\"7Y+(%4#6\\u017B#! %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!/\\u017C\\\"\\\"1&3\\u017D+<$7<+2%76+(%4#6\\u017E#! %$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!/\\u017F\\\"\\\"1%3\\u0180+T$!7<+5$ ]7!,#&7!\\\"+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+'%4\\\"6\\u0181\\\" %$\\\"# X\\\"# X\"),\n          peg$decode(\"!7\\xE7+K$7;+A%76+7%7;+-%7\\xE8+#%'%%$%# X$$# X$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!/\\x98\\\"\\\"1#3\\xDB*# \\\"76+' 4!6\\u0182!! %\"),\n          peg$decode(\"!/\\xB7\\\"\\\"1#3\\u0183*G \\\"/\\xB9\\\"\\\"1#3\\u0184*; \\\"/\\xBD\\\"\\\"1#3\\u0185*/ \\\"/\\xBB\\\"\\\"1$3\\u0186*# \\\"76+' 4!6\\u0187!! %\"),\n          peg$decode(\"!7\\xEA+H$!7C+-$7\\xEB+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+#%'\\\"%$\\\"# X\\\"# X\"),\n          peg$decode(\"!7U*) \\\"7\\\\*# \\\"7X+& 4!6\\u0188! %\"),\n          peg$decode(\"!!7!*# \\\" \\\\+c$7!*# \\\" \\\\+S%7!*# \\\" \\\\+C%7!*# \\\" \\\\+3%7!*# \\\" \\\\+#%'%%$%# X$$# X$## X$\\\"# X\\\"# X+' 4!6\\u0189!! %\"),\n          peg$decode(\"!!7!+C$7!*# \\\" \\\\+3%7!*# \\\" \\\\+#%'#%$## X$\\\"# X\\\"# X+' 4!6\\u018A!! %\"),\n          peg$decode(\"7\\xBD\"),\n          peg$decode(\"!76+7$70+-%7\\xEF+#%'#%$## X$\\\"# X\\\"# X\"),\n          peg$decode(\" ]72*) \\\"74*# \\\"7.,/&72*) \\\"74*# \\\"7.\\\"\"),\n          peg$decode(\" ]7%,#&7%\\\"\"),\n          peg$decode(\"!7\\xF2+=$.8\\\"\\\"2839+-%7\\xF3+#%'#%$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!/\\u018B\\\"\\\"1%3\\u018C*) \\\"/\\u018D\\\"\\\"1$3\\u018E+' 4!6\\u018F!! %\"),\n          peg$decode(\"!7\\xF4+N$!.8\\\"\\\"2839+-$7^+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+#%'\\\"%$\\\"# X\\\"# X\"),\n          peg$decode(\"!7\\\\*) \\\"7X*# \\\"7\\x82+' 4!6\\u0190!! %\"),\n          peg$decode(\"! ]7\\xF6*) \\\"7-*# \\\"7\\xF7,/&7\\xF6*) \\\"7-*# \\\"7\\xF7\\\"+& 4!6\\u0191! %\"),\n          peg$decode(\"7\\\"*S \\\"7!*M \\\".F\\\"\\\"2F3G*A \\\".J\\\"\\\"2J3K*5 \\\".H\\\"\\\"2H3I*) \\\".N\\\"\\\"2N3O\"),\n          peg$decode(\".L\\\"\\\"2L3M*\\x95 \\\".B\\\"\\\"2B3C*\\x89 \\\".<\\\"\\\"2<3=*} \\\".R\\\"\\\"2R3S*q \\\".T\\\"\\\"2T3U*e \\\".V\\\"\\\"2V3W*Y \\\".P\\\"\\\"2P3Q*M \\\".@\\\"\\\"2@3A*A \\\".D\\\"\\\"2D3E*5 \\\".2\\\"\\\"2233*) \\\".>\\\"\\\"2>3?\"),\n          peg$decode(\"!7\\xF9+h$.8\\\"\\\"2839+X%7\\xF3+N%!.\\u0192\\\"\\\"2\\u01923\\u0193+-$7\\xE8+#%'\\\"%$\\\"# X\\\"# X*# \\\" \\\\+#%'$%$$# X$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!/\\u0194\\\"\\\"1%3\\u0195*) \\\"/\\u0196\\\"\\\"1$3\\u0197+' 4!6\\u018F!! %\"),\n          peg$decode(\"!7\\xE8+Q$/\\xB7\\\"\\\"1#3\\xB8*7 \\\"/\\xB9\\\"\\\"1#3\\xBA*+ \\\" ]7+,#&7+\\\"+'%4\\\"6\\u0198\\\" %$\\\"# X\\\"# X\"),\n          peg$decode(\"!7\\xFD+\\x8F$.F\\\"\\\"2F3G+%7\\xFC+u%.F\\\"\\\"2F3G+e%7\\xFC+[%.F\\\"\\\"2F3G+K%7\\xFC+A%.F\\\"\\\"2F3G+1%7\\xFE+'%4)6\\u0199) %$)# X$(# X$'# X$&# X$%# X$$# X$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!7#+A$7#+7%7#+-%7#+#%'$%$$# X$## X$\\\"# X\\\"# X\"),\n          peg$decode(\"!7\\xFC+-$7\\xFC+#%'\\\"%$\\\"# X\\\"# X\"),\n          peg$decode(\"!7\\xFC+7$7\\xFC+-%7\\xFC+#%'#%$## X$\\\"# X\\\"# X\")\n        ],\n\n        peg$currPos          = 0,\n        peg$reportedPos      = 0,\n        peg$cachedPos        = 0,\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleIndices)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleIndex = peg$startRuleIndices[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n\n    function offset() {\n      return peg$reportedPos;\n    }\n\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        peg$reportedPos\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n        }\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n\n      return peg$cachedPosDetails;\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      var posDetails = peg$computePosDetails(pos),\n          found      = pos < input.length ? input.charAt(pos) : null;\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        pos,\n        posDetails.line,\n        posDetails.column\n      );\n    }\n\n    function peg$decode(s) {\n      var bc = new Array(s.length), i;\n\n      for (i = 0; i < s.length; i++) {\n        bc[i] = s.charCodeAt(i) - 32;\n      }\n\n      return bc;\n    }\n\n    function peg$parseRule(index) {\n      var bc    = peg$bytecode[index],\n          ip    = 0,\n          ips   = [],\n          end   = bc.length,\n          ends  = [],\n          stack = [],\n          params, i;\n\n      function protect(object) {\n        return Object.prototype.toString.apply(object) === \"[object Array]\" ? [] : object;\n      }\n\n      while (true) {\n        while (ip < end) {\n          switch (bc[ip]) {\n            case 0:\n              stack.push(protect(peg$consts[bc[ip + 1]]));\n              ip += 2;\n              break;\n\n            case 1:\n              stack.push(peg$currPos);\n              ip++;\n              break;\n\n            case 2:\n              stack.pop();\n              ip++;\n              break;\n\n            case 3:\n              peg$currPos = stack.pop();\n              ip++;\n              break;\n\n            case 4:\n              stack.length -= bc[ip + 1];\n              ip += 2;\n              break;\n\n            case 5:\n              stack.splice(-2, 1);\n              ip++;\n              break;\n\n            case 6:\n              stack[stack.length - 2].push(stack.pop());\n              ip++;\n              break;\n\n            case 7:\n              stack.push(stack.splice(stack.length - bc[ip + 1], bc[ip + 1]));\n              ip += 2;\n              break;\n\n            case 8:\n              stack.pop();\n              stack.push(input.substring(stack[stack.length - 1], peg$currPos));\n              ip++;\n              break;\n\n            case 9:\n              ends.push(end);\n              ips.push(ip + 3 + bc[ip + 1] + bc[ip + 2]);\n\n              if (stack[stack.length - 1]) {\n                end = ip + 3 + bc[ip + 1];\n                ip += 3;\n              } else {\n                end = ip + 3 + bc[ip + 1] + bc[ip + 2];\n                ip += 3 + bc[ip + 1];\n              }\n\n              break;\n\n            case 10:\n              ends.push(end);\n              ips.push(ip + 3 + bc[ip + 1] + bc[ip + 2]);\n\n              if (stack[stack.length - 1] === peg$FAILED) {\n                end = ip + 3 + bc[ip + 1];\n                ip += 3;\n              } else {\n                end = ip + 3 + bc[ip + 1] + bc[ip + 2];\n                ip += 3 + bc[ip + 1];\n              }\n\n              break;\n\n            case 11:\n              ends.push(end);\n              ips.push(ip + 3 + bc[ip + 1] + bc[ip + 2]);\n\n              if (stack[stack.length - 1] !== peg$FAILED) {\n                end = ip + 3 + bc[ip + 1];\n                ip += 3;\n              } else {\n                end = ip + 3 + bc[ip + 1] + bc[ip + 2];\n                ip += 3 + bc[ip + 1];\n              }\n\n              break;\n\n            case 12:\n              if (stack[stack.length - 1] !== peg$FAILED) {\n                ends.push(end);\n                ips.push(ip);\n\n                end = ip + 2 + bc[ip + 1];\n                ip += 2;\n              } else {\n                ip += 2 + bc[ip + 1];\n              }\n\n              break;\n\n            case 13:\n              ends.push(end);\n              ips.push(ip + 3 + bc[ip + 1] + bc[ip + 2]);\n\n              if (input.length > peg$currPos) {\n                end = ip + 3 + bc[ip + 1];\n                ip += 3;\n              } else {\n                end = ip + 3 + bc[ip + 1] + bc[ip + 2];\n                ip += 3 + bc[ip + 1];\n              }\n\n              break;\n\n            case 14:\n              ends.push(end);\n              ips.push(ip + 4 + bc[ip + 2] + bc[ip + 3]);\n\n              if (input.substr(peg$currPos, peg$consts[bc[ip + 1]].length) === peg$consts[bc[ip + 1]]) {\n                end = ip + 4 + bc[ip + 2];\n                ip += 4;\n              } else {\n                end = ip + 4 + bc[ip + 2] + bc[ip + 3];\n                ip += 4 + bc[ip + 2];\n              }\n\n              break;\n\n            case 15:\n              ends.push(end);\n              ips.push(ip + 4 + bc[ip + 2] + bc[ip + 3]);\n\n              if (input.substr(peg$currPos, peg$consts[bc[ip + 1]].length).toLowerCase() === peg$consts[bc[ip + 1]]) {\n                end = ip + 4 + bc[ip + 2];\n                ip += 4;\n              } else {\n                end = ip + 4 + bc[ip + 2] + bc[ip + 3];\n                ip += 4 + bc[ip + 2];\n              }\n\n              break;\n\n            case 16:\n              ends.push(end);\n              ips.push(ip + 4 + bc[ip + 2] + bc[ip + 3]);\n\n              if (peg$consts[bc[ip + 1]].test(input.charAt(peg$currPos))) {\n                end = ip + 4 + bc[ip + 2];\n                ip += 4;\n              } else {\n                end = ip + 4 + bc[ip + 2] + bc[ip + 3];\n                ip += 4 + bc[ip + 2];\n              }\n\n              break;\n\n            case 17:\n              stack.push(input.substr(peg$currPos, bc[ip + 1]));\n              peg$currPos += bc[ip + 1];\n              ip += 2;\n              break;\n\n            case 18:\n              stack.push(peg$consts[bc[ip + 1]]);\n              peg$currPos += peg$consts[bc[ip + 1]].length;\n              ip += 2;\n              break;\n\n            case 19:\n              stack.push(peg$FAILED);\n              if (peg$silentFails === 0) {\n                peg$fail(peg$consts[bc[ip + 1]]);\n              }\n              ip += 2;\n              break;\n\n            case 20:\n              peg$reportedPos = stack[stack.length - 1 - bc[ip + 1]];\n              ip += 2;\n              break;\n\n            case 21:\n              peg$reportedPos = peg$currPos;\n              ip++;\n              break;\n\n            case 22:\n              params = bc.slice(ip + 4, ip + 4 + bc[ip + 3]);\n              for (i = 0; i < bc[ip + 3]; i++) {\n                params[i] = stack[stack.length - 1 - params[i]];\n              }\n\n              stack.splice(\n                stack.length - bc[ip + 2],\n                bc[ip + 2],\n                peg$consts[bc[ip + 1]].apply(null, params)\n              );\n\n              ip += 4 + bc[ip + 3];\n              break;\n\n            case 23:\n              stack.push(peg$parseRule(bc[ip + 1]));\n              ip += 2;\n              break;\n\n            case 24:\n              peg$silentFails++;\n              ip++;\n              break;\n\n            case 25:\n              peg$silentFails--;\n              ip++;\n              break;\n\n            default:\n              throw new Error(\"Invalid opcode: \" + bc[ip] + \".\");\n          }\n        }\n\n        if (ends.length > 0) {\n          end = ends.pop();\n          ip = ips.pop();\n        } else {\n          break;\n        }\n      }\n\n      return stack[0];\n    }\n\n    var data = {};\n\n    peg$result = peg$parseRule(peg$startRuleIndex);\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return data;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      return -1;\n    }\n  }\n\n  return {\n    SyntaxError: SyntaxError,\n    parse:       function (input, startRule) {return parse(input, {startRule: startRule});}\n  };\n};\n/* jshint ignore:end */\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sip.js/src/Grammar/dist/Grammar.js\n ** module id = 34\n ** module chunks = 0\n **/","var EventEmitter = function() {\n    this.handlers = {};\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nEventEmitter.prototype.emit = function(name /*, args */) {\n    var self = this, args = Array.prototype.slice.call(arguments, 1);\n    if (name in this.handlers) {\n        var list = this.handlers[name];\n        for (var i = 0; i < list.length; i++) {\n            setTimeout(executeListener(list[i]), 0);\n        }\n    }\n    function executeListener(listener) {\n        return function() {\n            listener.apply(self, args);\n        }\n    }\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nEventEmitter.prototype.on = function(name, listener) {\n    if (!Array.isArray(name)) name = [name];\n    for (var i = 0; i < name.length; i++) {\n        this.handlers[name[i]] = this.handlers[name[i]] || [];\n        var list = this.handlers[name[i]];\n        list.push(listener);\n    }\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nEventEmitter.prototype.off = function(name, listener) {\n    this.handlers[name] = this.handlers[name] || [];\n    var index = this.handlers[name].indexOf(listener);\n    if (index !== -1) {\n        this.handlers[name].splice(index, 1);\n    }\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\nEventEmitter.prototype.once = function(name, listener) {\n    var self = this;\n\n    function listenOnce() {\n        listener.apply(this, arguments);\n        self.off(name, listenOnce);\n    }\n\n    self.on(name, listenOnce);\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\n//FIXME Remove Angular-specific\n//monkey patching emit for assuring that $apply is called\nvar __emit = EventEmitter.prototype.emit;\nEventEmitter.prototype.emit = function() {\n    var self = this, args = arguments;\n    setTimeout(function() {\n        __emit.apply(self, args);\n    });\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nmodule.exports = EventEmitter;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/emitter.js\n ** module id = 35\n ** module chunks = 0\n **/","var SIP = require('sip.js');\nvar EventEmitter = require('./emitter');\nvar PhoneLine = require('./phoneLine');\nvar utils = require('./utils');\n\nvar extend = utils.extend;\nvar uuid = utils.uuid;\n\nvar EVENT_NAMES = require('./eventNames');\nvar DomAudio = require('./dom');\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\n/**\n * @param options\n * @constructor\n */\nvar UserAgent = function(options) {\n    this.eventEmitter = new EventEmitter();\n    this.sipConfig = options ? (options.sipConfig || {}) : ({});\n    this.lines = {};\n    this.userAgent = undefined;\n    this.getUserMedia = undefined;\n    this.RTCPeerConnection = undefined;\n    this.RTCSessionDescription = undefined;\n    this.dom = new DomAudio();\n    this._x_userAgent = '';\n    this._client_id = '';\n    this.checkConfig();\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nUserAgent.prototype.checkConfig = function() {\n    // set mootools expands to non-enumerables under ES5\n    if (typeof this.sipConfig.wsServers === 'string') {\n        this.sipConfig.wsServers = [\n            {ws_uri: this.sipConfig.wsServers}\n        ];\n    }\n    var key, enums = {enumerable: false};\n    for (key in this.sipConfig.wsServers) this.sipConfig.wsServers.hasOwnProperty(key) || Object.defineProperty(Array.prototype, key, enums);\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nUserAgent.prototype.setSIPConfig = function(config) {\n    var wsServers = config.wsServers,\n        useSecureConnection = (document.location.protocol == 'https:');\n\n    for (var i = 0; i < wsServers.length; i++) {\n        if (\n            (useSecureConnection && /^wss:/.test(wsServers[i]))\n            ||\n            (!useSecureConnection && /^ws:/.test(wsServers[i]))\n        ) {\n            config.wsServers = [wsServers[i]];\n            break;\n        }\n    }\n\n    this.sipConfig = config;\n    this._x_userAgent = config.headers[1];\n    this._client_id =  config.headers[2]\n    this.checkConfig();\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nUserAgent.prototype.__createLine = function(session, type) {\n    var self = this;\n    session.data.id = uuid();\n    self.eventEmitter.emit(EVENT_NAMES.sipRTCSession, session);\n    var line = new PhoneLine({\n        session: session,\n        userAgent: self,\n        instanceId: self.sipConfig.authorizationUser,\n        eventEmitter: self.eventEmitter,\n        type: type,\n        _x_userAgent: self._x_userAgent,\n        _client_id : self._client_id\n    });\n    self.__clearInactiveLines();\n    self.lines[session.data.id] = line;\n    return line;\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nUserAgent.prototype.getActiveLines = function() {\n    this.__clearInactiveLines();\n    return this.lines;\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nUserAgent.prototype.getActiveLinesArray = function() {\n    var lines = this.getActiveLines();\n    var arr = [];\n    for (var id in lines) {\n        if (lines.hasOwnProperty(id)) {\n            arr.push(lines[id]);\n        }\n    }\n    return arr;\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nUserAgent.prototype.getIncomingLinesArray = function() {\n    return this.getActiveLinesArray().filter(function(el) {\n        return el.isIncoming();\n    });\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nUserAgent.prototype.__clearInactiveLines = function() {\n    for (var id in this.lines) {\n        if (this.lines.hasOwnProperty(id)) {\n            if (this.lines[id].isClosed()) {\n                delete this.lines[id];\n            }\n        }\n    }\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nvar __disconnectCount = 0;\n\n\nUserAgent.prototype.start = function(options) {\n    var self = this;\n\n    self.stop();\n    if (self.userAgent instanceof SIP.UA) {\n        self.userAgent.loadConfig(self.sipConfig);\n        self.userAgent.traceSip = true;\n    }\n    else {\n        self.userAgent = new SIP.UA(self.sipConfig);\n        self.__registerExtraOptions = options || {};\n        self.userAgent.on('connected', function(e) {\n            __disconnectCount = 0;\n            self.eventEmitter.emit(EVENT_NAMES.sipConnected, e);\n            self.userAgent.register({\n                extraHeaders: options.extraHeaders || []\n            });\n        });\n        self.userAgent.on('disconnected', function(e) {\n            if (++__disconnectCount >= (self.sipConfig.retryCount || 3)) {\n                __disconnectCount = 0;\n                self.stop();\n                self.eventEmitter.emit(EVENT_NAMES.sipConnectionFailed, new Error(\"Unable to connect to the WS server: exceeded number of attempts\"));\n            }\n            self.eventEmitter.emit(EVENT_NAMES.sipDisconnected, e);\n        });\n        self.userAgent.on('registered', function(e) {\n            self.eventEmitter.emit(EVENT_NAMES.sipRegistered, e);\n        });\n        self.userAgent.on('unregistered', function(e) {\n            self.eventEmitter.emit(EVENT_NAMES.sipUnRegistered, e);\n        });\n        self.userAgent.on('registrationFailed', function(e) {\n            self.eventEmitter.emit(EVENT_NAMES.sipRegistrationFailed, e);\n        });\n        //happens when call is incoming\n        self.userAgent.on('invite', function(session) {\n            var newLine;\n\n            if (session && session.request && session.request.hasHeader('replaces')) {\n                var replaces = session.request.getHeader('replaces').split(';'),\n                    callId = replaces[0],\n                    lines = self.getActiveLinesArray(),\n                    foundLine = null;\n                for (var i = 0; i < lines.length; i++) {\n                    if (lines[i].session.request.call_id) {\n                        if (callId === lines[i].session.request.call_id) {\n                            foundLine = lines[i];\n                            break;\n                        }\n                    }\n                }\n\n                if (foundLine) {\n                    var originalSessionId = foundLine.getId();\n                    newLine = self.__createLine(session, PhoneLine.types.incoming);\n                    newLine.answer().then(function() {\n                        self.eventEmitter.emit(EVENT_NAMES.callReplaced, newLine, foundLine);\n                        foundLine.cancel();\n                    });\n                }\n            }\n            else {\n                newLine = self.__createLine(session, PhoneLine.types.incoming);\n                self.eventEmitter.emit(EVENT_NAMES.sipIncomingCall, newLine);\n            }\n        });\n    }\n    //noop on transport connected (this will cause unwanted REGISTER)\n    self.userAgent.registerContext.onTransportConnected = function() {};\n    self.userAgent.start();\n\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nUserAgent.prototype.reregister = function(options, reconnect) {\n    var self = this, reconnect = !!reconnect;\n    options = extend(self.__registerExtraOptions, options);\n    if (!self.userAgent) {\n        self.start(options);\n    }\n    if (!reconnect) {\n        self.userAgent.register(options);\n    }\n    else {\n        if (!self.isConnected()) {\n            self.stop();\n            self.start(options);\n        }\n        else {\n            //This will be treated as abrupt disconnection and SIP.js will try to reconnect the WS\n            self.userAgent.transport.ws.close();\n        }\n    }\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nUserAgent.prototype.stop = function() {\n    if (this.userAgent instanceof SIP.UA) {\n        this.userAgent.stop();\n        this.userAgent = null;\n    }\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nUserAgent.prototype.call = function(number, inviteOptions) {\n    var self = this;\n    var options = {\n        media: {\n            constraints: {audio: true, video: false},\n            render: {\n                local: {\n                    audio: self.dom.localAudio\n                },\n                remote: {\n                    audio: self.dom.remoteAudio\n                }\n            }\n        },\n        RTCConstraints: {\n            \"optional\": [\n                {'DtlsSrtpKeyAgreement': 'true'}\n            ]\n        }\n    };\n    var fromNumber = inviteOptions.fromNumber;\n    var country = inviteOptions.country;\n\n    var headers = [];\n    if (fromNumber) {\n        headers.push('P-Asserted-Identity: sip:' + fromNumber + '@' + this.sipConfig.domain);\n    }\n    if (country) {\n        headers.push('P-rc-country-id: ' + country);\n    }\n\n    headers.push(self._x_userAgent);\n    headers.push(self._client_id);\n\n    extend(options, {\n        extraHeaders: headers\n    });\n    var session = this.userAgent.invite('' + number, options);\n    var line = self.__createLine(session, PhoneLine.types.outgoing);\n    this.eventEmitter.emit(EVENT_NAMES.outgoingCall, line);\n    return line;\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nUserAgent.prototype.answer = function(line) {\n    return line && line.answer();\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\n\nUserAgent.prototype.hangup = function(line) {\n    if (line) {\n        line.cancel();\n        delete this.lines[line.getId()];\n    }\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nUserAgent.prototype.on = function(eventName, cb) {\n    this.eventEmitter.on(eventName, cb);\n    return this;\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nUserAgent.prototype.isConnected = function() {\n    return !!(this.userAgent && this.userAgent.transport && this.userAgent.transport.connected);\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nUserAgent.prototype.isConnecting = function() {\n    //websocket.readyState === CONNECTING (0)\n    return !this.isConnected() && !!(this.userAgent && this.userAgent.transport && this.userAgent.transport.ws && this.userAgent.transport.ws.readyState === 0);\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nUserAgent.prototype.forceDisconnect = function() {\n    console.warn(this.isConnecting(), this.isConnected())\n    if (this.isConnecting() || this.isConnected()) {\n        this.userAgent.transport.disconnect();\n        this.userAgent.stop();\n        this.userAgent = null;\n    }\n};\n\nmodule.exports = UserAgent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/userAgent.js\n ** module id = 36\n ** module chunks = 0\n **/","var SIP = require('sip.js');\nvar utils = require('./utils');\nvar EVENT_NAMES = require('./eventNames');\n\nvar delay = utils.delay;\nvar extend = utils.extend;\n\nvar index = 0;\n\n/**\n * @param options\n * @constructor\n */\nvar PhoneLine = function(options) {\n\n    var self = this;\n    this.index = index++;\n\n    this.session = options.session;\n    this.userAgent = options.userAgent;\n    this.eventEmitter = options.eventEmitter;\n    this.instanceId = options.instanceId;\n    this.sessionId = this.session && this.session.id;\n\n    this.onCall = false;\n    this.onRecord = false;\n    this.contact = {};\n    this.muted = false;\n    this.bothMuted = false;\n    this.onHold = false;\n    this.timeCallStarted = null;\n\n    this.accepted = false;\n    this.type = options.type;\n\n    this._x_userAgent = options._x_userAgent;\n    this._client_id = options._client_id;\n\n    this.responseTimeout = 10000;\n\n    this.controlSender = {\n        messages: {\n            park: {reqid: 1, command: 'callpark'},\n            startRecord: {reqid: 2, command: 'startcallrecord'},\n            stopRecord: {reqid: 3, command: 'stopcallrecord'},\n            flip: {reqid: 3, command: 'callflip', target: ''},\n            monitor: {reqid: 4, command: 'monitor'},\n            barge: {reqid: 5, command: 'barge'},\n            whisper: {reqid: 6, command: 'whisper'},\n            takeover: {reqid: 7, command: 'takeover'}\n        },\n        send: function(command, options) {\n\n            options = options || {};\n            extend(command, options);\n\n            var cseq = null;\n\n            return new Promise(function(resolve, reject){\n\n                var headers = [];\n\n                headers.push('Content-Type: application/json;charset=utf-8');\n                headers.push(self._x_userAgent);\n                headers.push(self._client_id);\n\n                self.session.sendRequest(SIP.C.INFO, {\n                    body: JSON.stringify({\n                        request: command\n                    }),\n                    extraHeaders: headers,\n                    receiveResponse: function(response) {\n                        var timeout = null;\n                        if (response.status_code === 200) {\n                            cseq = response.cseq;\n                            function onInfo(request) {\n                                if (response.cseq === cseq) {\n                                    var body = request && request.body || '{}';\n                                    var obj;\n\n                                    try {\n                                        obj = JSON.parse(body);\n                                    }\n                                    catch (e) {\n                                        obj = {};\n                                    }\n\n                                    if (obj.response && obj.response.command === command.command) {\n                                        if (obj.response.result) {\n                                            if (obj.response.result.code == 0) {\n                                                resolve(obj.response.result);\n                                            }\n                                            else {\n                                                reject(obj.response.result);\n                                            }\n                                        }\n                                    }\n                                    timeout && clearTimeout(timeout);\n                                    self.eventEmitter.off('SIP_INFO', onInfo);\n                                    resolve(); //FIXME What to resolve\n                                }\n                            }\n\n                            timeout = setTimeout(function() {\n                                reject(new Error('Timeout: no reply'));\n                                self.eventEmitter.off('SIP_INFO', onInfo);\n                            }, self.responseTimeout);\n                            self.eventEmitter.on('SIP_INFO', onInfo);\n                        }\n                        else {\n                            reject(new Error('The INFO response status code is: ' + response.status_code + ' (waiting for 200)'));\n                        }\n                    }\n                });\n\n            });\n        }\n    };\n\n    /*--------------------------------------------------------------------------------------------------------------------*/\n\n    var __receiveRequest = this.session.receiveRequest;\n    this.session.receiveRequest = function(request) {\n        switch (request.method) {\n            case SIP.C.INFO:\n                self.eventEmitter.emit('SIP_INFO', request);\n                //SIP.js does not support application/json content type, so we monkey override its behaviour in this case\n                if (this.status === SIP.Session.C.STATUS_CONFIRMED || this.status === SIP.Session.C.STATUS_WAITING_FOR_ACK) {\n                    var contentType = request.getHeader('content-type');\n                    if (contentType.match(/^application\\/json/i)) {\n                        request.reply(200);\n                        return this;\n                    }\n                }\n                break;\n            //Refresh invite should not be rejected with 488\n            case SIP.C.INVITE:\n                var session = this;\n                if (session.status === SIP.Session.C.STATUS_CONFIRMED) {\n                    if (request.call_id && session.dialog && session.dialog.id && request.call_id == session.dialog.id.call_id) {\n                        //TODO: check that SDP did not change\n                        session.logger.log('re-INVITE received');\n                        var localSDP = session.mediaHandler.peerConnection.localDescription.sdp;\n                        request.reply(200, null, ['Contact: ' + self.contact], localSDP, function() {\n                            session.status = SIP.Session.C.STATUS_WAITING_FOR_ACK;\n                            session.setInvite2xxTimer(request, localSDP);\n                            session.setACKTimer();\n                        });\n                        return session;\n                    }\n                    //else will be rejected with 488 by SIP.js\n                }\n                break;\n            //We need to analize NOTIFY messages sometimes, so we fire an event\n            case SIP.C.NOTIFY:\n                self.eventEmitter.emit('SIP_NOTIFY', request);\n                break;\n        }\n        return __receiveRequest.apply(self.session, arguments);\n    };\n\n    /*--------------------------------------------------------------------------------------------------------------------*/\n\n    //Fired when ICE is starting to negotiate between the peers.\n    this.session.on('connecting', function(e) {\n        self.eventEmitter.emit(EVENT_NAMES.callConnecting, self, e);\n        setTimeout(function() {\n            if (self.session.mediaHandler.onIceCompleted !== undefined) {\n                self.session.mediaHandler.onIceCompleted(self.session);\n            }\n            else {\n                self.session.mediaHandler.callOnIceCompleted = true;\n            }\n        }, self.userAgent.sipConfig['iceGatheringTimeout'] || 3000);\n    });\n\n    this.__hasEarlyMedia = false;\n\n    /*--------------------------------------------------------------------------------------------------------------------*/\n\n\n    //Monkey patching for handling early media and to delay ACKs\n    var __receiveInviteReponse = this.session.receiveInviteResponse,\n        __waitingForIce = false;\n    this.session.receiveResponse = this.session.receiveInviteResponse = function(response) {\n        var sessionSelf = this, args = arguments;\n        switch (true) {\n            case (/^1[0-9]{2}$/.test(response.status_code)):\n                //Let's not allow the library to send PRACK\n                if (self.hasEarlyMedia()) {\n                    this.emit('progress', response);\n                    return;\n                }\n                break;\n            case /^(2[0-9]{2})|(4\\d{2})$/.test(response.status_code):\n                if (!self.hasEarlyMedia()) break;\n\n                //Let's check the ICE connection state\n                if (self.session.mediaHandler.peerConnection.iceConnectionState === 'completed' && !__waitingForIce) {\n                    __waitingForIce = false;\n                    //if ICE is connected, then let the library to handle the ACK\n                    break;\n                }\n                else {\n                    //If ICE is not connected, then we should send ACK after it has been connected\n                    if (!__waitingForIce) {\n                        self.eventEmitter.once(EVENT_NAMES.ICECompleted, function() {\n                            //let the library handle the ACK after ICE connection is completed\n                            __waitingForIce = false;\n                            __receiveInviteReponse.apply(sessionSelf, args);\n                        });\n\n                        self.eventEmitter.once(EVENT_NAMES.ICEFailed, function() {\n                            //handle the ICE Failed situation\n                            __waitingForIce = false;\n                            self.session.acceptAndTerminate(response, null, 'ICE Connection Failed');\n                        });\n\n                        __waitingForIce = true;\n                    }\n                    return;\n                }\n                break;\n        }\n        return __receiveInviteReponse.apply(sessionSelf, args);\n    };\n\n    /*--------------------------------------------------------------------------------------------------------------------*/\n\n    //Fired each time a provisional (100-199) response is received.\n    this.session.on('progress', function(e) {\n        self.onCall = true;\n\n        //Early media is supported by SIP.js library\n        //But in case it is sent without 100rel support we play it manually\n        //STATUS_EARLY_MEDIA === 11, it will be set by SIP.js if 100rel is supported\n        if (self.session.status !== SIP.Session.C.STATUS_EARLY_MEDIA && e.status_code === 183 && typeof(e.body) === 'string' && e.body.indexOf('\\n') !== -1) {\n            var session = self.session,\n                response = e;\n\n            if (session.hasOffer) {\n                if (!session.createDialog(response, 'UAC')) {\n                    return;\n                }\n                session.hasAnswer = true;\n                session.mediaHandler.setDescription(\n                    response.body,\n                    function() {\n                        session.dialog.pracked.push(response.getHeader('rseq'));\n                        session.status = SIP.Session.C.STATUS_EARLY_MEDIA;\n                        session.mute();\n                        self.__hasEarlyMedia = true;\n                        self.eventEmitter.emit(EVENT_NAMES.callProgress, self, e);\n                    },\n                    function(e) {\n                        session.logger.warn(e);\n                        session.acceptAndTerminate(response, 488, 'Not Acceptable Here');\n                        session.failed(response, SIP.C.causes.BAD_MEDIA_DESCRIPTION);\n                    }\n                );\n            }\n        }\n    });\n\n    /*--------------------------------------------------------------------------------------------------------------------*/\n\n    //Fired each time a successful final (200-299) response is received.\n    this.session.on('accepted', function(e) {\n        if (self.accepted === true) return;\n        self.onCall = true;\n        self.accepted = true;\n        self.timeCallStarted = new Date();\n        self.eventEmitter.emit(EVENT_NAMES.callStarted, self, e);\n    });\n\n\n    /*--------------------------------------------------------------------------------------------------------------------*/\n\n    function onEnd() {\n        self.onCall = false;\n        self.timeCallStarted = null;\n        self.accepted = true;\n    }\n\n    /*--------------------------------------------------------------------------------------------------------------------*/\n    //Fired each time an unsuccessful final (300-699) response is\n    //this will emit failed event\n    this.session.on('rejected', function(e) {\n        onEnd();\n        self.eventEmitter.emit(EVENT_NAMES.callRejected, self, e);\n        //terminated is not called by SIP.js when the call is rejected\n        //self.eventEmitter.emit(EVENT_NAMES.callTerminated, self, e);\n    });\n\n    /*--------------------------------------------------------------------------------------------------------------------*/\n\n    //Fired when the session was canceled by the client\n    this.session.on('cancel', function(e) {\n        onEnd();\n        self.eventEmitter.emit(EVENT_NAMES.callEnded, self, e);\n    });\n\n    /*--------------------------------------------------------------------------------------------------------------------*/\n\n    //Fired when a BYE is sent\n    this.session.on('bye', function(e) {\n        onEnd();\n        self.eventEmitter.emit(EVENT_NAMES.callEnded, self, e);\n    });\n\n    /*--------------------------------------------------------------------------------------------------------------------*/\n\n    //Fired when the request fails, whether due to an unsuccessful final response or due to timeout, transport, or other error\n    this.session.on('failed', function(response, cause) {\n        this.terminated(null, cause);\n        onEnd();\n        self.eventEmitter.emit(EVENT_NAMES.callFailed, self, response, cause);\n        //SIP.js 0.6.x does not call terminated event sometimes, so we call it ourselves\n        if (cause === SIP.C.causes.REQUEST_TIMEOUT) {\n            //this === session\n            if (this.status !== SIP.Session.C.STATUS_CONFIRMED) {\n                this.terminated(null, SIP.C.causes.REQUEST_TIMEOUT);\n            }\n        }\n    });\n\n    /*--------------------------------------------------------------------------------------------------------------------*/\n\n    this.session.on('terminated', function(response, cause) {\n        onEnd();\n        self.eventEmitter.emit(EVENT_NAMES.callTerminated, self, response, cause);\n    });\n\n    /*--------------------------------------------------------------------------------------------------------------------*/\n\n    function terminateCallOnDisconnected(reason) {\n        self.session.terminated(null, reason || SIP.C.causes.CONNECTION_ERROR);\n        onEnd();\n        self.eventEmitter.emit(EVENT_NAMES.callFailed, self, null, 'Connection error');\n    }\n\n    /*--------------------------------------------------------------------------------------------------------------------*/\n//FIXME: Explore if it can be replaced with ref: http://sipjs.com/api/0.7.0/mediaHandler/\n\n    //Monkey patching oniceconnectionstatechange because SIP.js 0.6.x does not have this event\n    var onStateChange = this.session.mediaHandler.peerConnection.oniceconnectionstatechange || function(){},\n        __doubleCompleted = false;\n    this.session.mediaHandler.peerConnection.oniceconnectionstatechange = function() {\n        //this === peerConnection\n        var state = this.iceConnectionState;\n        onStateChange.apply(this, arguments);\n\n        switch (state) {\n            case 'connected':\n                self.eventEmitter.emit(EVENT_NAMES.ICEConnected, self);\n                break;\n            case 'completed':\n                //this may be called twice, see: https://code.google.com/p/chromium/issues/detail?id=371804\n                if (!__doubleCompleted) {\n                    self.eventEmitter.emit(EVENT_NAMES.ICECompleted, self);\n                    __doubleCompleted = true;\n                }\n                break;\n            case 'disconnected':\n                terminateCallOnDisconnected();\n                self.eventEmitter.emit(EVENT_NAMES.ICEDisconnected, self);\n                break;\n            case 'failed':\n                self.eventEmitter.emit(EVENT_NAMES.ICEFailed, self);\n                break;\n        }\n    };\n\n    /*--------------------------------------------------------------------------------------------------------------------*/\n\n    var __ignoreReinviteDuplicates = false;\n\n    //Monkey patching sendReinvite for better Hold handling\n    var __sendReinvite = this.session.sendReinvite;\n    this.session.sendReinvite = function() {\n        __ignoreReinviteDuplicates = false;\n        var res = __sendReinvite.apply(this, arguments);\n        var __reinviteSucceeded = this.reinviteSucceeded,\n            __reinviteFailed = this.reinviteFailed;\n        this.reinviteSucceeded = function() {\n            self.eventEmitter.emit(EVENT_NAMES.callReinviteSucceeded, self);\n            return __reinviteSucceeded.apply(this, []);\n        };\n        this.reinviteFailed = function() {\n            self.eventEmitter.emit(EVENT_NAMES.callReinviteFailed, self);\n            return __reinviteFailed.apply(this, []);\n        };\n        return res;\n    };\n\n    /*--------------------------------------------------------------------------------------------------------------------*/\n\n    //Monkey patching receiveReinviteResponse to ignore duplicates which may break Hold/Unhold\n    var __receiveReinviteResponse = this.session.receiveReinviteResponse;\n    this.session.receiveReinviteResponse = function(response) {\n        switch (true) {\n            case /^2[0-9]{2}$/.test(response.status_code):\n                if (__ignoreReinviteDuplicates) {\n                    this.sendRequest(SIP.C.ACK, {cseq: response.cseq});\n                    return;\n                }\n                __ignoreReinviteDuplicates = true;\n                break;\n        }\n        return __receiveReinviteResponse.apply(this, arguments);\n    };\n\n    /*--------------------------------------------------------------------------------------------------------------------*/\n\n    //defining if the session is incoming or outgoing\n    if (this.type === PhoneLine.types.incoming) {\n        this.contact.name = this.session.request.from.uri.displayName;\n        this.contact.number = this.session.request.from.uri.user;\n\n    } else {\n        if (this.type === PhoneLine.types.outgoing) {\n            this.contact.name = this.session.request.to.uri.displayName;\n            this.contact.number = this.session.request.to.uri.user;\n        }\n    }\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nPhoneLine.types = {\n    incoming: 'incoming',\n    outgoing: 'outgoing'\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nPhoneLine.prototype.getId = function() {\n    return this.session.data.id;\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nPhoneLine.prototype.getSession = function() {\n    return this.session;\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nPhoneLine.prototype.cancel = function() {\n    var session = this.getSession();\n    return new Promise(function(resolve, reject) {\n        session.terminate({statusCode: 486});\n        resolve();\n    });\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nPhoneLine.prototype.record = function(val) {\n    var self = this;\n    return new Promise(function(resolve, reject){\n        if (self.onCall) {\n            var message = !!val\n                ? self.controlSender.messages.startRecord\n                : self.controlSender.messages.stopRecord;\n\n            if ((self.onRecord && !val) || (!self.onRecord && val)) {\n                return self.controlSender.send(message)\n                    .then(function(data) {\n                        self.onRecord = !!val;\n                        return data;\n                    });\n            }\n        }\n        else {\n            reject(new Error('No line or no active line'));\n        }\n    });\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nPhoneLine.prototype.flip = function(target) {\n    var self = this;\n\n    return new Promise(function(resolve, reject){\n        if (!target) return;\n        if (self.onCall) {\n            return self.controlSender.send(self.controlSender.messages.flip, {\n                target: target\n            });\n        }\n        else {\n           reject(new Error('No line or no active line'));\n        }\n    });\n};\n\nPhoneLine.prototype.park = function() {\n\n    var self = this;\n    return new Promise(function(resolve, reject){\n        if (self.onCall) {\n            resolve(self.controlSender.send(self.controlSender.messages.park));\n        }\n        else\n            reject(new Error('No line or no active line'));\n    });\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n// Explore ref: http://sipjs.com/api/0.6.0/session/#dtmftone-options\n\nPhoneLine.prototype.sendDTMF = function(value, duration) {\n    var self = this;\n    return new Promise(function(resolve, reject){\n        if(self.onCall) {\n            duration = parseInt(duration) || 1000;\n            var peer = self.session.mediaHandler.peerConnection;\n            var stream = self.session.getLocalStreams()[0];\n            var dtmfSender = peer.createDTMFSender(stream.getAudioTracks()[0]);\n            if (dtmfSender !== undefined && dtmfSender.canInsertDTMF) {\n                dtmfSender.insertDTMF(value, duration);\n            }\n            resolve();\n        }\n        else\n            reject(new Error('No line or no active line'));\n    });\n};\n\n/*\nCurrently not supported\n */\nPhoneLine.prototype.sendInfoDTMF = function(value, duration) {\n    var session = this.session;\n    return new Promise(function(resolve, reject) {\n        duration = parseInt(duration) || 1000;\n        session.dtmf(value.toString(), {\n            duration: duration\n        });\n        resolve();\n    });\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nPhoneLine.prototype.blindTransfer = function(target, options) {\n    var session = this.session;\n    var self = this;\n    var extraHeaders = [];\n    var originalTarget = target;\n    options = options || {};\n\n    return new Promise(function(resolve, reject){\n        //Blind Transfer is taken from SIP.js source\n\n        // Check Session Status\n        if (session.status !== SIP.Session.C.STATUS_CONFIRMED) {\n            reject(new SIP.Exceptions.InvalidStateError(session.status));\n        }\n\n        // normalizeTarget allows instances of SIP.URI to pass through unaltered,\n        // so try to make one ahead of time\n        try {\n            target = SIP.Grammar.parse(target, 'Refer_To').uri || target;\n        } catch (e) {\n            session.logger.debug(\".refer() cannot parse Refer_To from\", target);\n            session.logger.debug(\"...falling through to normalizeTarget()\");\n        }\n\n        // Check target validity\n        target = session.ua.normalizeTarget(target);\n        if (!target) {\n            throw new TypeError('Invalid target: ' + originalTarget);\n        }\n\n        extraHeaders.push('Contact: ' + session.contact);\n        extraHeaders.push('Allow: ' + SIP.Utils.getAllowedMethods(session.ua));\n        extraHeaders.push('Refer-To: ' + target);\n        extraHeaders.push('x-user-agent:'+self._x_userAgent);\n        extraHeaders.push('client-id'+self._x_userAgent);\n\n\n        // Send the request\n        session.sendRequest(SIP.C.REFER, {\n            extraHeaders: extraHeaders,\n            body: options.body,\n            receiveResponse: function(response) {\n                var timeout = null;\n                if (response.status_code === 202) {\n                    var callId = response.call_id;\n\n                    function onNotify(request) {\n                        if (request.call_id === callId) {\n                            var body = request && request.body || '';\n                            switch (true) {\n                                case /1[0-9]{2}/.test(body):\n                                    request.reply(200);\n                                    break;\n                                case /2[0-9]{2}/.test(body):\n                                    self.session.terminate();\n                                    clearTimeout(timeout);\n                                    self.eventEmitter.off('SIP_NOTIFY', onNotify);\n                                    resolve();\n                                    break;\n                                default:\n                                    reject(body);\n                                    break;\n                            }\n                        }\n                    }\n\n                    timeout = setTimeout(function() {\n                        reject(new Error('Timeout: no reply'));\n                        self.eventEmitter.off('SIP_NOTIFY', onNotify);\n                    }, self.responseTimeout);\n                    self.eventEmitter.on('SIP_NOTIFY', onNotify);\n                }\n                else {\n                    reject(new Error('The response status code is: ' + response.status_code + ' (waiting for 202)'));\n                }\n            }\n        });\n\n    });\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nPhoneLine.prototype.transfer = function(target, options) {\n    var self = this;\n    return (self.onHold ? Promise.resolve(null) : self.setHold(true)).then(function(){ return delay(300); }).then(function() {\n        return self.blindTransfer(target, options);\n    });\n};\n\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nPhoneLine.prototype.forward = function(target, options) {\n    var self = this, interval = null;\n    return self.answer().then(function() {\n        return new Promise(function(resolve, reject){\n            interval = setInterval(function() {\n                if (self.session.status === 12) {\n                    clearInterval(interval);\n                    self.setMute(true);\n                    setTimeout(function() {\n                        self.transfer(target, options);\n                        resolve();\n                    }, 700);\n                }\n            }, 50);\n        });\n    });\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n//ref: http://sipjs.com/api/0.6.0/session/#acceptoptions\n//make var option = {}\n\nPhoneLine.prototype.answer = function() {\n    var self = this;\n\n    return new Promise(function(resolve, reject){\n\n        function onAnswered() {\n            resolve();\n            self.eventEmitter.off(EVENT_NAMES.callStarted, onAnswered);\n            self.eventEmitter.off(EVENT_NAMES.callFailed, onFail);\n        }\n\n        function onFail(e) {\n            reject(e);\n            self.eventEmitter.off(EVENT_NAMES.callStarted, onAnswered);\n            self.eventEmitter.off(EVENT_NAMES.callFailed, onFail);\n        }\n\n        self.eventEmitter.on(EVENT_NAMES.callStarted, onAnswered);\n        self.eventEmitter.on(EVENT_NAMES.callFailed, onFail);\n\n        self.eventEmitter.emit(EVENT_NAMES.callProgress, self);\n\n        self.session.accept({\n            media: {\n                constraints: {audio: true, video: false},\n                render: {\n                    local: {\n                        audio: self.userAgent.dom.localAudio\n                    },\n                    remote: {\n                        audio: self.userAgent.dom.remoteAudio\n                    }\n                }\n            }\n        });\n\n    });\n\n};\n\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\n//FIXME: Use SIPJS mute() and unmute() ref: http://sipjs.com/api/0.7.0/session/#muteoptions\n\nPhoneLine.prototype.setMute = function(val) {\n    var self = this;\n    return new Promise(function(resolve, reject) {\n        self.muted = !!val;\n        if (self.onCall) {\n            setStreamMute(self.session.getLocalStreams()[0], self.muted);\n            val ? self.eventEmitter.emit(EVENT_NAMES.callMute, self) : self.eventEmitter.emit(EVENT_NAMES.callUnmute, self);\n            resolve();\n        }\n        else\n            reject(new Error('No line or no active line'));\n    });\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\n//FIXME: Use SIPJS mute() and unmute() ref: http://sipjs.com/api/0.7.0/session/#muteoptions\n\nfunction setStreamMute(stream, val) {\n    var tracks = stream.getAudioTracks();\n    for (var i = 0; i < tracks.length; i++) {\n        tracks[i].enabled = !val;\n    }\n}\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\n////FIXME: Use SIPJS mute() and unmute() ref: http://sipjs.com/api/0.7.0/session/#muteoptions\n\nPhoneLine.prototype.setMuteBoth = function(val) {\n    var self = this;\n    return new Promise(function(resolve, reject) {\n        self.bothMuted = !!val;\n        self.muted = !!val;\n        if (self.onCall) {\n            setStreamMute(self.session.getLocalStreams()[0], self.bothMuted);\n            setStreamMute(self.session.getRemoteStreams()[0], self.bothMuted);\n            val ? self.eventEmitter.emit(EVENT_NAMES.callMute, self) : self.eventEmitter.emit(EVENT_NAMES.callUnmute, self);\n            resolve();\n        }\n        else\n            reject(new Error('No line or no active line'));\n    });\n\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\n//FIXME: Explore send() ref: http://sipjs.com/api/0.7.0/transport/#sendmsg\n\n/* This is a direct and very tightly coupled code. Please, try to avoid using this method if possible */\nPhoneLine.prototype.sendRequest = function(method, body, options) {\n    var self = this;\n    options = options || {};\n\n    if (!this.session.dialog) return;\n\n    var request = new SIP.OutgoingRequest(\n        method,\n        self.session.dialog.remote_target,\n        self.session.ua,\n        {\n            cseq: options.cseq || (self.session.dialog.local_seqnum += 1),\n            call_id: self.session.dialog.id.call_id,\n            from_uri: self.session.dialog.local_uri,\n            from_tag: self.session.dialog.id.local_tag,\n            to_uri: self.session.dialog.remote_uri,\n            to_tag: self.session.dialog.id.remote_tag,\n            route_set: self.session.dialog.route_set,\n            statusCode: options.statusCode,\n            reasonPhrase: options.reasonPhrase\n        },\n        options.extraHeaders || [],\n        body || undefined\n    );\n\n    new SIP.RequestSender({\n        request: request,\n        onRequestTimeout: function() {\n            self.session.onRequestTimeout();\n        },\n        onTransportError: function() {\n            self.session.onTransportError();\n        },\n        receiveResponse: options.receiveResponse || function(response) {\n        }\n    }, self.session.ua).send();\n};\n\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\n//FIXME: should be replaced with __hold()\n//This can be removed\n//Legacy hold uses direct in-dialog messages to trick SIP.js, try to avoid using this method if possible\nPhoneLine.prototype.__legacyHold = function(val) {\n    var self = this;\n    self.onHold = !!val;\n    return new Promise(function(resolve, reject){\n        if (self.onCall && self.session.dialog) {\n            var body = self.session.mediaHandler.peerConnection.localDescription.sdp;\n            if (self.onHold) {\n                //body = body.replace(/c=IN IP4 \\d+\\.\\d+.\\d+.\\d+/, \"c=IN IP4 0.0.0.0\");\n                body = body.replace(/a=sendrecv/, \"a=sendonly\");\n                self.session.mediaHandler.hold();\n                self.session.onhold('local');\n            }\n            else {\n                self.session.mediaHandler.unhold();\n                self.session.onunhold('local');\n            }\n\n            self.sendRequest(SIP.C.INVITE, body, {\n                extraHeaders: [\n                    \"Content-Type: application/sdp\",\n                    \"Contact: \" + self.session.contact,\n                    self._x_userAgent,\n                    self._client_id\n                ],\n                receiveResponse: function(response) {\n                    switch (true) {\n                        case /^1[0-9]{2}$/.test(response.status_code):\n                            break;\n                        case /^2[0-9]{2}$/.test(response.status_code):\n                            resolve();\n                            self.sendRequest(SIP.C.ACK, null, {\n                                cseq: response.cseq\n                            });\n                            break;\n                        default:\n                            reject('Status code is: ' + response.status_code);\n                            self.onHold = !self.onHold;\n                            break;\n                    }\n                }\n            });\n        }\n        else {\n            throw new Error('No line or no active line');\n        }\n    });\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\n\nPhoneLine.prototype.__hold = function(val) {\n    var self = this;\n    return new Promise(function(resolve, reject){\n        function onSucceeded() {\n            resolve();\n            self.eventEmitter.off(EVENT_NAMES.callReinviteFailed, onFailed);\n        }\n\n        function onFailed(e) {\n            reject(e);\n            self.eventEmitter.off(EVENT_NAMES.callReinviteSucceeded, onSucceeded);\n        }\n\n        self.eventEmitter.once(EVENT_NAMES.callReinviteSucceeded, onSucceeded);\n        self.eventEmitter.once(EVENT_NAMES.callReinviteFailed, onFailed);\n\n        val ? self.session.hold() : self.session.unhold();\n    });\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nPhoneLine.prototype.setHold = function(val) {\n    var self = this;\n    return new Promise(function(resolve, reject){\n        self.onHold = !!val;\n        if (self.onCall) {\n            resolve(self.__hold(val).then(function(res) {\n                if (val) {\n                    self.eventEmitter.emit(EVENT_NAMES.callHold, self);\n                } else {\n                    self.eventEmitter.emit(EVENT_NAMES.callUnhold, self);\n                }\n                return res;\n            }).catch(function(e) {\n                self.onHold = !self.onHold;\n                throw e;\n            }));\n        }\n        else\n            reject(new Error('No line or no active line'));\n    });\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nPhoneLine.prototype.isOnHold = function() {\n    return this.onHold;\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nPhoneLine.prototype.isOnMute = function() {\n    return this.muted || this.bothMuted;\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nPhoneLine.prototype.isOnRecord = function() {\n    return this.onRecord;\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nPhoneLine.prototype.getContact = function() {\n    return this.contact;\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nPhoneLine.prototype.getCallDuration = function() {\n    if (this.timeCallStarted) {\n        return (new Date()).getTime() - this.timeCallStarted.getTime();\n    }\n    else {\n        return 0;\n    }\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nPhoneLine.prototype.isIncoming = function() {\n    return this.session.mediaHandler.peerConnection.signalingState !== \"closed\"\n        && !this.session.startTime;\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nPhoneLine.prototype.isClosed = function() {\n    return this.session.status === SIP.Session.C.STATUS_CANCELED || this.session.status === SIP.Session.C.STATUS_TERMINATED;\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nPhoneLine.prototype.hasEarlyMedia = function() {\n    return this.__hasEarlyMedia;\n};\n\n/*--------------------------------------------------------------------------------------------------------------------*/\n\nmodule.exports = PhoneLine;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/phoneLine.js\n ** module id = 37\n ** module chunks = 0\n **/","module.exports = {\n\n    delay: function delay(ms) {\n        return new Promise(function(resolve, reject) {\n            setTimeout(resolve, ms);\n        });\n    },\n\n    defer: function defer() {\n        var deferred = {};\n        deferred.promise = new Promise(function(resolve, reject) {\n            deferred.resolve = resolve;\n            deferred.reject = reject;\n        });\n        return deferred;\n    },\n\n    extend: function extend(dst, src) {\n        src = src || {};\n        dst = dst || {};\n        Object.keys(src).forEach(function(k) {\n            dst[k] = src[k];\n        });\n        return dst;\n    },\n\n    copy: function(src){\n        return this.extend({}, src);\n    },\n\n    uuid: function uuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/utils.js\n ** module id = 38\n ** module chunks = 0\n **/","module.exports = {\n    'message': 'message',\n    'sipConnecting': 'sipConnecting',\n    'sipConnected': 'sipConnected',\n    'sipDisconnected': 'sipDisconnected',\n    'sipRegistered': 'sipRegistered',\n    'sipUnRegistered': 'sipUnregistered',\n    'sipRegistrationFailed': 'sipRegistrationFailed',\n    'incomingCall': 'incomingCall',                     //when incoming call is received\n    'sipIncomingCall': 'sipIncomingCall',               //same as incomingCall\n    'outgoingCall': 'outgoingCall',                     //when the outbound call is initiated\n    'callConnecting': 'callConnecting',                 //when ICE gathering is started\n    'callProgress': 'callProgress',                     //when 1xx provisional message is received (outbound only) or call is accepted, but ACK is still not sent (inbound only)\n    'callStarted': 'callStarted',                       //when ACK is sent\n    'callRejected': 'callRejected',                     //when the call is rejected by its party\n    'callEnded': 'callEnded',                           //when the call had ended without errors (BYE)\n    'callTerminated': 'callTerminated',                 //when the media is terminated, UNSTABLE in SIP.js 0.6.x\n    'callFailed': 'callFailed',                         //when the call is failed because of many different reasons (connection issues, 4xx errors, etc.)\n    'callHold': 'callHold',                             //when the call is put on hold\n    'callUnhold': 'callUnhold',                         //when the call is unholded\n    'callMute': 'callMute',                             //when the call is muted\n    'callUnmute': 'callUnmute',                         //when the call is unmuted\n    'callReplaced': 'callReplaced',                     //when the call has been replaced by an incoming invite\n    'sipRTCSession': 'sipRTCSession',\n    'sipConnectionFailed': 'sipConnectionFailed',\n    'ICEConnected': 'ICEConnected',\n    'ICECompleted': 'ICECompleted',\n    'ICEFailed': 'ICEFailed',\n    'ICEChecking': 'ICEChecking',\n    'ICEClosed': 'ICEClosed',\n    'ICEDisconnected': 'ICEDisconnected',\n    'callReinviteSucceeded': 'callReinviteSucceeded',\n    'callReinviteFailed': 'callReinviteFailed'\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/eventNames.js\n ** module id = 39\n ** module chunks = 0\n **/","var uuid = require('./utils').uuid;\n\nfunction DomAudio(){\n\n    /*\n     * We create audio containers here\n     * Sorry for DOM manipulations inside a service, but it is for the good :)\n     */\n    var LOCAL_AUDIO = document.createElement('video'),\n        REMOTE_AUDIO = document.createElement('video'),\n        LOCAL_AUDIO_ID = 'local_' + uuid(),\n        REMOTE_AUDIO_ID = 'remote_' + uuid();\n\n    LOCAL_AUDIO.setAttribute('id', LOCAL_AUDIO_ID);\n    LOCAL_AUDIO.setAttribute('autoplay', 'true');\n    LOCAL_AUDIO.setAttribute('hidden', 'true');\n    LOCAL_AUDIO.setAttribute('muted', '');\n\n    REMOTE_AUDIO.setAttribute('id', REMOTE_AUDIO_ID);\n    REMOTE_AUDIO.setAttribute('autoplay', 'true');\n    REMOTE_AUDIO.setAttribute('hidden', 'true');\n\n    document.body.appendChild(LOCAL_AUDIO);\n    document.body.appendChild(REMOTE_AUDIO);\n\n    LOCAL_AUDIO.volume = 0;\n\n    this.localAudio = LOCAL_AUDIO;\n    this.remoteAudio = REMOTE_AUDIO;\n    this.localAudioId = LOCAL_AUDIO_ID;\n    this.remoteAudioId = REMOTE_AUDIO_ID;\n\n}\n\nmodule.exports = DomAudio;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/dom.js\n ** module id = 40\n ** module chunks = 0\n **/","'use strict';\n\nvar audio = require('./audio');\n\n/**\n * @param {WebPhone} rcSIPUA\n * @param options\n * @constructor\n */\nfunction AudioHelper(rcSIPUA, options) {\n\n    var self = this;\n\n    options = options || {};\n\n    this._rcSIPUA = rcSIPUA;\n    this._incoming = options.incoming || 'audio/incoming.ogg';\n    this._outgoing = options.outgoing || 'audio/outgoing.ogg';\n    this._audio = {};\n\n    rcSIPUA.on(rcSIPUA.events.incomingCall, function() {\n        self.playIncoming(true);\n    });\n\n    rcSIPUA.on(rcSIPUA.events.outgoingCall, function() {\n        self.playOutgoing(true);\n    });\n\n    rcSIPUA.on(rcSIPUA.events.callProgress, function(session) {\n        if (session.hasEarlyMedia()) {\n            self.playOutgoing(false);\n        }\n    });\n\n    rcSIPUA.on([rcSIPUA.events.callStarted, rcSIPUA.events.callRejected, rcSIPUA.events.callEnded, rcSIPUA.events.callFailed], function() {\n        self.playIncoming(false);\n        self.playOutgoing(false);\n    });\n\n}\n\nAudioHelper.prototype._playSound = function(url, val, volume) {\n\n    if (!this._audio[url]) {\n        if (val) {\n            volume !== undefined && (audio.volume = volume);\n            this._audio[url] = audio.play(url, {loop: true});\n        }\n    } else {\n        if (val) {\n            this._audio[url].reset();\n        }\n        else {\n            this._audio[url].stop();\n        }\n    }\n\n};\n\nAudioHelper.prototype.playIncoming = function(val) {\n    this._playSound(this._incoming, val, 0.5);\n};\n\nAudioHelper.prototype.playOutgoing = function(val) {\n    this._playSound(this._outgoing, val, 1);\n};\n\nmodule.exports = AudioHelper;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/audioHelper.js\n ** module id = 41\n ** module chunks = 0\n **/","var error = console.error;\nvar EventEmitter = require('./emitter');\n\nmodule.exports = {\n\n    play: function(url, options) {\n\n        var emitter = new EventEmitter();\n\n        var audio = new Audio();\n\n        audio.volume = 1;\n\n        audio.addEventListener(\"timeupdate\", function(event) {\n            emitter.emit('progress', {\n                duration: audio.duration,\n                progress: audio.currentTime / audio.duration\n            });\n        });\n\n        audio.addEventListener(\"seeked\", function(event) {\n            emitter.emit('progress', {\n                    duration: audio.duration,\n                    progress: audio.currentTime / audio.duration\n            });\n        });\n        audio.addEventListener(\"ended\", function(event) {\n            emitter.emit('ended');\n        });\n        audio.addEventListener(\"pause\", function(event) {\n            emitter.emit('progress', {\n                    duration: audio.duration,\n                    paused: true,\n                    progress: audio.currentTime / audio.duration\n            });\n        });\n        audio.addEventListener(\"play\", function(event) {\n            emitter.emit('progress', {\n                    duration: audio.duration,\n                    resumed: true,\n                    progress: audio.currentTime / audio.duration\n            });\n        });\n        audio.addEventListener(\"error\", function() {\n            console.log(\"error\", audio.error); //FIXME\n            emitter.emit('error', audio.error);\n        });\n\n        emitter.stop = audio.pause.bind(audio);\n        emitter.pause = audio.pause.bind(audio);\n        emitter.resume = audio.play.bind(audio);\n        emitter.reset = function() {\n            audio.currentTime = 0;\n            audio.play();\n        };\n\n        emitter.duration = function() {\n            return Math.ceil(audio.duration);\n        };\n\n        audio.src = url;\n        audio.load(url);\n\n        if (options) { //FIXME angular.isObject\n            for (var prop in options) {\n                if (prop in audio) {\n                    audio[prop] = options[prop];\n                }\n            }\n        }\n\n        audio.play();\n\n        return emitter;\n\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/audio.js\n ** module id = 42\n ** module chunks = 0\n **/"],"sourceRoot":""}